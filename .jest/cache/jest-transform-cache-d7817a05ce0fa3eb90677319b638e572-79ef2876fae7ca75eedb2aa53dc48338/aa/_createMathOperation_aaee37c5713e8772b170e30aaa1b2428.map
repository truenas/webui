{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_createMathOperation.js","mappings":";;;;;AAAA,0EAA8C;AAC9C,0EAA8C;AAE9C;;;;;;;GAOG;AACH,SAAS,mBAAmB,CAAC,QAAQ,EAAE,YAAY;IACjD,OAAO,UAAS,KAAK,EAAE,KAAK;QAC1B,IAAI,MAAM,CAAC;QACX,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YAC/C,OAAO,YAAY,CAAC;QACtB,CAAC;QACD,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACxB,MAAM,GAAG,KAAK,CAAC;QACjB,CAAC;QACD,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACxB,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;gBACzB,OAAO,KAAK,CAAC;YACf,CAAC;YACD,IAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE,CAAC;gBACzD,KAAK,GAAG,IAAA,0BAAY,EAAC,KAAK,CAAC,CAAC;gBAC5B,KAAK,GAAG,IAAA,0BAAY,EAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;iBAAM,CAAC;gBACN,KAAK,GAAG,IAAA,0BAAY,EAAC,KAAK,CAAC,CAAC;gBAC5B,KAAK,GAAG,IAAA,0BAAY,EAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YACD,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAClC,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;AAED,kBAAe,mBAAmB,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_createMathOperation.js"],"sourcesContent":["import baseToNumber from './_baseToNumber.js';\nimport baseToString from './_baseToString.js';\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nexport default createMathOperation;\n"],"version":3}