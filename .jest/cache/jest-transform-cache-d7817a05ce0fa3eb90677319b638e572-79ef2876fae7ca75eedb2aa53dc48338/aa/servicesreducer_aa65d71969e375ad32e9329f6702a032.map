{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/services/services.reducer.ts","mappings":";;;AAAA,yCAAgE;AAChE,uCAAgD;AAChD,mEAA2D;AAE3D,0EAAqF;AAMxE,QAAA,OAAO,GAAG,IAAA,4BAAmB,EAAU;IAClD,QAAQ,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE;IACjC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,gCAAY,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,gCAAY,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;CAC/F,CAAC,CAAC;AAEU,QAAA,YAAY,GAAkB,eAAO,CAAC,eAAe,CAAC;IACjE,SAAS,EAAE,KAAK;CACjB,CAAC,CAAC;AAEU,QAAA,eAAe,GAAG,IAAA,qBAAa,EAC1C,oBAAY,EAEZ,IAAA,UAAE,EAAC,iCAAc,EAAE,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,MAAM,CAAC,QAAQ,kCAAO,KAAK,KAAE,SAAS,EAAE,IAAI,IAAG,CAAC,EACpG,IAAA,UAAE,EAAC,iCAAc,EAAE,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,SAAS,CAAC;IAC3D,EAAE,EAAE,OAAO,CAAC,EAAE;IACd,OAAO,EAAE,OAAO;CACjB,EAAE,KAAK,CAAC,CAAC,CACX,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/services/services.reducer.ts"],"sourcesContent":["import { EntityState, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport { serviceNames } from 'app/enums/service-name.enum';\nimport { Service } from 'app/interfaces/service.interface';\nimport { serviceChanged, servicesLoaded } from 'app/store/services/services.actions';\n\nexport interface ServicesState extends EntityState<Service> {\n  areLoaded: boolean;\n}\n\nexport const adapter = createEntityAdapter<Service>({\n  selectId: (service) => service.id,\n  sortComparer: (a, b) => serviceNames.get(a.service).localeCompare(serviceNames.get(b.service)),\n});\n\nexport const initialState: ServicesState = adapter.getInitialState({\n  areLoaded: false,\n});\n\nexport const servicesReducer = createReducer(\n  initialState,\n\n  on(servicesLoaded, (state, { services }) => adapter.setAll(services, { ...state, areLoaded: true })),\n  on(serviceChanged, (state, { service }) => adapter.updateOne({\n    id: service.id,\n    changes: service,\n  }, state)),\n);\n"],"version":3}