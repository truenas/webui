{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/modules/encryption/components/zfs-encryption-card/zfs-encryption-card.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/modules/encryption/components/zfs-encryption-card/zfs-encryption-card.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\nimport { Role } from 'app/enums/role.enum';\nimport { DatasetDetails } from 'app/interfaces/dataset.interface';\nimport {\n  EncryptionOptionsDialogData,\n} from 'app/pages/datasets/modules/encryption/components/encryption-options-dialog/encryption-options-dialog-data.interface';\nimport {\n  EncryptionOptionsDialogComponent,\n} from 'app/pages/datasets/modules/encryption/components/encryption-options-dialog/encryption-options-dialog.component';\nimport { ExportAllKeysDialogComponent } from 'app/pages/datasets/modules/encryption/components/export-all-keys-dialog/export-all-keys-dialog.component';\nimport {\n  ExportDatasetKeyDialogComponent,\n} from 'app/pages/datasets/modules/encryption/components/export-dataset-key-dialog/export-dataset-key-dialog.component';\nimport {\n  LockDatasetDialogComponent,\n} from 'app/pages/datasets/modules/encryption/components/lock-dataset-dialog/lock-dataset-dialog.component';\nimport { DatasetTreeStore } from 'app/pages/datasets/store/dataset-store.service';\nimport { isEncryptionRoot, isPasswordEncrypted, isRootDataset } from 'app/pages/datasets/utils/dataset.utils';\n\n// TODO: Add support for exporting all keys on root dataset.\n// TODO: Bug with spaces in dataset name\n@UntilDestroy()\n@Component({\n  selector: 'ix-zfs-encryption-card',\n  templateUrl: './zfs-encryption-card.component.html',\n  styleUrls: ['./zfs-encryption-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZfsEncryptionCardComponent {\n  @Input() dataset: DatasetDetails;\n  @Input() parentDataset: DatasetDetails | undefined;\n\n  constructor(\n    private matDialog: MatDialog,\n    private translate: TranslateService,\n    private datasetStore: DatasetTreeStore,\n  ) { }\n\n  get hasPassphrase(): boolean {\n    return isPasswordEncrypted(this.dataset);\n  }\n\n  get isEncryptionRoot(): boolean {\n    return isEncryptionRoot(this.dataset);\n  }\n\n  get currentStateLabel(): string {\n    if (!this.dataset.encrypted) {\n      return this.translate.instant('Unencrypted');\n    }\n\n    if (this.dataset.locked) {\n      if (!this.isEncryptionRoot) {\n        return this.translate.instant('Locked by ancestor');\n      }\n\n      return this.translate.instant('Locked');\n    }\n\n    return this.translate.instant('Unlocked');\n  }\n\n  get canExportKey(): boolean {\n    return !this.hasPassphrase && this.dataset.key_loaded;\n  }\n\n  get canEdit(): boolean {\n    return this.dataset.encrypted && !this.dataset.locked;\n  }\n\n  get canUnlock(): boolean {\n    return this.isEncryptionRoot && this.dataset.locked && !this.parentDataset?.locked;\n  }\n\n  onEditPressed(): void {\n    const dialog = this.matDialog.open(EncryptionOptionsDialogComponent, {\n      data: {\n        dataset: this.dataset,\n        parent: this.parentDataset,\n      } as EncryptionOptionsDialogData,\n    });\n    dialog\n      .afterClosed()\n      .pipe(filter(Boolean), untilDestroyed(this))\n      .subscribe(() => this.datasetStore.datasetUpdated());\n  }\n\n  onLock(): void {\n    this.matDialog.open(LockDatasetDialogComponent, {\n      data: this.dataset,\n    })\n      .afterClosed()\n      .pipe(filter(Boolean), untilDestroyed(this))\n      .subscribe(() => this.datasetStore.datasetUpdated());\n  }\n\n  onExportKey(): void {\n    this.matDialog.open(ExportDatasetKeyDialogComponent, {\n      data: this.dataset,\n    });\n  }\n\n  onExportAllKeys(): void {\n    this.matDialog.open(ExportAllKeysDialogComponent, {\n      data: this.dataset,\n    });\n  }\n\n  get isRoot(): boolean {\n    return isRootDataset(this.dataset);\n  }\n\n  protected readonly Role = Role;\n}\n"],"version":3}