0fe621a0d50b5e119e121c11719a2ca8
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jest_1 = require("@ngneat/spectator/jest");
const ng_mocks_1 = require("ng-mocks");
const mobile_back_button_component_1 = require("app/modules/buttons/mobile-back-button/mobile-back-button.component");
const app_details_panel_component_1 = require("app/pages/apps/components/installed-apps/app-details-panel/app-details-panel.component");
const app_info_card_component_1 = require("app/pages/apps/components/installed-apps/app-info-card/app-info-card.component");
const app_metadata_card_component_1 = require("app/pages/apps/components/installed-apps/app-metadata-card/app-metadata-card.component");
const app_workloads_card_component_1 = require("app/pages/apps/components/installed-apps/app-workloads-card/app-workloads-card.component");
describe('AppDetailsPanelComponent', () => {
    let spectator;
    const app = {
        id: 'ix-test-app',
        metadata: {},
    };
    const createComponent = (0, jest_1.createComponentFactory)({
        component: app_details_panel_component_1.AppDetailsPanelComponent,
        declarations: [
            (0, ng_mocks_1.MockComponents)(app_info_card_component_1.AppInfoCardComponent, app_workloads_card_component_1.AppWorkloadsCardComponent, app_metadata_card_component_1.AppMetadataCardComponent, mobile_back_button_component_1.MobileBackButtonComponent),
        ],
        providers: [],
    });
    beforeEach(() => {
        spectator = createComponent({
            props: {
                app,
            },
        });
    });
    it('shows a title', () => {
        expect(spectator.query('h2')).toHaveText('Details');
    });
    it('shows all the cards', () => {
        const appInfoCard = spectator.query(app_info_card_component_1.AppInfoCardComponent);
        expect(appInfoCard).toBeTruthy();
        expect(appInfoCard.app).toBe(app);
        const appContainersCard = spectator.query(app_workloads_card_component_1.AppWorkloadsCardComponent);
        expect(appContainersCard).toBeTruthy();
        expect(appContainersCard.app).toStrictEqual(app);
        const appMetadataCard = spectator.query(app_metadata_card_component_1.AppMetadataCardComponent);
        expect(appMetadataCard).toBeTruthy();
        expect(appMetadataCard.appMetadata).toStrictEqual(app.metadata);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3BhZ2VzL2FwcHMvY29tcG9uZW50cy9pbnN0YWxsZWQtYXBwcy9hcHAtZGV0YWlscy1wYW5lbC9hcHAtZGV0YWlscy1wYW5lbC5jb21wb25lbnQuc3BlYy50cyIsIm1hcHBpbmdzIjoiOztBQUNBLGlEQUFnRTtBQUNoRSx1Q0FBMEM7QUFFMUMsc0hBQWdIO0FBQ2hILHdJQUFrSTtBQUNsSSw0SEFBc0g7QUFDdEgsd0lBQWtJO0FBQ2xJLDJJQUFxSTtBQUVySSxRQUFRLENBQUMsMEJBQTBCLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLElBQUksU0FBOEMsQ0FBQztJQUVuRCxNQUFNLEdBQUcsR0FBRztRQUNWLEVBQUUsRUFBRSxhQUFhO1FBQ2pCLFFBQVEsRUFBRSxFQUFFO0tBQ04sQ0FBQztJQUVULE1BQU0sZUFBZSxHQUFHLElBQUEsNkJBQXNCLEVBQUM7UUFDN0MsU0FBUyxFQUFFLHNEQUF3QjtRQUNuQyxZQUFZLEVBQUU7WUFDWixJQUFBLHlCQUFjLEVBQ1osOENBQW9CLEVBQ3BCLHdEQUF5QixFQUN6QixzREFBd0IsRUFDeEIsd0RBQXlCLENBQzFCO1NBQ0Y7UUFDRCxTQUFTLEVBQUUsRUFBRTtLQUNkLENBQUMsQ0FBQztJQUVILFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDZCxTQUFTLEdBQUcsZUFBZSxDQUFDO1lBQzFCLEtBQUssRUFBRTtnQkFDTCxHQUFHO2FBQ0o7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFO1FBQ3ZCLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRTtRQUM3QixNQUFNLFdBQVcsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLDhDQUFvQixDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2pDLE1BQU0sQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRWxDLE1BQU0saUJBQWlCLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyx3REFBeUIsQ0FBQyxDQUFDO1FBQ3JFLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3ZDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFakQsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxzREFBd0IsQ0FBQyxDQUFDO1FBQ2xFLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNyQyxNQUFNLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEUsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvcGFnZXMvYXBwcy9jb21wb25lbnRzL2luc3RhbGxlZC1hcHBzL2FwcC1kZXRhaWxzLXBhbmVsL2FwcC1kZXRhaWxzLXBhbmVsLmNvbXBvbmVudC5zcGVjLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNwZWN0YXRvciB9IGZyb20gJ0BuZ25lYXQvc3BlY3RhdG9yJztcbmltcG9ydCB7IGNyZWF0ZUNvbXBvbmVudEZhY3RvcnkgfSBmcm9tICdAbmduZWF0L3NwZWN0YXRvci9qZXN0JztcbmltcG9ydCB7IE1vY2tDb21wb25lbnRzIH0gZnJvbSAnbmctbW9ja3MnO1xuaW1wb3J0IHsgQXBwIH0gZnJvbSAnYXBwL2ludGVyZmFjZXMvYXBwLmludGVyZmFjZSc7XG5pbXBvcnQgeyBNb2JpbGVCYWNrQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnYXBwL21vZHVsZXMvYnV0dG9ucy9tb2JpbGUtYmFjay1idXR0b24vbW9iaWxlLWJhY2stYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBEZXRhaWxzUGFuZWxDb21wb25lbnQgfSBmcm9tICdhcHAvcGFnZXMvYXBwcy9jb21wb25lbnRzL2luc3RhbGxlZC1hcHBzL2FwcC1kZXRhaWxzLXBhbmVsL2FwcC1kZXRhaWxzLXBhbmVsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBJbmZvQ2FyZENvbXBvbmVudCB9IGZyb20gJ2FwcC9wYWdlcy9hcHBzL2NvbXBvbmVudHMvaW5zdGFsbGVkLWFwcHMvYXBwLWluZm8tY2FyZC9hcHAtaW5mby1jYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBNZXRhZGF0YUNhcmRDb21wb25lbnQgfSBmcm9tICdhcHAvcGFnZXMvYXBwcy9jb21wb25lbnRzL2luc3RhbGxlZC1hcHBzL2FwcC1tZXRhZGF0YS1jYXJkL2FwcC1tZXRhZGF0YS1jYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBXb3JrbG9hZHNDYXJkQ29tcG9uZW50IH0gZnJvbSAnYXBwL3BhZ2VzL2FwcHMvY29tcG9uZW50cy9pbnN0YWxsZWQtYXBwcy9hcHAtd29ya2xvYWRzLWNhcmQvYXBwLXdvcmtsb2Fkcy1jYXJkLmNvbXBvbmVudCc7XG5cbmRlc2NyaWJlKCdBcHBEZXRhaWxzUGFuZWxDb21wb25lbnQnLCAoKSA9PiB7XG4gIGxldCBzcGVjdGF0b3I6IFNwZWN0YXRvcjxBcHBEZXRhaWxzUGFuZWxDb21wb25lbnQ+O1xuXG4gIGNvbnN0IGFwcCA9IHtcbiAgICBpZDogJ2l4LXRlc3QtYXBwJyxcbiAgICBtZXRhZGF0YToge30sXG4gIH0gYXMgQXBwO1xuXG4gIGNvbnN0IGNyZWF0ZUNvbXBvbmVudCA9IGNyZWF0ZUNvbXBvbmVudEZhY3Rvcnkoe1xuICAgIGNvbXBvbmVudDogQXBwRGV0YWlsc1BhbmVsQ29tcG9uZW50LFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgTW9ja0NvbXBvbmVudHMoXG4gICAgICAgIEFwcEluZm9DYXJkQ29tcG9uZW50LFxuICAgICAgICBBcHBXb3JrbG9hZHNDYXJkQ29tcG9uZW50LFxuICAgICAgICBBcHBNZXRhZGF0YUNhcmRDb21wb25lbnQsXG4gICAgICAgIE1vYmlsZUJhY2tCdXR0b25Db21wb25lbnQsXG4gICAgICApLFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXSxcbiAgfSk7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgc3BlY3RhdG9yID0gY3JlYXRlQ29tcG9uZW50KHtcbiAgICAgIHByb3BzOiB7XG4gICAgICAgIGFwcCxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdzaG93cyBhIHRpdGxlJywgKCkgPT4ge1xuICAgIGV4cGVjdChzcGVjdGF0b3IucXVlcnkoJ2gyJykpLnRvSGF2ZVRleHQoJ0RldGFpbHMnKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3dzIGFsbCB0aGUgY2FyZHMnLCAoKSA9PiB7XG4gICAgY29uc3QgYXBwSW5mb0NhcmQgPSBzcGVjdGF0b3IucXVlcnkoQXBwSW5mb0NhcmRDb21wb25lbnQpO1xuICAgIGV4cGVjdChhcHBJbmZvQ2FyZCkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChhcHBJbmZvQ2FyZC5hcHApLnRvQmUoYXBwKTtcblxuICAgIGNvbnN0IGFwcENvbnRhaW5lcnNDYXJkID0gc3BlY3RhdG9yLnF1ZXJ5KEFwcFdvcmtsb2Fkc0NhcmRDb21wb25lbnQpO1xuICAgIGV4cGVjdChhcHBDb250YWluZXJzQ2FyZCkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChhcHBDb250YWluZXJzQ2FyZC5hcHApLnRvU3RyaWN0RXF1YWwoYXBwKTtcblxuICAgIGNvbnN0IGFwcE1ldGFkYXRhQ2FyZCA9IHNwZWN0YXRvci5xdWVyeShBcHBNZXRhZGF0YUNhcmRDb21wb25lbnQpO1xuICAgIGV4cGVjdChhcHBNZXRhZGF0YUNhcmQpLnRvQmVUcnV0aHkoKTtcbiAgICBleHBlY3QoYXBwTWV0YWRhdGFDYXJkLmFwcE1ldGFkYXRhKS50b1N0cmljdEVxdWFsKGFwcC5tZXRhZGF0YSk7XG4gIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=