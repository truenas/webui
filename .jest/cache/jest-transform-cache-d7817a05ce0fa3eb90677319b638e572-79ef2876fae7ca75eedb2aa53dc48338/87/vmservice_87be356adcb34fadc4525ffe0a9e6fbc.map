{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/vm.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/vm.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject, filter, Observable, repeat, Subject, switchMap, take,\n} from 'rxjs';\nimport { VmState } from 'app/enums/vm.enum';\nimport { WebSocketErrorName } from 'app/enums/websocket-error-name.enum';\nimport { WINDOW } from 'app/helpers/window.helper';\nimport { helptextVmList } from 'app/helptext/vm/vm-list';\nimport { ApiCallParams } from 'app/interfaces/api/api-call-directory.interface';\nimport {\n  VirtualizationDetails,\n  VirtualMachine,\n  VirtualMachineUpdate,\n  VmDisplayWebUriParams,\n  VmDisplayWebUriParamsOptions,\n} from 'app/interfaces/virtual-machine.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { AppLoaderService } from 'app/modules/loader/app-loader.service';\nimport { StopVmDialogComponent, StopVmDialogData } from 'app/pages/vm/vm-list/stop-vm-dialog/stop-vm-dialog.component';\nimport { DownloadService } from 'app/services/download.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@Injectable({ providedIn: 'root' })\nexport class VmService {\n  hasVirtualizationSupport$ = new BehaviorSubject<boolean>(true);\n  refreshVmList$ = new Subject<void>();\n  private checkMemory$ = new Subject<void>();\n\n  private wsMethods = {\n    start: 'vm.start',\n    restart: 'vm.restart',\n    poweroff: 'vm.poweroff',\n  } as const;\n\n  constructor(\n    private ws: WebSocketService,\n    private loader: AppLoaderService,\n    private dialogService: DialogService,\n    private translate: TranslateService,\n    private errorHandler: ErrorHandlerService,\n    private download: DownloadService,\n    private matDialog: MatDialog,\n    @Inject(WINDOW) private window: Window,\n  ) {\n    this.getVirtualizationDetails().pipe(take(1)).subscribe((details) => {\n      this.hasVirtualizationSupport$.next(details.supported);\n    });\n  }\n\n  getVirtualizationDetails(): Observable<VirtualizationDetails> {\n    return this.ws.call('vm.virtualization_details');\n  }\n\n  getAvailableMemory(): Observable<number> {\n    return this.ws.call('vm.get_available_memory').pipe(\n      repeat({ delay: () => this.checkMemory$ }),\n    );\n  }\n\n  checkMemory(): void {\n    this.checkMemory$.next();\n  }\n\n  doStart(vm: VirtualMachine, overcommit = false): void {\n    if (overcommit) {\n      this.doAction(vm, this.wsMethods.start, [vm.id, { overcommit: true }]);\n    } else {\n      this.doAction(vm, this.wsMethods.start);\n    }\n  }\n\n  doStop(vm: VirtualMachine): void {\n    this.matDialog.open<StopVmDialogComponent, unknown, StopVmDialogData>(StopVmDialogComponent, { data: vm })\n      .afterClosed()\n      .pipe(filter(Boolean), take(1))\n      .subscribe((data) => {\n        this.doStopJob(vm, data.forceAfterTimeout);\n      });\n  }\n\n  doRestart(vm: VirtualMachine): Observable<number> {\n    return this.ws.startJob(this.wsMethods.restart, [vm.id]).pipe(this.loader.withLoader());\n  }\n\n  doPowerOff(vm: VirtualMachine): void {\n    this.doAction(vm, this.wsMethods.poweroff, [vm.id]);\n  }\n\n  downloadLogs(vm: VirtualMachine): Observable<Blob> {\n    const filename = `${vm.id}_${vm.name}.log`;\n    return this.ws.call('core.download', ['vm.log_file_download', [vm.id], filename]).pipe(\n      switchMap(([, url]) => this.download.downloadUrl(url, filename, 'text/plain')),\n    );\n  }\n\n  openDisplay(vm: VirtualMachine): void {\n    this.ws.call('vm.get_display_devices', [vm.id])\n      .pipe(this.loader.withLoader(), take(1))\n      .subscribe({\n        next: () => this.openDisplayWebUri(vm.id),\n        error: (error: unknown) => this.errorHandler.showErrorModal(error),\n      });\n  }\n\n  toggleVmStatus(vm: VirtualMachine): void {\n    if (vm.status.state === VmState.Running) {\n      this.doStop(vm);\n    } else {\n      this.doStart(vm);\n    }\n  }\n\n  toggleVmAutostart(vm: VirtualMachine): void {\n    this.ws.call('vm.update', [vm.id, { autostart: !vm.autostart } as VirtualMachineUpdate])\n      .pipe(this.loader.withLoader(), take(1))\n      .subscribe({\n        next: () => {\n          this.checkMemory();\n          this.refreshVmList$.next();\n        },\n        error: (error: WebSocketError) => {\n          this.refreshVmList$.next();\n          this.errorHandler.showErrorModal(error);\n        },\n      });\n  }\n\n  private doAction<T extends 'vm.start' | 'vm.update' | 'vm.poweroff'>(\n    vm: VirtualMachine,\n    method: T,\n    params: ApiCallParams<T> = [vm.id],\n  ): void {\n    this.ws.call(method, params)\n      .pipe(this.loader.withLoader(), take(1))\n      .subscribe({\n        next: () => {\n          this.checkMemory();\n          this.refreshVmList$.next();\n        },\n        error: (error: WebSocketError) => {\n          if (method === this.wsMethods.start\n            && error.errname === WebSocketErrorName.NoMemory) {\n            this.onMemoryError(vm);\n            return;\n          }\n          this.refreshVmList$.next();\n          this.errorHandler.showErrorModal(error);\n        },\n      });\n  }\n\n  private openDisplayWebUri(vmId: number): void {\n    const displayOptions = {\n      protocol: this.window.location.protocol.replace(':', '').toUpperCase(),\n    } as VmDisplayWebUriParamsOptions;\n\n    const requestParams: VmDisplayWebUriParams = [\n      vmId,\n      this.window.location.host,\n      displayOptions,\n    ];\n\n    this.ws.call('vm.get_display_web_uri', requestParams)\n      .pipe(this.loader.withLoader(), take(1))\n      .subscribe({\n        next: (webUri) => {\n          if (webUri.error) {\n            this.dialogService.warn(this.translate.instant('Error'), webUri.error);\n            return;\n          }\n          this.window.open(webUri.uri, '_blank');\n        },\n        error: (error: unknown) => {\n          this.errorHandler.showErrorModal(error);\n        },\n      });\n  }\n\n  private doStopJob(vm: VirtualMachine, forceAfterTimeout: boolean): void {\n    this.dialogService.jobDialog(\n      this.ws.job('vm.stop', [vm.id, {\n        force: false,\n        force_after_timeout: forceAfterTimeout,\n      }]),\n      {\n        title: this.translate.instant('Stopping {rowName}', { rowName: vm.name }),\n      },\n    )\n      .afterClosed()\n      .pipe(\n        this.errorHandler.catchError(),\n        untilDestroyed(this),\n      )\n      .subscribe(() => {\n        this.checkMemory();\n        this.refreshVmList$.next();\n        this.dialogService.info(\n          this.translate.instant('Finished'),\n          this.translate.instant(helptextVmList.stop_dialog.successMessage, { vmName: vm.name }),\n          true,\n        );\n      });\n  }\n\n  private onMemoryError(vm: VirtualMachine): void {\n    this.dialogService.confirm({\n      title: helptextVmList.memory_dialog.title,\n      message: helptextVmList.memory_dialog.message,\n      confirmationCheckboxText: helptextVmList.memory_dialog.secondaryCheckboxMessage,\n      buttonText: helptextVmList.memory_dialog.buttonMessage,\n    })\n      .pipe(filter(Boolean), take(1))\n      .subscribe(() => {\n        this.doStart(vm, true);\n      });\n  }\n}\n"],"version":3}