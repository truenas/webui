{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/network/components/static-route-form/static-route-form.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/network/components/static-route-form/static-route-form.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockCall, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { StaticRoute } from 'app/interfaces/static-route.interface';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { FormErrorHandlerService } from 'app/modules/forms/ix-forms/services/form-error-handler.service';\nimport { IxFormHarness } from 'app/modules/forms/ix-forms/testing/ix-form.harness';\nimport { StaticRouteFormComponent } from 'app/pages/network/components/static-route-form/static-route-form.component';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ndescribe('StaticRouteFormComponent', () => {\n  let spectator: Spectator<StaticRouteFormComponent>;\n  let loader: HarnessLoader;\n  let ws: WebSocketService;\n  const createComponent = createComponentFactory({\n    component: StaticRouteFormComponent,\n    imports: [\n      ReactiveFormsModule,\n    ],\n    providers: [\n      mockWebSocket([\n        mockCall('staticroute.create'),\n        mockCall('staticroute.update'),\n      ]),\n      mockProvider(IxSlideInService),\n      mockProvider(FormErrorHandlerService),\n      mockProvider(IxSlideInRef),\n      mockAuth(),\n      { provide: SLIDE_IN_DATA, useValue: undefined },\n    ],\n  });\n\n  describe('adding a static route', () => {\n    beforeEach(() => {\n      spectator = createComponent();\n      loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n      ws = spectator.inject(WebSocketService);\n    });\n\n    it('sends a create payload to websocket and closes modal when save is pressed', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      await form.fillForm({\n        Destination: '10.24.12.13/16',\n        Gateway: '10.24.12.1',\n        Description: 'My route',\n      });\n\n      const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n      await saveButton.click();\n\n      expect(ws.call).toHaveBeenCalledWith('staticroute.create', [{\n        destination: '10.24.12.13/16',\n        gateway: '10.24.12.1',\n        description: 'My route',\n      }]);\n    });\n  });\n\n  describe('editing a group', () => {\n    beforeEach(() => {\n      spectator = createComponent({\n        providers: [\n          {\n            provide: SLIDE_IN_DATA,\n            useValue: {\n              id: 13,\n              description: 'Existing route',\n              destination: '20.24.12.13/16',\n              gateway: '20.24.12.1',\n            } as StaticRoute,\n          },\n        ],\n      });\n      loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n      ws = spectator.inject(WebSocketService);\n    });\n\n    it('shows current group values when form is being edited', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      const values = await form.getValues();\n\n      expect(values).toEqual({\n        Destination: '20.24.12.13/16',\n        Gateway: '20.24.12.1',\n        Description: 'Existing route',\n      });\n    });\n\n    it('sends an update payload to websocket and closes modal when save is pressed', async () => {\n      const form = await loader.getHarness(IxFormHarness);\n      await form.fillForm({\n        Destination: '15.24.12.13/16',\n        Gateway: '15.24.12.1',\n        Description: 'Updated route',\n      });\n\n      const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n      await saveButton.click();\n\n      expect(ws.call).toHaveBeenCalledWith('staticroute.update', [\n        13,\n        {\n          destination: '15.24.12.13/16',\n          gateway: '15.24.12.1',\n          description: 'Updated route',\n        },\n      ]);\n    });\n  });\n});\n"],"version":3}