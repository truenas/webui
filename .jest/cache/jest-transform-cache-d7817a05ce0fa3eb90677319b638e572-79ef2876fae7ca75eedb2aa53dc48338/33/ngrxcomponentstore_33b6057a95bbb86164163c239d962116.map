{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@ngrx/component-store/fesm2022/ngrx-component-store.mjs"],
  "sourcesContent": ["import { Observable, Subscription, asapScheduler, ReplaySubject, isObservable, of, queueScheduler, EMPTY, throwError, scheduled, combineLatest, Subject } from 'rxjs';\nimport { take, takeUntil, observeOn, tap, withLatestFrom, map, catchError, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, computed, isDevMode, Injectable, Optional, Inject } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\n/**\n * @license MIT License\n *\n * Copyright (c) 2017-2020 Nicholas Jamieson and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nfunction debounceSync() {\n    return (source) => new Observable((observer) => {\n        let actionSubscription;\n        let actionValue;\n        const rootSubscription = new Subscription();\n        rootSubscription.add(source.subscribe({\n            complete: () => {\n                if (actionSubscription) {\n                    observer.next(actionValue);\n                }\n                observer.complete();\n            },\n            error: (error) => {\n                observer.error(error);\n            },\n            next: (value) => {\n                actionValue = value;\n                if (!actionSubscription) {\n                    actionSubscription = asapScheduler.schedule(() => {\n                        observer.next(actionValue);\n                        actionSubscription = undefined;\n                    });\n                    rootSubscription.add(actionSubscription);\n                }\n            },\n        }));\n        return rootSubscription;\n    });\n}\n\n/**\n * Checks to see if the OnInitStore lifecycle hook\n * is defined on the ComponentStore.\n *\n * @param cs ComponentStore type\n * @returns boolean\n */\nfunction isOnStoreInitDefined(cs) {\n    return typeof cs.ngrxOnStoreInit === 'function';\n}\n/**\n * Checks to see if the OnInitState lifecycle hook\n * is defined on the ComponentStore.\n *\n * @param cs ComponentStore type\n * @returns boolean\n */\nfunction isOnStateInitDefined(cs) {\n    return typeof cs.ngrxOnStateInit === 'function';\n}\n/**\n * @description\n *\n * Function that returns the ComponentStore\n * class registered as a provider,\n * and uses a factory provider to instantiate the\n * ComponentStore and run the lifecycle hooks\n * defined on the ComponentStore.\n *\n * @param componentStoreClass The ComponentStore with lifecycle hooks\n * @returns Provider[]\n *\n * @usageNotes\n *\n * ```ts\n * @Injectable()\n * export class MyStore\n *    extends ComponentStore<{ init: boolean }>\n *    implements OnStoreInit, OnStateInit\n *   {\n *\n *   constructor() {\n *     super({ init: true });\n *   }\n *\n *   ngrxOnStoreInit() {\n *     // runs once after store has been instantiated\n *   }\n *\n *   ngrxOnStateInit() {\n *     // runs once after store state has been initialized\n *   }\n * }\n *\n * @Component({\n *   providers: [\n *     provideComponentStore(MyStore)\n *   ]\n * })\n * export class MyComponent {\n *   constructor(private myStore: MyStore) {}\n * }\n * ```\n */\nfunction provideComponentStore(componentStoreClass) {\n    const CS_WITH_HOOKS = new InjectionToken('@ngrx/component-store ComponentStore with Hooks');\n    return [\n        { provide: CS_WITH_HOOKS, useClass: componentStoreClass },\n        {\n            provide: componentStoreClass,\n            useFactory: () => {\n                const componentStore = inject(CS_WITH_HOOKS);\n                // Set private property that CS has been provided with lifecycle hooks\n                componentStore['\u0275hasProvider'] = true;\n                if (isOnStoreInitDefined(componentStore)) {\n                    componentStore.ngrxOnStoreInit();\n                }\n                if (isOnStateInitDefined(componentStore)) {\n                    componentStore.state$\n                        .pipe(take(1))\n                        .subscribe(() => componentStore.ngrxOnStateInit());\n                }\n                return componentStore;\n            },\n        },\n    ];\n}\n\nconst INITIAL_STATE_TOKEN = new InjectionToken('@ngrx/component-store Initial State');\nclass ComponentStore {\n    constructor(defaultState) {\n        // Should be used only in ngOnDestroy.\n        this.destroySubject$ = new ReplaySubject(1);\n        // Exposed to any extending Store to be used for the teardown.\n        this.destroy$ = this.destroySubject$.asObservable();\n        this.stateSubject$ = new ReplaySubject(1);\n        this.isInitialized = false;\n        // Needs to be after destroy$ is declared because it's used in select.\n        this.state$ = this.select((s) => s);\n        this.state = toSignal(this.stateSubject$.pipe(takeUntil(this.destroy$)), { requireSync: false, manualCleanup: true });\n        this.\u0275hasProvider = false;\n        // State can be initialized either through constructor or setState.\n        if (defaultState) {\n            this.initState(defaultState);\n        }\n        this.checkProviderForHooks();\n    }\n    /** Completes all relevant Observable streams. */\n    ngOnDestroy() {\n        this.stateSubject$.complete();\n        this.destroySubject$.next();\n    }\n    /**\n     * Creates an updater.\n     *\n     * Throws an error if updater is called with synchronous values (either\n     * imperative value or Observable that is synchronous) before ComponentStore\n     * is initialized. If called with async Observable before initialization then\n     * state will not be updated and subscription would be closed.\n     *\n     * @param updaterFn A static updater function that takes 2 parameters (the\n     * current state and an argument object) and returns a new instance of the\n     * state.\n     * @return A function that accepts one argument which is forwarded as the\n     *     second argument to `updaterFn`. Every time this function is called\n     *     subscribers will be notified of the state change.\n     */\n    updater(updaterFn) {\n        return ((observableOrValue) => {\n            // We need to explicitly throw an error if a synchronous error occurs.\n            // This is necessary to make synchronous errors catchable.\n            let isSyncUpdate = true;\n            let syncError;\n            // We can receive either the value or an observable. In case it's a\n            // simple value, we'll wrap it with `of` operator to turn it into\n            // Observable.\n            const observable$ = isObservable(observableOrValue)\n                ? observableOrValue\n                : of(observableOrValue);\n            const subscription = observable$\n                .pipe(\n            // Push the value into queueScheduler\n            observeOn(queueScheduler), \n            // If the state is not initialized yet, we'll throw an error.\n            tap(() => this.assertStateIsInitialized()), withLatestFrom(this.stateSubject$), \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            map(([value, currentState]) => updaterFn(currentState, value)), tap((newState) => this.stateSubject$.next(newState)), catchError((error) => {\n                if (isSyncUpdate) {\n                    syncError = error;\n                    return EMPTY;\n                }\n                return throwError(error);\n            }), takeUntil(this.destroy$))\n                .subscribe();\n            if (syncError) {\n                throw syncError;\n            }\n            isSyncUpdate = false;\n            return subscription;\n        });\n    }\n    /**\n     * Initializes state. If it was already initialized then it resets the\n     * state.\n     */\n    initState(state) {\n        scheduled([state], queueScheduler).subscribe((s) => {\n            this.isInitialized = true;\n            this.stateSubject$.next(s);\n        });\n    }\n    /**\n     * Sets the state specific value.\n     * @param stateOrUpdaterFn object of the same type as the state or an\n     * updaterFn, returning such object.\n     */\n    setState(stateOrUpdaterFn) {\n        if (typeof stateOrUpdaterFn !== 'function') {\n            this.initState(stateOrUpdaterFn);\n        }\n        else {\n            this.updater(stateOrUpdaterFn)();\n        }\n    }\n    /**\n     * Patches the state with provided partial state.\n     *\n     * @param partialStateOrUpdaterFn a partial state or a partial updater\n     * function that accepts the state and returns the partial state.\n     * @throws Error if the state is not initialized.\n     */\n    patchState(partialStateOrUpdaterFn) {\n        const patchedState = typeof partialStateOrUpdaterFn === 'function'\n            ? partialStateOrUpdaterFn(this.get())\n            : partialStateOrUpdaterFn;\n        this.updater((state, partialState) => ({\n            ...state,\n            ...partialState,\n        }))(patchedState);\n    }\n    get(projector) {\n        this.assertStateIsInitialized();\n        let value;\n        this.stateSubject$.pipe(take(1)).subscribe((state) => {\n            value = projector ? projector(state) : state;\n        });\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return value;\n    }\n    select(...args) {\n        const { observablesOrSelectorsObject, projector, config } = processSelectorArgs(args);\n        const source$ = hasProjectFnOnly(observablesOrSelectorsObject, projector)\n            ? this.stateSubject$\n            : combineLatest(observablesOrSelectorsObject);\n        return source$.pipe(config.debounce ? debounceSync() : noopOperator(), (projector\n            ? map((projectorArgs) => \n            // projectorArgs could be an Array in case where the entire state is an Array, so adding this check\n            observablesOrSelectorsObject.length >\n                0 && Array.isArray(projectorArgs)\n                ? projector(...projectorArgs)\n                : projector(projectorArgs))\n            : noopOperator()), distinctUntilChanged(config.equal), shareReplay({\n            refCount: true,\n            bufferSize: 1,\n        }), takeUntil(this.destroy$));\n    }\n    selectSignal(...args) {\n        const selectSignalArgs = [...args];\n        const options = typeof selectSignalArgs[args.length - 1] === 'object'\n            ? selectSignalArgs.pop()\n            : {};\n        const projector = selectSignalArgs.pop();\n        const signals = selectSignalArgs;\n        const computation = signals.length === 0\n            ? () => projector(this.state())\n            : () => {\n                const values = signals.map((signal) => signal());\n                return projector(...values);\n            };\n        return computed(computation, options);\n    }\n    /**\n     * Creates an effect.\n     *\n     * This effect is subscribed to throughout the lifecycle of the ComponentStore.\n     * @param generator A function that takes an origin Observable input and\n     *     returns an Observable. The Observable that is returned will be\n     *     subscribed to for the life of the component.\n     * @return A function that, when called, will trigger the origin Observable.\n     */\n    effect(generator) {\n        const origin$ = new Subject();\n        generator(origin$)\n            // tied to the lifecycle \uD83D\uDC47 of ComponentStore\n            .pipe(takeUntil(this.destroy$))\n            .subscribe();\n        return ((observableOrValue) => {\n            const observable$ = isObservable(observableOrValue)\n                ? observableOrValue\n                : of(observableOrValue);\n            return observable$.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n                // any new \uD83D\uDC47 value is pushed into a stream\n                origin$.next(value);\n            });\n        });\n    }\n    /**\n     * Used to check if lifecycle hooks are defined\n     * but not used with provideComponentStore()\n     */\n    checkProviderForHooks() {\n        asapScheduler.schedule(() => {\n            if (isDevMode() &&\n                (isOnStoreInitDefined(this) || isOnStateInitDefined(this)) &&\n                !this.\u0275hasProvider) {\n                const warnings = [\n                    isOnStoreInitDefined(this) ? 'OnStoreInit' : '',\n                    isOnStateInitDefined(this) ? 'OnStateInit' : '',\n                ].filter((defined) => defined);\n                console.warn(`@ngrx/component-store: ${this.constructor.name} has the ${warnings.join(' and ')} ` +\n                    'lifecycle hook(s) implemented without being provided using the ' +\n                    `provideComponentStore(${this.constructor.name}) function. ` +\n                    `To resolve this, provide the component store via provideComponentStore(${this.constructor.name})`);\n            }\n        });\n    }\n    assertStateIsInitialized() {\n        if (!this.isInitialized) {\n            throw new Error(`${this.constructor.name} has not been initialized yet. ` +\n                `Please make sure it is initialized before updating/getting.`);\n        }\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ComponentStore, deps: [{ token: INITIAL_STATE_TOKEN, optional: true }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ComponentStore }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ComponentStore, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INITIAL_STATE_TOKEN]\n                }] }] });\nfunction processSelectorArgs(args) {\n    const selectorArgs = Array.from(args);\n    const defaultEqualityFn = (previous, current) => previous === current;\n    // Assign default values.\n    let config = {\n        debounce: false,\n        equal: defaultEqualityFn,\n    };\n    // Last argument is either config or projector or selectorsObject\n    if (isSelectConfig(selectorArgs[selectorArgs.length - 1])) {\n        config = { ...config, ...selectorArgs.pop() };\n    }\n    // At this point selectorArgs is either projector, selectors with projector or selectorsObject\n    if (selectorArgs.length === 1 && typeof selectorArgs[0] !== 'function') {\n        // this is a selectorsObject\n        return {\n            observablesOrSelectorsObject: selectorArgs[0],\n            projector: undefined,\n            config,\n        };\n    }\n    const projector = selectorArgs.pop();\n    // The Observables to combine, if there are any left.\n    const observables = selectorArgs;\n    return {\n        observablesOrSelectorsObject: observables,\n        projector,\n        config,\n    };\n}\nfunction isSelectConfig(arg) {\n    const typedArg = arg;\n    return (typeof typedArg.debounce !== 'undefined' ||\n        typeof typedArg.equal !== 'undefined');\n}\nfunction hasProjectFnOnly(observablesOrSelectorsObject, projector) {\n    return (Array.isArray(observablesOrSelectorsObject) &&\n        observablesOrSelectorsObject.length === 0 &&\n        projector);\n}\nfunction noopOperator() {\n    return (source$) => source$;\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ComponentStore, INITIAL_STATE_TOKEN, provideComponentStore };\n//# sourceMappingURL=ngrx-component-store.mjs.map\n"],
  "mappings": "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",
  "names": []
}
