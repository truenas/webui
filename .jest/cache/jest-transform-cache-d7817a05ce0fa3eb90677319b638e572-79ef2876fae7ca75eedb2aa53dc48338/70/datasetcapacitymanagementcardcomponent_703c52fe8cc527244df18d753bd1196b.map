{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-capacity-management-card/dataset-capacity-management-card.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-capacity-management-card/dataset-capacity-management-card.component.ts"],"sourcesContent":["import {\n  Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, OnChanges, OnInit,\n} from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { maxBy } from 'lodash-es';\nimport { forkJoin, Subject } from 'rxjs';\nimport {\n  map, take, switchMap, tap,\n} from 'rxjs/operators';\nimport { DatasetType, DatasetQuotaType } from 'app/enums/dataset.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { DatasetDetails } from 'app/interfaces/dataset.interface';\nimport { IxSimpleChanges } from 'app/interfaces/simple-changes.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { datasetCapacityManagementElements } from 'app/pages/datasets/components/dataset-capacity-management-card/dataset-capacity-management-card.elements';\nimport { DatasetCapacitySettingsComponent } from 'app/pages/datasets/components/dataset-capacity-management-card/dataset-capacity-settings/dataset-capacity-settings.component';\nimport { DatasetTreeStore } from 'app/pages/datasets/store/dataset-store.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-dataset-capacity-management-card',\n  templateUrl: './dataset-capacity-management-card.component.html',\n  styleUrls: ['./dataset-capacity-management-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatasetCapacityManagementCardComponent implements OnChanges, OnInit {\n  @Input() dataset: DatasetDetails;\n\n  protected readonly requiredRoles = [Role.DatasetWrite];\n  protected readonly searchableElements = datasetCapacityManagementElements;\n\n  refreshQuotas$ = new Subject<void>();\n  inheritedQuotasDataset: DatasetDetails;\n  isLoadingQuotas = false;\n  userQuotas: number;\n  groupQuotas: number;\n\n  get isFilesystem(): boolean {\n    return this.dataset.type === DatasetType.Filesystem;\n  }\n\n  get isZvol(): boolean {\n    return this.dataset.type === DatasetType.Volume;\n  }\n\n  get checkQuotas(): boolean {\n    return !this.dataset.locked && this.isFilesystem && !this.dataset.readonly;\n  }\n\n  get hasQuota(): boolean {\n    return Boolean(this.dataset?.quota?.parsed);\n  }\n\n  get hasRefQuota(): boolean {\n    return Boolean(this.dataset?.refquota?.parsed);\n  }\n\n  get hasInheritedQuotas(): boolean {\n    return this.inheritedQuotasDataset?.quota?.parsed && this.inheritedQuotasDataset?.id !== this.dataset?.id;\n  }\n\n  constructor(\n    private ws: WebSocketService,\n    private errorHandler: ErrorHandlerService,\n    private cdr: ChangeDetectorRef,\n    private datasetStore: DatasetTreeStore,\n    private slideInService: IxSlideInService,\n    private dialogService: DialogService,\n  ) {}\n\n  ngOnChanges(changes: IxSimpleChanges<this>): void {\n    this.getInheritedQuotas();\n    const selectedDatasetHasChanged = changes?.dataset?.previousValue?.id !== changes?.dataset?.currentValue?.id;\n    if (selectedDatasetHasChanged && this.checkQuotas) {\n      this.refreshQuotas$.next();\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.checkQuotas) {\n      this.initQuotas();\n      this.refreshQuotas$.next();\n    }\n  }\n\n  initQuotas(): void {\n    this.refreshQuotas$.pipe(\n      tap(() => {\n        this.isLoadingQuotas = true;\n        this.cdr.markForCheck();\n      }),\n      switchMap(() => forkJoin([\n        this.ws.call('pool.dataset.get_quota', [this.dataset.id, DatasetQuotaType.User, []]),\n        this.ws.call('pool.dataset.get_quota', [this.dataset.id, DatasetQuotaType.Group, []]),\n      ])),\n      untilDestroyed(this),\n    ).subscribe({\n      next: ([userQuotas, groupQuotas]) => {\n        this.userQuotas = userQuotas.length;\n        this.groupQuotas = groupQuotas.length;\n        this.isLoadingQuotas = false;\n        this.cdr.markForCheck();\n      },\n      error: (error: unknown) => {\n        this.isLoadingQuotas = false;\n        this.dialogService.error(this.errorHandler.parseError(error));\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  getInheritedQuotas(): void {\n    this.datasetStore.selectedBranch$.pipe(\n      map((datasets) => {\n        const datasetWithQuotas = datasets.filter((dataset) => Boolean(dataset?.quota?.parsed));\n        return maxBy(datasetWithQuotas, (dataset) => dataset.quota.parsed);\n      }),\n      take(1),\n      untilDestroyed(this),\n    ).subscribe({\n      next: (dataset) => {\n        this.inheritedQuotasDataset = dataset;\n        this.cdr.markForCheck();\n      },\n      error: (error: unknown) => {\n        this.dialogService.error(this.errorHandler.parseError(error));\n      },\n    });\n  }\n\n  editDataset(): void {\n    this.slideInService\n      .open(DatasetCapacitySettingsComponent, { wide: true, data: this.dataset })\n      .slideInClosed$\n      .pipe(untilDestroyed(this))\n      .subscribe(() => {\n        this.datasetStore.datasetUpdated();\n      });\n  }\n}\n"],"version":3}