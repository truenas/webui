f5c589fb3a184de07ae2236a4bf44bbb
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithLoadingStateErrorComponent = void 0;
const core_1 = require("@angular/core");
const core_2 = require("@ngx-translate/core");
const websocket_helper_1 = require("app/helpers/websocket.helper");
let WithLoadingStateErrorComponent = class WithLoadingStateErrorComponent {
    get errorMessage() {
        const error = this.error;
        if ((0, websocket_helper_1.isWebSocketError)(error)) {
            return (error === null || error === void 0 ? void 0 : error.reason) || error.error.toString();
        }
        if (error instanceof Error) {
            return error.message;
        }
        return '';
    }
};
exports.WithLoadingStateErrorComponent = WithLoadingStateErrorComponent;
WithLoadingStateErrorComponent.propDecorators = {
    error: [{ type: core_1.Input }]
};
exports.WithLoadingStateErrorComponent = WithLoadingStateErrorComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-with-loading-state-error',
        template: require("./with-loading-state-error.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [core_2.TranslateModule],
    })
], WithLoadingStateErrorComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvbG9hZGVyL2RpcmVjdGl2ZXMvd2l0aC1sb2FkaW5nLXN0YXRlL3dpdGgtbG9hZGluZy1zdGF0ZS1lcnJvci93aXRoLWxvYWRpbmctc3RhdGUtZXJyb3IuY29tcG9uZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQUV1QjtBQUN2Qiw4Q0FBc0Q7QUFDdEQsbUVBQWdFO0FBVXpELElBQU0sOEJBQThCLEdBQXBDLE1BQU0sOEJBQThCO0lBR3pDLElBQUksWUFBWTtRQUNkLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDekIsSUFBSSxJQUFBLG1DQUFnQixFQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDNUIsT0FBTyxDQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxNQUFNLEtBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqRCxDQUFDO1FBQ0QsSUFBSSxLQUFLLFlBQVksS0FBSyxFQUFFLENBQUM7WUFDM0IsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO1FBQ3ZCLENBQUM7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7O0FBWlUsd0VBQThCOztvQkFDeEMsWUFBSzs7eUNBREssOEJBQThCO0lBUDFDLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSw2QkFBNkI7UUFDdkMsOERBQXdEO1FBQ3hELGVBQWUsRUFBRSw4QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRSxDQUFDLHNCQUFlLENBQUM7S0FDM0IsQ0FBQztHQUNXLDhCQUE4QixDQWExQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvbW9kdWxlcy9sb2FkZXIvZGlyZWN0aXZlcy93aXRoLWxvYWRpbmctc3RhdGUvd2l0aC1sb2FkaW5nLXN0YXRlLWVycm9yL3dpdGgtbG9hZGluZy1zdGF0ZS1lcnJvci5jb21wb25lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBpc1dlYlNvY2tldEVycm9yIH0gZnJvbSAnYXBwL2hlbHBlcnMvd2Vic29ja2V0LmhlbHBlcic7XG5pbXBvcnQgeyBXZWJTb2NrZXRFcnJvciB9IGZyb20gJ2FwcC9pbnRlcmZhY2VzL3dlYnNvY2tldC1lcnJvci5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpeC13aXRoLWxvYWRpbmctc3RhdGUtZXJyb3InLFxuICB0ZW1wbGF0ZVVybDogJy4vd2l0aC1sb2FkaW5nLXN0YXRlLWVycm9yLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtUcmFuc2xhdGVNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBXaXRoTG9hZGluZ1N0YXRlRXJyb3JDb21wb25lbnQge1xuICBASW5wdXQoKSBlcnJvcjogRXJyb3IgfCBXZWJTb2NrZXRFcnJvcjtcblxuICBnZXQgZXJyb3JNZXNzYWdlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgZXJyb3IgPSB0aGlzLmVycm9yO1xuICAgIGlmIChpc1dlYlNvY2tldEVycm9yKGVycm9yKSkge1xuICAgICAgcmV0dXJuIGVycm9yPy5yZWFzb24gfHwgZXJyb3IuZXJyb3IudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIHJldHVybiBlcnJvci5tZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==