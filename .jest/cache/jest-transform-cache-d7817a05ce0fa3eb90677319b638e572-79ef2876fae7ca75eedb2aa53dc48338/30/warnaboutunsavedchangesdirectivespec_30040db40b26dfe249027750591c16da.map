{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/directives/warn-about-unsaved-changes/warn-about-unsaved-changes.directive.spec.ts","mappings":";;AAAA,0CAAgE;AAChE,iDAEgC;AAChC,+BAAmC;AACnC,sEAAkE;AAClE,uGAAiG;AACjG,iGAA0F;AAE1F,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;IAChD,IAAI,SAAmE,CAAC;IAExE,MAAM,UAAU,GAAG,IAAA,wBAAiB,EAAC;QACnC,SAAS,EAAE,uEAAgC;QAC3C,OAAO,EAAE,CAAC,2BAAmB,CAAC;QAC9B,SAAS,EAAE;YACT,IAAA,mBAAY,EAAC,8BAAa,EAAE;gBAC1B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,IAAI,CAAC,CAAC;aACjC,CAAC;YACF;gBACE,OAAO,EAAE,8BAAY;gBACrB,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;oBACjB,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;oBAChB,cAAc,EAAE,IAAI,cAAO,EAAQ;iBACpC,CAAC;aACH;SACF;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,UAAU,CAAC;;KAEtB,EAAE;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,IAAI,iBAAS,CAAC,EAAE,CAAC;aACxB;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;QAE/C,SAAS,CAAC,aAAa,EAAE,CAAC;QAE1B,SAAS,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE;YACpE,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,8BAAa,CAAC,CAAC;QAEtD,SAAS,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACzD,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/directives/warn-about-unsaved-changes/warn-about-unsaved-changes.directive.spec.ts"],"sourcesContent":["import { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport {\n  createHostFactory, SpectatorHost, mockProvider,\n} from '@ngneat/spectator/jest';\nimport { of, Subject } from 'rxjs';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { WarnAboutUnsavedChangesDirective } from './warn-about-unsaved-changes.directive';\n\ndescribe('WarnAboutUnsavedChangesDirective', () => {\n  let spectator: SpectatorHost<WarnAboutUnsavedChangesDirective<unknown>>;\n\n  const createHost = createHostFactory({\n    component: WarnAboutUnsavedChangesDirective,\n    imports: [ReactiveFormsModule],\n    providers: [\n      mockProvider(DialogService, {\n        confirm: jest.fn(() => of(true)),\n      }),\n      {\n        provide: IxSlideInRef,\n        useFactory: () => ({\n          close: jest.fn(),\n          slideInClosed$: new Subject<void>(),\n        }),\n      },\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createHost(`\n      <form [formGroup]=\"form\" warnAboutUnsavedChanges></form>\n    `, {\n      hostProps: {\n        form: new FormGroup({}),\n      },\n    });\n  });\n\n  it('should emit close event if there are no unsaved changes', () => {\n    spectator.component.formGroup.markAsPristine();\n\n    spectator.detectChanges();\n\n    spectator.component.closeWithConfirmation().subscribe((shouldClose) => {\n      expect(shouldClose).toBe(true);\n    });\n  });\n\n  it('should call confirmation dialog if there are unsaved changes', () => {\n    const dialogService = spectator.inject(DialogService);\n\n    spectator.component.closeWithConfirmation().subscribe(() => {\n      expect(dialogService.confirm).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}