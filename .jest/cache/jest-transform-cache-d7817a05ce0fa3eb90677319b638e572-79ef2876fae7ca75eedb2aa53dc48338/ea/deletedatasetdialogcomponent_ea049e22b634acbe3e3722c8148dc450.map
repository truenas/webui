{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/delete-dataset-dialog/delete-dataset-dialog.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/delete-dataset-dialog/delete-dataset-dialog.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit,\n} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  combineLatest, EMPTY, Observable, of, throwError,\n} from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\nimport { DatasetType } from 'app/enums/dataset.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { DatasetAttachment } from 'app/interfaces/pool-attachment.interface';\nimport { Process } from 'app/interfaces/process.interface';\nimport { VolumesListDataset } from 'app/interfaces/volumes-list-pool.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxValidatorsService } from 'app/modules/forms/ix-forms/services/ix-validators.service';\nimport { AppLoaderService } from 'app/modules/loader/app-loader.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-delete-dataset-dialog',\n  templateUrl: './delete-dataset-dialog.component.html',\n  styleUrls: ['./delete-dataset-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeleteDatasetDialogComponent implements OnInit {\n  readonly requiredRoles = [Role.DatasetDelete];\n\n  attachments: DatasetAttachment[] = [];\n  knownProcesses: Process[] = [];\n  unknownProcesses: Process[] = [];\n\n  form = this.fb.group({\n    confirmDatasetName: ['', [Validators.required]],\n    confirm: [false, Validators.requiredTrue],\n  });\n\n  deleteMessage: string;\n\n  get isZvol(): boolean {\n    return this.dataset.type === DatasetType.Volume;\n  }\n\n  constructor(\n    private loader: AppLoaderService,\n    private fb: FormBuilder,\n    private errorHandler: ErrorHandlerService,\n    private ws: WebSocketService,\n    private dialog: DialogService,\n    private dialogRef: MatDialogRef<DeleteDatasetDialogComponent>,\n    private translate: TranslateService,\n    private cdr: ChangeDetectorRef,\n    private validators: IxValidatorsService,\n    @Inject(MAT_DIALOG_DATA) public dataset: VolumesListDataset,\n  ) {}\n\n  ngOnInit(): void {\n    this.setDeleteMessage();\n    this.setConfirmValidator();\n    this.loadDatasetRelatedEntities();\n  }\n\n  onDelete(): void {\n    this.deleteDataset().pipe(\n      catchError((error: WebSocketError) => {\n        if (error.reason.includes('Device busy')) {\n          return this.askToForceDelete();\n        }\n\n        return throwError(() => error);\n      }),\n      this.loader.withLoader(),\n      tap(() => {\n        this.dialogRef.close(true);\n      }),\n      catchError(this.handleDeleteError.bind(this)),\n      untilDestroyed(this),\n    ).subscribe();\n  }\n\n  private deleteDataset(): Observable<boolean> {\n    return this.ws.call('pool.dataset.delete', [this.dataset.id, { recursive: true }]);\n  }\n\n  private forceDeleteDataset(): Observable<boolean> {\n    return this.ws.call('pool.dataset.delete', [this.dataset.id, { recursive: true, force: true }]);\n  }\n\n  private askToForceDelete(): Observable<unknown> {\n    return this.getForceDeleteConfirmation()\n      .pipe(\n        switchMap((shouldForceDelete: boolean) => {\n          return shouldForceDelete ? this.forceDeleteDataset() : of();\n        }),\n      );\n  }\n\n  private getForceDeleteConfirmation(): Observable<boolean> {\n    return this.dialog.confirm({\n      title: this.translate.instant('Device Busy'),\n      message: this.translate.instant('Force deletion of dataset <i>{datasetName}</i>?', { datasetName: this.dataset.name }),\n      buttonText: this.translate.instant('Force Delete'),\n    });\n  }\n\n  private handleDeleteError(error: { reason: string; stack: string; [key: string]: unknown }): Observable<void> {\n    this.dialog.error({\n      title: this.translate.instant(\n        'Error deleting dataset {datasetName}.',\n        { datasetName: this.dataset.name },\n      ),\n      message: error.reason,\n      backtrace: error.stack,\n    });\n    this.dialogRef.close(true);\n    return EMPTY;\n  }\n\n  private loadDatasetRelatedEntities(): void {\n    combineLatest([\n      this.ws.call('pool.dataset.attachments', [this.dataset.id]),\n      this.ws.call('pool.dataset.processes', [this.dataset.id]),\n    ]).pipe(this.loader.withLoader(), untilDestroyed(this))\n      .subscribe({\n        next: ([attachments, processes]) => {\n          this.attachments = attachments;\n          this.setProcesses(processes);\n\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.dialogRef.close(false);\n          this.dialog.error(this.errorHandler.parseError(error));\n        },\n      });\n  }\n\n  private setProcesses(processes: Process[]): void {\n    processes.forEach((process) => {\n      if (process.service) {\n        return;\n      }\n\n      if (process.name && process.name !== '') {\n        this.knownProcesses.push(process);\n      } else {\n        this.unknownProcesses.push(process);\n      }\n    });\n  }\n\n  private setConfirmValidator(): void {\n    let confirmMessage = this.translate.instant('Enter dataset name to continue.');\n    if (this.isZvol) {\n      confirmMessage = this.translate.instant('Enter zvol name to continue.');\n    }\n\n    this.form.controls.confirmDatasetName.setValidators(\n      this.validators.confirmValidator(\n        this.dataset.name,\n        confirmMessage,\n      ),\n    );\n  }\n\n  private setDeleteMessage(): void {\n    if (this.isZvol) {\n      this.deleteMessage = this.translate.instant(\n        'The <i><b>{name}</b></i> zvol and all snapshots stored with it <b>will be permanently deleted</b>.',\n        { name: this.dataset.name },\n      );\n    } else {\n      this.deleteMessage = this.translate.instant(\n        'The <i><b>{name}</b></i> dataset and all snapshots stored with it <b>will be permanently deleted</b>.',\n        { name: this.dataset.name },\n      );\n    }\n  }\n}\n"],"version":3}