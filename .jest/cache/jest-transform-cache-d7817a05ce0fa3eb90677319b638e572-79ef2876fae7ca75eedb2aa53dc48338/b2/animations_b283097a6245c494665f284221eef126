9ede9deadb4699255af13edc08fab1f7
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var animations_exports = {};
__export(animations_exports, {
  ANIMATION_MODULE_TYPE: () => import_core2.ANIMATION_MODULE_TYPE,
  BrowserAnimationsModule: () => BrowserAnimationsModule,
  NoopAnimationsModule: () => NoopAnimationsModule,
  provideAnimations: () => provideAnimations,
  provideNoopAnimations: () => provideNoopAnimations,
  \u0275InjectableAnimationEngine: () => InjectableAnimationEngine
});
module.exports = __toCommonJS(animations_exports);
var i0 = __toESM(require("@angular/core"), 1);
var import_core = require("@angular/core");
var import_core2 = require("@angular/core");
var import_platform_browser = require("@angular/platform-browser");
var i1 = __toESM(require("@angular/animations/browser"), 1);
var import_browser = require("@angular/animations/browser");
var import_common = require("@angular/common");
/**
 * @license Angular v18.2.4
 * (c) 2010-2024 Google LLC. https://angular.io/
 * License: MIT
 */
const _InjectableAnimationEngine = class _InjectableAnimationEngine extends import_browser.\u0275AnimationEngine {
  // The `ApplicationRef` is injected here explicitly to force the dependency ordering.
  // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they
  // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.
  constructor(doc, driver, normalizer) {
    super(doc, driver, normalizer);
  }
  ngOnDestroy() {
    this.flush();
  }
};
_InjectableAnimationEngine.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: _InjectableAnimationEngine, deps: [{ token: import_common.DOCUMENT }, { token: i1.AnimationDriver }, { token: i1.\u0275AnimationStyleNormalizer }], target: i0.\u0275\u0275FactoryTarget.Injectable });
_InjectableAnimationEngine.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: _InjectableAnimationEngine });
let InjectableAnimationEngine = _InjectableAnimationEngine;
i0.\u0275\u0275ngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: InjectableAnimationEngine, decorators: [{
  type: import_core.Injectable
}], ctorParameters: () => [{ type: Document, decorators: [{
  type: import_core.Inject,
  args: [import_common.DOCUMENT]
}] }, { type: i1.AnimationDriver }, { type: i1.\u0275AnimationStyleNormalizer }] });
function instantiateDefaultStyleNormalizer() {
  return new import_browser.\u0275WebAnimationsStyleNormalizer();
}
function instantiateRendererFactory(renderer, engine, zone) {
  return new import_browser.\u0275AnimationRendererFactory(renderer, engine, zone);
}
const SHARED_ANIMATION_PROVIDERS = [
  { provide: import_browser.\u0275AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },
  { provide: import_browser.\u0275AnimationEngine, useClass: InjectableAnimationEngine },
  {
    provide: import_core.RendererFactory2,
    useFactory: instantiateRendererFactory,
    deps: [import_platform_browser.\u0275DomRendererFactory2, import_browser.\u0275AnimationEngine, import_core.NgZone]
  }
];
const BROWSER_ANIMATIONS_PROVIDERS = [
  { provide: import_browser.AnimationDriver, useFactory: () => new import_browser.\u0275WebAnimationsDriver() },
  { provide: import_core.ANIMATION_MODULE_TYPE, useValue: "BrowserAnimations" },
  ...SHARED_ANIMATION_PROVIDERS
];
const BROWSER_NOOP_ANIMATIONS_PROVIDERS = [
  { provide: import_browser.AnimationDriver, useClass: import_browser.NoopAnimationDriver },
  { provide: import_core.ANIMATION_MODULE_TYPE, useValue: "NoopAnimations" },
  ...SHARED_ANIMATION_PROVIDERS
];
const _BrowserAnimationsModule = class _BrowserAnimationsModule {
  /**
   * Configures the module based on the specified object.
   *
   * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.
   * @see {@link BrowserAnimationsModuleConfig}
   *
   * @usageNotes
   * When registering the `BrowserAnimationsModule`, you can use the `withConfig`
   * function as follows:
   * ```
   * @NgModule({
   *   imports: [BrowserAnimationsModule.withConfig(config)]
   * })
   * class MyNgModule {}
   * ```
   */
  static withConfig(config) {
    return {
      ngModule: _BrowserAnimationsModule,
      providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS : BROWSER_ANIMATIONS_PROVIDERS
    };
  }
};
_BrowserAnimationsModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: _BrowserAnimationsModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule });
_BrowserAnimationsModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: "14.0.0", version: "18.2.4", ngImport: i0, type: _BrowserAnimationsModule, exports: [import_platform_browser.BrowserModule] });
_BrowserAnimationsModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: _BrowserAnimationsModule, providers: BROWSER_ANIMATIONS_PROVIDERS, imports: [import_platform_browser.BrowserModule] });
let BrowserAnimationsModule = _BrowserAnimationsModule;
i0.\u0275\u0275ngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: BrowserAnimationsModule, decorators: [{
  type: import_core.NgModule,
  args: [{
    exports: [import_platform_browser.BrowserModule],
    providers: BROWSER_ANIMATIONS_PROVIDERS
  }]
}] });
function provideAnimations() {
  (0, import_core.\u0275performanceMarkFeature)("NgEagerAnimations");
  return [...BROWSER_ANIMATIONS_PROVIDERS];
}
const _NoopAnimationsModule = class _NoopAnimationsModule {
};
_NoopAnimationsModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: _NoopAnimationsModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule });
_NoopAnimationsModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: "14.0.0", version: "18.2.4", ngImport: i0, type: _NoopAnimationsModule, exports: [import_platform_browser.BrowserModule] });
_NoopAnimationsModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: _NoopAnimationsModule, providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS, imports: [import_platform_browser.BrowserModule] });
let NoopAnimationsModule = _NoopAnimationsModule;
i0.\u0275\u0275ngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: NoopAnimationsModule, decorators: [{
  type: import_core.NgModule,
  args: [{
    exports: [import_platform_browser.BrowserModule],
    providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS
  }]
}] });
function provideNoopAnimations() {
  return [...BROWSER_NOOP_ANIMATIONS_PROVIDERS];
}
