{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/websocket-connection.service.spec.ts","mappings":";;AAAA,mDAA8E;AAC9E,iDAAgF;AAChF,iDAAqC;AACrC,8CAA0E;AAC1E,2EAAyE;AACzE,mEAAyD;AACzD,4FAAuF;AAEvF,MAAM,aAAa,GAAG,qBAAqB,CAAC;AAC5C,IAAI,gBAAiD,CAAC;AACtD,IAAI,eAA4C,CAAC;AAEjD,SAAS,UAAU,CAAI,iBAA4C;IACjE,iBAAiB,CAAC,GAAG,GAAG,aAAa,CAAC;IACtC,gBAAgB,GAAG,iBAAiB,CAAC;IACrC,MAAM,WAAW,GAAG,IAAI,4BAAgB,CAAI,iBAAiB,CAAC,CAAC;IAC/D,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClC,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,IAAI,SAAuD,CAAC;IAC5D,IAAI,eAA0C,CAAC;IAE/C,MAAM,aAAa,GAAG,IAAA,2BAAoB,EAAC;QACzC,OAAO,EAAE,yDAA0B;QACnC,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,4BAAS;gBAClB,UAAU,EAAE,GAAG,EAAE,CAAC,UAAU;aAC7B;SACF;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACd,eAAe,GAAG,EAAE,CAAC;QACrB,SAAS,GAAG,aAAa,EAAE,CAAC;QAC5B,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC;YAC3B,eAAe,GAAG,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAChE,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACrC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnE,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACpE,MAAM,CAAC,OAAO,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpE,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,SAAS,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC5C,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExD,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QACpC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAEhD,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,8CAAsB,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3H,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC1D,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QAExC,SAAS,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC3C,SAAS,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE5C,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACpD,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,aAAa,EAAE,IAAA,mBAAS,EAAC,GAAG,EAAE;QAC/B,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,oBAAI,EAAE,MAAM,CAAC;aACrB,mBAAmB,CAAC,kBAAkB,CAAC;aACvC,mBAAmB,CAAC,kBAAkB,CAAC;aACvC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;QAE3C,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,IAAA,cAAI,EAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAChB,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,uBAAuB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,kBAAkB,EAAE,GAAG,EAAE,8CAAsB,CAAC,IAAI,EAAE,CAAC,CAAC;QACtH,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACtD,IAAA,cAAI,EAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAChB,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,uBAAuB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,kBAAkB,EAAE,GAAG,EAAE,8CAAsB,CAAC,IAAI,EAAE,CAAC,CAAC;QACtH,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACtD,IAAA,cAAI,EAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAChB,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,uBAAuB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,kBAAkB,EAAE,GAAG,EAAE,8CAAsB,CAAC,IAAI,EAAE,CAAC,CAAC;QACtH,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAEtD,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAA,cAAI,EAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAChB,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAEtD,IAAA,8BAAoB,GAAE,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACrE,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QACpC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEpC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEpC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC/D,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QACnE,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAEnE,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC/D,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAChD,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAgB,CAAC,CAAC;QAElE,IAAI,QAAQ,CAAC;QACb,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;QACnE,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAChD,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAgB,CAAC,CAAC;QAElE,IAAI,kBAAkB,CAAC;QACvB,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC;QACvF,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0EAA0E,EAAE,IAAA,mBAAS,EAAC,GAAG,EAAE;QAC5F,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC3C,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAChD,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAgB,CAAC,CAAC;QAClE,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAExC,IAAA,cAAI,EAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxD,MAAM,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAExC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAEvD,IAAA,8BAAoB,GAAE,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,qEAAqE,EAAE,IAAA,mBAAS,EAAC,GAAG,EAAE;QACvF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAC3C,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAW,CAAC,CAAC;QAChD,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,SAAS,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE3C,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAgB,CAAC,CAAC;QAClE,IAAA,cAAI,EAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QAEf,MAAM,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAE3D,IAAI,QAAQ,CAAC;QACb,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;QACnE,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAA,8BAAoB,GAAE,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/websocket-connection.service.spec.ts"],"sourcesContent":["import { discardPeriodicTasks, fakeAsync, tick } from '@angular/core/testing';\nimport { createServiceFactory, SpectatorService } from '@ngneat/spectator/jest';\nimport { UUID } from 'angular2-uuid';\nimport { WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\nimport { OutgoingApiMessageType } from 'app/enums/api-message-type.enum';\nimport { WEBSOCKET } from 'app/helpers/websocket.helper';\nimport { WebSocketConnectionService } from 'app/services/websocket-connection.service';\n\nconst fakeSocketUrl = 'ws://localhost:1234';\nlet fakeSocketConfig: WebSocketSubjectConfig<unknown>;\nlet fakeSocketsList: WebSocketSubject<unknown>[];\n\nfunction fakeSocket<T>(urlConfigOrSource: WebSocketSubjectConfig<T>): WebSocketSubject<unknown> {\n  urlConfigOrSource.url = fakeSocketUrl;\n  fakeSocketConfig = urlConfigOrSource;\n  const fakeSocket$ = new WebSocketSubject<T>(urlConfigOrSource);\n  fakeSocketsList.push(fakeSocket$);\n  return fakeSocket$;\n}\n\ndescribe('WebSocketConnectionService', () => {\n  let spectator: SpectatorService<WebSocketConnectionService>;\n  let nextFakeSocket$: WebSocketSubject<unknown>;\n\n  const createService = createServiceFactory({\n    service: WebSocketConnectionService,\n    providers: [\n      {\n        provide: WEBSOCKET,\n        useFactory: () => fakeSocket,\n      },\n    ],\n  });\n\n  beforeEach(() => {\n    fakeSocketsList = [];\n    spectator = createService();\n    if (fakeSocketsList.length) {\n      nextFakeSocket$ = fakeSocketsList[fakeSocketsList.length - 1];\n    }\n  });\n\n  it('checks socket config params', () => {\n    expect(fakeSocketConfig.url).toBe(fakeSocketUrl);\n    expect(typeof fakeSocketConfig.openObserver.next).toBe('function');\n    expect(fakeSocketConfig.openObserver.next.name).toContain('onOpen');\n    expect(typeof fakeSocketConfig.closeObserver.next).toBe('function');\n    expect(fakeSocketConfig.closeObserver.next.name).toContain('onClose');\n  });\n\n  it('sets shutDownInProgress to false when open connection', () => {\n    spectator.service.shutDownInProgress = true;\n    expect(spectator.service.shutDownInProgress).toBe(true);\n\n    fakeSocketConfig.openObserver.next({} as Event);\n    expect(spectator.service.shutDownInProgress).toBe(false);\n  });\n\n  it('sends connect message', () => {\n    jest.spyOn(nextFakeSocket$, 'next');\n    fakeSocketConfig.openObserver.next({} as Event);\n\n    expect(nextFakeSocket$.next).toHaveBeenCalledWith({ support: ['1'], version: '1', msg: OutgoingApiMessageType.Connect });\n  });\n\n  it('closes connection when isTryingReconnect is true', () => {\n    jest.spyOn(nextFakeSocket$, 'next');\n    jest.spyOn(nextFakeSocket$, 'complete');\n\n    spectator.service.isTryingReconnect = true;\n    spectator.service.shutDownInProgress = true;\n\n    fakeSocketConfig.openObserver.next({} as Event);\n    expect(spectator.service.shutDownInProgress).toBe(true);\n    expect(nextFakeSocket$.next).not.toHaveBeenCalled();\n    expect(nextFakeSocket$.complete).toHaveBeenCalled();\n  });\n\n  it('sends pings', fakeAsync(() => {\n    jest.spyOn(nextFakeSocket$, 'next');\n    jest.spyOn(UUID, 'UUID')\n      .mockReturnValueOnce('ping-pong-uuid-1')\n      .mockReturnValueOnce('ping-pong-uuid-2')\n      .mockReturnValueOnce('ping-pong-uuid-3');\n\n    spectator.service.isConnected$.next(true);\n\n    tick(20 * 1000);\n    expect(nextFakeSocket$.next).toHaveBeenNthCalledWith(1, { id: 'ping-pong-uuid-1', msg: OutgoingApiMessageType.Ping });\n    expect(nextFakeSocket$.next).toHaveBeenCalledTimes(1);\n    tick(20 * 1000);\n    expect(nextFakeSocket$.next).toHaveBeenNthCalledWith(2, { id: 'ping-pong-uuid-2', msg: OutgoingApiMessageType.Ping });\n    expect(nextFakeSocket$.next).toHaveBeenCalledTimes(2);\n    tick(20 * 1000);\n    expect(nextFakeSocket$.next).toHaveBeenNthCalledWith(3, { id: 'ping-pong-uuid-3', msg: OutgoingApiMessageType.Ping });\n    expect(nextFakeSocket$.next).toHaveBeenCalledTimes(3);\n\n    spectator.service.isConnected$.next(false);\n    tick(20 * 1000);\n    expect(nextFakeSocket$.next).toHaveBeenCalledTimes(3);\n\n    discardPeriodicTasks();\n  }));\n\n  it('resumes calls that were paused because of broken connection', () => {\n    jest.spyOn(nextFakeSocket$, 'next');\n    spectator.service.isConnected$.next(true);\n    spectator.service.send('message-1');\n\n    spectator.service.isConnected$.next(false);\n    spectator.service.send('message-2');\n    spectator.service.send('message-3');\n\n    expect(nextFakeSocket$.next).toHaveBeenCalledWith('message-1');\n    expect(nextFakeSocket$.next).not.toHaveBeenCalledWith('message-2');\n    expect(nextFakeSocket$.next).not.toHaveBeenCalledWith('message-3');\n\n    spectator.service.isConnected$.next(true);\n    expect(nextFakeSocket$.next).toHaveBeenCalledWith('message-2');\n    expect(nextFakeSocket$.next).toHaveBeenCalledWith('message-3');\n  });\n\n  it('sets isClosed when close connection and isTryingReconnect is false', () => {\n    fakeSocketConfig.openObserver.next({} as Event);\n    spectator.service.isConnected$.next(true);\n\n    fakeSocketConfig.closeObserver.next({ code: 1006 } as CloseEvent);\n\n    let isClosed;\n    spectator.service.isClosed$.subscribe((value) => isClosed = value);\n    expect(isClosed).toBe(true);\n  });\n\n  it('sets isAccessRestricted when close connection with code 1008', () => {\n    fakeSocketConfig.openObserver.next({} as Event);\n    spectator.service.isConnected$.next(true);\n\n    fakeSocketConfig.closeObserver.next({ code: 1008 } as CloseEvent);\n\n    let isAccessRestricted;\n    spectator.service.isAccessRestricted$.subscribe((value) => isAccessRestricted = value);\n    expect(isAccessRestricted).toBe(true);\n  });\n\n  it('trying to reconnect when close connection and isTryingReconnect is false', fakeAsync(() => {\n    jest.spyOn(fakeSocketsList[0], 'complete');\n    fakeSocketConfig.openObserver.next({} as Event);\n    spectator.service.isConnected$.next(true);\n\n    fakeSocketConfig.closeObserver.next({ code: 1006 } as CloseEvent);\n    expect(spectator.service.isTryingReconnect).toBe(true);\n    expect(fakeSocketsList).toHaveLength(1);\n\n    tick(5 * 1000);\n    expect(spectator.service.isTryingReconnect).toBe(false);\n    expect(fakeSocketsList).toHaveLength(2);\n\n    expect(fakeSocketsList[0].complete).toHaveBeenCalled();\n\n    discardPeriodicTasks();\n  }));\n\n  it('ignores closing when close connection and isTryingReconnect is true', fakeAsync(() => {\n    jest.spyOn(fakeSocketsList[0], 'complete');\n    fakeSocketConfig.openObserver.next({} as Event);\n    spectator.service.isConnected$.next(true);\n    spectator.service.isTryingReconnect = true;\n\n    fakeSocketConfig.closeObserver.next({ code: 1006 } as CloseEvent);\n    tick(5 * 1000);\n\n    expect(fakeSocketsList).toHaveLength(1);\n    expect(fakeSocketsList[0].complete).not.toHaveBeenCalled();\n\n    let isClosed;\n    spectator.service.isClosed$.subscribe((value) => isClosed = value);\n    expect(isClosed).toBe(false);\n\n    discardPeriodicTasks();\n  }));\n});\n"],"version":3}