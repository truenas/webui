{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/interfaces/column-component.class.ts","mappings":";;;AAAA,wCAAuD;AAIvD,MAAsB,eAAe;IAArC;QAWE,WAAM,GAAG,KAAK,CAAC;QASL,QAAG,GAAsB,IAAA,aAAM,EAAC,IAAS,CAAC,CAAC;QAErD,WAAM,GAAG,CAAC,GAAM,EAAQ,EAAE;YACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,GAAM,EAAU,EAAE;;YAChC,OAAO,CAAA,MAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0CAAE,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC;IACJ,CAAC;IAhBC,IAAI,KAAK;QACP,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACnC,CAAC;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChE,CAAC;CAWF;AA7BD,0CA6BC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/interfaces/column-component.class.ts"],"sourcesContent":["import { signal, WritableSignal } from '@angular/core';\nimport { MutableKeys } from 'utility-types';\nimport { DataProvider } from 'app/modules/ix-table/interfaces/data-provider.interface';\n\nexport abstract class ColumnComponent<T> {\n  propertyName?: keyof T;\n  title?: string;\n  headerTooltip?: string;\n  cssClass?: string;\n  uniqueRowTag: (row: T) => string;\n  ariaLabels: (row: T) => string[];\n  sortBy?: (row: T) => string | number;\n  disableSorting?: boolean;\n  dataProvider?: DataProvider<T>;\n  getValue?: (row: T) => unknown;\n  hidden = false;\n\n  get value(): unknown {\n    if (this.getValue) {\n      return this.getValue(this.row());\n    }\n    return this.propertyName ? this.row()[this.propertyName] : '';\n  }\n\n  protected row: WritableSignal<T> = signal(null as T);\n\n  setRow = (row: T): void => {\n    this.row.set(row);\n  };\n\n  getAriaLabel = (row: T): string => {\n    return this.ariaLabels(row)?.join(' ') || (this.title ? this.title : '');\n  };\n}\n\nexport type Column<T, C extends ColumnComponent<T>> = {\n  type?: new () => C;\n  headerType?: new () => C;\n} & Partial<C>;\n\nexport type ColumnKeys<T> = MutableKeys<ColumnComponent<T>>;\n"],"version":3}