{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/dialog/components/redirect-dialog/redirect-dialog.component.ts","mappings":";;;;;;;;;AAAA,sDAAuD;AACvD,wCAEuB;AACvB,qDAAqD;AACrD,qDAEkC;AAClC,8CAAsD;AACtD,uEAAmE;AACnE,qFAE0C;AAkBnC,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAGlC,YACS,SAAgD,EACvB,IAAwB;QADjD,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAoB;IACvD,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QAC/B,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;;AAZU,0DAAuB;;;sFAK/B,aAAM,SAAC,wBAAe;;;iBAJxB,gBAAS,SAAC,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;kCADvB,uBAAuB;IAhBnC,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,qDAA+C;QAE/C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,uBAAc;YACd,yBAAa;YACb,yBAAgB;YAChB,yBAAgB;YAChB,kBAAS;YACT,sBAAe;YACf,8BAAa;SACd;KACF,CAAC;GACW,uBAAuB,CAanC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/dialog/components/redirect-dialog/redirect-dialog.component.ts"],"sourcesContent":["import { CdkScrollable } from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy, Component, ElementRef, Inject, ViewChild,\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport {\n  MatDialogRef, MAT_DIALOG_DATA, MatDialogTitle, MatDialogContent, MatDialogActions,\n} from '@angular/material/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport {\n  RedirectDialogData,\n} from './redirect-dialog-data.interface';\n\n@Component({\n  selector: 'ix-redirect-dialog',\n  templateUrl: './redirect-dialog.component.html',\n  styleUrls: ['./redirect-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    CdkScrollable,\n    MatDialogContent,\n    MatDialogActions,\n    MatButton,\n    TranslateModule,\n    TestDirective,\n  ],\n})\nexport class RedirectDialogComponent {\n  @ViewChild('el', { static: false }) el: ElementRef<HTMLInputElement>;\n\n  constructor(\n    public dialogRef: MatDialogRef<RedirectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RedirectDialogData,\n  ) {}\n\n  copyToClipboard(): void {\n    this.el.nativeElement.focus();\n    this.el.nativeElement.select();\n    document.execCommand('copy');\n  }\n}\n"],"version":3}