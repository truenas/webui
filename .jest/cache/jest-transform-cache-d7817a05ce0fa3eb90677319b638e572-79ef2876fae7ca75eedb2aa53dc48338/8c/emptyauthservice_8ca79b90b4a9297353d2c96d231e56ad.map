{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/core/testing/utils/empty-auth.service.ts","mappings":";;;AAAA,oGAAyI;AACzI,iEAA6D;AAE7D,MAAa,gBAAgB;IAA7B;QACW,eAAU,GAAG,IAAA,gEAAkC,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAClE,qBAAgB,GAAG,IAAA,gEAAkC,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QACxE,UAAK,GAAG,IAAA,gEAAkC,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAC7D,gBAAW,GAAG,IAAA,gEAAkC,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QACnE,yBAAoB,GAAG,IAAA,gEAAkC,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QACrF,6BAAwB,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAC7E,iCAA4B,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QACjF,mBAAc,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QACnE,UAAK,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAC1D,YAAO,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAC5D,WAAM,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAC3D,gBAAW,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;QAChE,mBAAc,GAAG,IAAA,6DAA+B,EAAC,0BAAW,CAAC,IAAI,CAAC,CAAC;IACrE,CAAC;CAAA;AAdD,4CAcC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/core/testing/utils/empty-auth.service.ts"],"sourcesContent":["import { getMissingInjectionErrorFactory, getMissingInjectionErrorObservable } from 'app/core/testing/utils/missing-injection-factories';\nimport { AuthService } from 'app/services/auth/auth.service';\n\nexport class EmptyAuthService {\n  readonly authToken$ = getMissingInjectionErrorObservable(AuthService.name);\n  readonly isAuthenticated$ = getMissingInjectionErrorObservable(AuthService.name);\n  readonly user$ = getMissingInjectionErrorObservable(AuthService.name);\n  readonly isSysAdmin$ = getMissingInjectionErrorObservable(AuthService.name);\n  readonly userTwoFactorConfig$ = getMissingInjectionErrorObservable(AuthService.name);\n  getGlobalTwoFactorConfig = getMissingInjectionErrorFactory(AuthService.name);\n  globalTwoFactorConfigUpdated = getMissingInjectionErrorFactory(AuthService.name);\n  clearAuthToken = getMissingInjectionErrorFactory(AuthService.name);\n  login = getMissingInjectionErrorFactory(AuthService.name);\n  hasRole = getMissingInjectionErrorFactory(AuthService.name);\n  logout = getMissingInjectionErrorFactory(AuthService.name);\n  refreshUser = getMissingInjectionErrorFactory(AuthService.name);\n  loginWithToken = getMissingInjectionErrorFactory(AuthService.name);\n}\n"],"version":3}