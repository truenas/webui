d3df84b32984299281a7e0534bcc3a22
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonToYaml = jsonToYaml;
exports.yamlToJson = yamlToJson;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
const js_yaml_1 = require("js-yaml");
function jsonToYaml(jsonData) {
    try {
        return (0, js_yaml_1.dump)(jsonData, {
            skipInvalid: true,
            styles: {
                '!!null': 'camelcase',
                '!!bool': 'camelcase',
                '!!float': 'camelcase',
                '!!str': 'camelcase',
                '!!map': 'camelcase',
            },
        });
    }
    catch (error) {
        console.error(error);
        return (0, ngx_translate_extract_marker_1.marker)('Error occurred');
    }
}
function yamlToJson(value) {
    try {
        return (0, js_yaml_1.load)(value);
    }
    catch (error) {
        console.error(error);
        return (0, ngx_translate_extract_marker_1.marker)('Error occurred');
    }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2hlbHBlcnMvanNvbi10by15YW1sLmhlbHBlci50cyIsIm1hcHBpbmdzIjoiOztBQUdBLGdDQWdCQztBQUVELGdDQU9DO0FBNUJELDBGQUFzRTtBQUN0RSxxQ0FBcUM7QUFFckMsU0FBZ0IsVUFBVSxDQUFDLFFBQWlCO0lBQzFDLElBQUksQ0FBQztRQUNILE9BQU8sSUFBQSxjQUFJLEVBQUMsUUFBUSxFQUFFO1lBQ3BCLFdBQVcsRUFBRSxJQUFJO1lBQ2pCLE1BQU0sRUFBRTtnQkFDTixRQUFRLEVBQUUsV0FBVztnQkFDckIsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLFNBQVMsRUFBRSxXQUFXO2dCQUN0QixPQUFPLEVBQUUsV0FBVztnQkFDcEIsT0FBTyxFQUFFLFdBQVc7YUFDckI7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFBLHFDQUFDLEVBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QixDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQWdCLFVBQVUsQ0FBQyxLQUFhO0lBQ3RDLElBQUksQ0FBQztRQUNILE9BQU8sSUFBQSxjQUFJLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JCLE9BQU8sSUFBQSxxQ0FBQyxFQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDN0IsQ0FBQztBQUNILENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2hlbHBlcnMvanNvbi10by15YW1sLmhlbHBlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXJrZXIgYXMgVCB9IGZyb20gJ0BiaWVzYmplcmcvbmd4LXRyYW5zbGF0ZS1leHRyYWN0LW1hcmtlcic7XG5pbXBvcnQgeyBkdW1wLCBsb2FkIH0gZnJvbSAnanMteWFtbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBqc29uVG9ZYW1sKGpzb25EYXRhOiB1bmtub3duKTogc3RyaW5nIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZHVtcChqc29uRGF0YSwge1xuICAgICAgc2tpcEludmFsaWQ6IHRydWUsXG4gICAgICBzdHlsZXM6IHtcbiAgICAgICAgJyEhbnVsbCc6ICdjYW1lbGNhc2UnLFxuICAgICAgICAnISFib29sJzogJ2NhbWVsY2FzZScsXG4gICAgICAgICchIWZsb2F0JzogJ2NhbWVsY2FzZScsXG4gICAgICAgICchIXN0cic6ICdjYW1lbGNhc2UnLFxuICAgICAgICAnISFtYXAnOiAnY2FtZWxjYXNlJyxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgcmV0dXJuIFQoJ0Vycm9yIG9jY3VycmVkJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHlhbWxUb0pzb24odmFsdWU6IHN0cmluZyk6IHVua25vd24ge1xuICB0cnkge1xuICAgIHJldHVybiBsb2FkKHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICByZXR1cm4gVCgnRXJyb3Igb2NjdXJyZWQnKTtcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9