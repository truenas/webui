{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-button-group/ix-button-group.harness.ts","mappings":";;;;;;;;;;;;AAAA,kDAE8B;AAC9B,qEAAsF;AACtF,sGAAiG;AAEjG,kFAA8E;AAM9E,MAAa,oBAAqB,SAAQ,0BAAgB;IAA1D;;QAYE,gCAA2B,GAAG,IAAI,CAAC,UAAU,CAAC,qCAA2B,CAAC,CAAC;QAC3E,iBAAY,GAAG,4BAAY,CAAC;IAgC9B,CAAC;IA1CC,MAAM,CAAC,IAAI,CAAC,OAAoC;QAC9C,OAAO,IAAI,0BAAgB,CAAC,oBAAoB,EAAE,OAAO,CAAC;aACvD,SAAS,CACR,OAAO,EACP,OAAO,CAAC,KAAK,EACb,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,0BAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,CAClF,CAAC;IACN,CAAC;IAKK,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,iCAAc,CAAC,EAAE,CAAC;YAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;KAAA;IAEK,QAAQ;;;YACZ,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/F,OAAO,MAAA,OAAO,CAAC,CAAC,CAAC,0CAAE,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;IAEK,QAAQ,CAAC,KAAa;;YAC1B,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;YAC7F,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACpB,MAAM,IAAI,KAAK,CAAC,wBAAwB,KAAK,SAAS,CAAC,CAAC;YAC1D,CAAC;YAED,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC;KAAA;IAEK,UAAU;;YACd,OAAO,CAAC,MAAM,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;QACjE,CAAC;KAAA;IAEK,UAAU;;YACd,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;YAC9E,OAAO,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAChE,CAAC;KAAA;;AA5CH,oDA6CC;AA5CiB,iCAAY,GAAG,iBAAiB,AAApB,CAAqB","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-button-group/ix-button-group.harness.ts"],"sourcesContent":["import {\n  BaseHarnessFilters, ComponentHarness, HarnessPredicate,\n} from '@angular/cdk/testing';\nimport { MatButtonToggleGroupHarness } from '@angular/material/button-toggle/testing';\nimport { IxLabelHarness } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.harness';\nimport { IxFormControlHarness } from 'app/modules/forms/ix-forms/interfaces/ix-form-control-harness.interface';\nimport { getErrorText } from 'app/modules/forms/ix-forms/utils/harness.utils';\n\nexport interface IxButtonGroupHarnessFilters extends BaseHarnessFilters {\n  label?: string;\n}\n\nexport class IxButtonGroupHarness extends ComponentHarness implements IxFormControlHarness {\n  static readonly hostSelector = 'ix-button-group';\n\n  static with(options: IxButtonGroupHarnessFilters): HarnessPredicate<IxButtonGroupHarness> {\n    return new HarnessPredicate(IxButtonGroupHarness, options)\n      .addOption(\n        'label',\n        options.label,\n        (harness, label) => HarnessPredicate.stringMatches(harness.getLabelText(), label),\n      );\n  }\n\n  getButtonToggleGroupHarness = this.locatorFor(MatButtonToggleGroupHarness);\n  getErrorText = getErrorText;\n\n  async getLabelText(): Promise<string> {\n    const label = await this.locatorForOptional(IxLabelHarness)();\n    if (!label) {\n      return '';\n    }\n    return label.getLabel();\n  }\n\n  async getValue(): Promise<string> {\n    const buttons = await (await this.getButtonToggleGroupHarness()).getToggles({ checked: true });\n    return buttons[0]?.getText();\n  }\n\n  async setValue(value: string): Promise<void> {\n    const buttons = await (await this.getButtonToggleGroupHarness()).getToggles({ text: value });\n    if (!buttons.length) {\n      throw new Error(`No button with text \"${value}\" found`);\n    }\n\n    return buttons[0].check();\n  }\n\n  async isDisabled(): Promise<boolean> {\n    return (await this.getButtonToggleGroupHarness()).isDisabled();\n  }\n\n  async getOptions(): Promise<string[]> {\n    const buttons = await (await this.getButtonToggleGroupHarness()).getToggles();\n    return Promise.all(buttons.map((button) => button.getText()));\n  }\n}\n"],"version":3}