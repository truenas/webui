{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/modules/permissions/containers/permissions-card/permissions-card.component.ts","mappings":";;;;;;;;;AAAA,wCAEuB;AACvB,qDAAqD;AACrD,iDAEgC;AAChC,4CAAyC;AACzC,yDAAqE;AACrE,8CAAwE;AACxE,6DAA8D;AAC9D,qGAAgG;AAChG,2DAAkD;AAClD,+DAAsD;AACtD,yDAAmD;AACnD,mDAA2C;AAK3C,sEAAkE;AAClE,uEAAmE;AACnE,gEAA4D;AAC5D,uEAAmE;AACnE,0JAAoJ;AACpJ,gKAA0J;AAC1J,sKAAgK;AAChK,iHAA4G;AAC5G,0EAAuE;AACvE,8EAAyE;AA6BlE,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IAsBnC,YACU,KAA2B,EAC3B,GAAsB,EACtB,YAAiC,EACjC,aAA4B,EAC5B,MAAc,EACd,SAA2B;QAL3B,UAAK,GAAL,KAAK,CAAsB;QAC3B,QAAG,GAAH,GAAG,CAAmB;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAkB;QAzB5B,kBAAa,GAAG,CAAC,gBAAI,CAAC,YAAY,CAAC,CAAC;QAO7C,gBAAW,GAAgB;YACzB,IAAI,EAAE,2BAAS,CAAC,UAAU;YAC1B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;SACzC,CAAC;QAEF,iCAA4B,GAAgB;YAC1C,IAAI,EAAE,2BAAS,CAAC,UAAU;YAC1B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2BAA2B,CAAC;SAC3D,CAAC;QAEO,YAAO,GAAG,uBAAO,CAAC;IASxB,CAAC;IAEJ,yBAAyB;QACvB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;QAC9E,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3G,CAAC;IACH,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,IAAA,6BAAa,EAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC1E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM;aACd,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC;aAC1B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBACjC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;gBACrB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;gBAEvB,uBAAuB;gBACvB,IAAI,CAAA,MAAA,IAAI,CAAC,GAAG,0CAAE,GAAG,KAAI,IAAI,CAAC,GAAG,CAAC,OAAO,KAAK,uBAAO,CAAC,IAAI,EAAE,CAAC;oBACvD,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;wBAC/B,IAAI,GAAG,CAAC,GAAG,KAAK,wBAAS,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC;4BACpD,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;wBACpC,CAAC;wBACD,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,wBAAS,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK,wBAAS,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC;4BACzF,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;wBACpC,CAAC;oBACH,CAAC;gBACH,CAAC;gBAED,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,CAAC,KAAc,EAAE,EAAE;gBACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;gBACxB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAChE,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACpD,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;;AApFU,4DAAwB;;;;;;;;;;sBAClC,YAAK;;mCADK,wBAAwB;IA3BpC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,sDAA8C;QAE9C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,cAAO;YACP,oBAAa;YACb,mBAAY;YACZ,iDAAsB;YACtB,kBAAS;YACT,8BAAa;YACb,qBAAc;YACd,6CAAuB;YACvB,oEAA+B;YAC/B,gEAA6B;YAC7B,4DAA2B;YAC3B,gCAAc;YACd,sBAAe;YACf,oBAAQ;SACT;QACD,SAAS,EAAE;YACT,6CAAoB;SACrB;KACF,CAAC;GACW,wBAAwB,CAqFpC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/modules/permissions/containers/permissions-card/permissions-card.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, ChangeDetectorRef,\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport {\n  MatCard, MatCardHeader, MatCardTitle, MatCardContent,\n} from '@angular/material/card';\nimport { Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { AclType } from 'app/enums/acl-type.enum';\nimport { EmptyType } from 'app/enums/empty-type.enum';\nimport { NfsAclTag } from 'app/enums/nfs-acl.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { Acl } from 'app/interfaces/acl.interface';\nimport { DatasetDetails } from 'app/interfaces/dataset.interface';\nimport { EmptyConfig } from 'app/interfaces/empty-config.interface';\nimport { FileSystemStat } from 'app/interfaces/filesystem-stat.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { EmptyComponent } from 'app/modules/empty/empty.component';\nimport { CastPipe } from 'app/modules/pipes/cast/cast.pipe';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { ViewNfsPermissionsComponent } from 'app/pages/datasets/modules/permissions/components/view-nfs-permissions/view-nfs-permissions.component';\nimport { ViewPosixPermissionsComponent } from 'app/pages/datasets/modules/permissions/components/view-posix-permissions/view-posix-permissions.component';\nimport { ViewTrivialPermissionsComponent } from 'app/pages/datasets/modules/permissions/components/view-trivial-permissions/view-trivial-permissions.component';\nimport { PermissionsCardStore } from 'app/pages/datasets/modules/permissions/stores/permissions-card.store';\nimport { isRootDataset } from 'app/pages/datasets/utils/dataset.utils';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-permissions-card',\n  templateUrl: 'permissions-card.component.html',\n  styleUrls: ['./permissions-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitle,\n    RequiresRolesDirective,\n    MatButton,\n    TestDirective,\n    MatCardContent,\n    NgxSkeletonLoaderModule,\n    ViewTrivialPermissionsComponent,\n    ViewPosixPermissionsComponent,\n    ViewNfsPermissionsComponent,\n    EmptyComponent,\n    TranslateModule,\n    CastPipe,\n  ],\n  providers: [\n    PermissionsCardStore,\n  ],\n})\nexport class PermissionsCardComponent implements OnInit, OnChanges {\n  @Input() dataset: DatasetDetails;\n\n  readonly requiredRoles = [Role.DatasetWrite];\n\n  isLoading: boolean;\n  isMissingMountpoint: boolean;\n  stat: FileSystemStat;\n  acl: Acl;\n\n  emptyConfig: EmptyConfig = {\n    type: EmptyType.NoPageData,\n    title: this.translate.instant('No Data'),\n  };\n\n  missionMountpointEmptyConfig: EmptyConfig = {\n    type: EmptyType.NoPageData,\n    title: this.translate.instant('Dataset has no mountpoint'),\n  };\n\n  readonly AclType = AclType;\n\n  constructor(\n    private store: PermissionsCardStore,\n    private cdr: ChangeDetectorRef,\n    private errorHandler: ErrorHandlerService,\n    private dialogService: DialogService,\n    private router: Router,\n    private translate: TranslateService,\n  ) {}\n\n  redirectToEditPermissions(): void {\n    if (this.acl.trivial) {\n      this.router.navigate(['/datasets', this.dataset.id, 'permissions', 'edit']);\n    } else {\n      this.router.navigate(['/datasets', 'acl', 'edit'], { queryParams: { path: '/mnt/' + this.dataset.id } });\n    }\n  }\n\n  get canEditPermissions(): boolean {\n    return this.acl && !isRootDataset(this.dataset) && !this.dataset.locked;\n  }\n\n  ngOnChanges(): void {\n    this.loadPermissions();\n  }\n\n  ngOnInit(): void {\n    this.store.state$\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (state) => {\n          this.isLoading = state.isLoading;\n          this.acl = state.acl;\n          this.stat = state.stat;\n\n          // TODO: Move elsewhere\n          if (this.acl?.acl && this.acl.acltype === AclType.Nfs4) {\n            for (const acl of this.acl.acl) {\n              if (acl.tag === NfsAclTag.Owner && acl.who === null) {\n                acl.who = this.acl.uid.toString();\n              }\n              if ((acl.tag === NfsAclTag.Group || acl.tag === NfsAclTag.UserGroup) && acl.who === null) {\n                acl.who = this.acl.gid.toString();\n              }\n            }\n          }\n\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.dialogService.error(this.errorHandler.parseError(error));\n        },\n      });\n  }\n\n  private loadPermissions(): void {\n    this.isMissingMountpoint = !this.dataset.mountpoint;\n    if (this.isMissingMountpoint) {\n      return;\n    }\n    this.store.loadPermissions(this.dataset.mountpoint);\n  }\n}\n"],"version":3}