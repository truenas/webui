{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_baseOrderBy.js","mappings":";;;;;AAAA,kEAAsC;AACtC,gEAAoC;AACpC,0EAA8C;AAC9C,gEAAoC;AACpC,sEAA0C;AAC1C,oEAAwC;AACxC,gFAAoD;AACpD,gEAAqC;AACrC,8DAAmC;AAEnC;;;;;;;;GAQG;AACH,SAAS,WAAW,CAAC,UAAU,EAAE,SAAS,EAAE,MAAM;IAChD,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;QACrB,SAAS,GAAG,IAAA,sBAAQ,EAAC,SAAS,EAAE,UAAS,QAAQ;YAC/C,IAAI,IAAA,oBAAO,EAAC,QAAQ,CAAC,EAAE,CAAC;gBACtB,OAAO,UAAS,KAAK;oBACnB,OAAO,IAAA,qBAAO,EAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACxE,CAAC,CAAA;YACH,CAAC;YACD,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;SAAM,CAAC;QACN,SAAS,GAAG,CAAC,qBAAQ,CAAC,CAAC;IACzB,CAAC;IAED,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,SAAS,GAAG,IAAA,sBAAQ,EAAC,SAAS,EAAE,IAAA,uBAAS,EAAC,0BAAY,CAAC,CAAC,CAAC;IAEzD,IAAI,MAAM,GAAG,IAAA,qBAAO,EAAC,UAAU,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE,UAAU;QAC9D,IAAI,QAAQ,GAAG,IAAA,sBAAQ,EAAC,SAAS,EAAE,UAAS,QAAQ;YAClD,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,OAAO,IAAA,wBAAU,EAAC,MAAM,EAAE,UAAS,MAAM,EAAE,KAAK;QAC9C,OAAO,IAAA,6BAAe,EAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC;AAED,kBAAe,WAAW,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_baseOrderBy.js"],"sourcesContent":["import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n"],"version":3}