{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_overRest.js","mappings":";;;;;AAAA,4DAAgC;AAEhC,wFAAwF;AACxF,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AAEzB;;;;;;;;GAQG;AACH,SAAS,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS;IACtC,KAAK,GAAG,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACtE,OAAO;QACL,IAAI,IAAI,GAAG,SAAS,EAChB,KAAK,GAAG,CAAC,CAAC,EACV,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE,CAAC,CAAC,EAC1C,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAE1B,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC;YACxB,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QACrC,CAAC;QACD,KAAK,GAAG,CAAC,CAAC,CAAC;QACX,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACjC,OAAO,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC;YACvB,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;QACD,SAAS,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,IAAA,mBAAK,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IACtC,CAAC,CAAC;AACJ,CAAC;AAED,kBAAe,QAAQ,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_overRest.js"],"sourcesContent":["import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n"],"version":3}