{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_isFlattenable.js","mappings":";;;;;AAAA,8DAAkC;AAClC,sEAA2C;AAC3C,8DAAmC;AAEnC,iCAAiC;AACjC,IAAI,gBAAgB,GAAG,oBAAM,CAAC,CAAC,CAAC,oBAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC;AAEtE;;;;;;GAMG;AACH,SAAS,aAAa,CAAC,KAAK;IAC1B,OAAO,IAAA,oBAAO,EAAC,KAAK,CAAC,IAAI,IAAA,wBAAW,EAAC,KAAK,CAAC;QACzC,CAAC,CAAC,CAAC,gBAAgB,IAAI,KAAK,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC7D,CAAC;AAED,kBAAe,aAAa,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_isFlattenable.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n"],"version":3}