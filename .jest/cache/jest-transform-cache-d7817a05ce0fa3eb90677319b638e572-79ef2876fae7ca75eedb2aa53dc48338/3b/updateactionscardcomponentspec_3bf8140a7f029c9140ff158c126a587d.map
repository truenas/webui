{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/components/update-actions-card/update-actions-card.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/components/update-actions-card/update-actions-card.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { EventEmitter } from '@angular/core';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { provideMockStore } from '@ngrx/store/testing';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockCall, mockJob, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { JobState } from 'app/enums/job-state.enum';\nimport { SystemUpdateStatus } from 'app/enums/system-update.enum';\nimport { SystemUpdate } from 'app/interfaces/system-update.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { SaveConfigDialogComponent } from 'app/pages/system/general-settings/save-config-dialog/save-config-dialog.component';\nimport { UpdateActionsCardComponent } from 'app/pages/system/update/components/update-actions-card/update-actions-card.component';\nimport { TrainService } from 'app/pages/system/update/services/train.service';\nimport { UpdateService } from 'app/pages/system/update/services/update.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { selectIsHaLicensed } from 'app/store/ha-info/ha-info.selectors';\n\ndescribe('UpdateActionsCardComponent', () => {\n  let spectator: Spectator<UpdateActionsCardComponent>;\n  let loader: HarnessLoader;\n\n  const mockDialogRef = {\n    close: jest.fn(),\n    afterClosed: () => of(true),\n  } as unknown as MatDialogRef<unknown>;\n\n  const createComponent = createComponentFactory({\n    component: UpdateActionsCardComponent,\n    providers: [\n      mockAuth(),\n      mockWebSocket([\n        mockCall('core.get_jobs', []),\n        mockCall('update.check_available', {\n          status: SystemUpdateStatus.Available,\n          changes: [],\n        } as SystemUpdate),\n        mockJob('update.update'),\n      ]),\n      mockProvider(Router),\n      mockProvider(TrainService),\n      mockProvider(SnackbarService),\n      mockProvider(UpdateService, {\n        updatesAvailable$: of(true),\n        updateDownloaded$: of(true),\n        status$: new BehaviorSubject(undefined),\n        error$: new BehaviorSubject(false),\n        packages$: new BehaviorSubject([]),\n      }),\n      mockProvider(SystemGeneralService, {\n        updateRunning: of('false'),\n        updateRunningNoticeSent: new EventEmitter<string>(),\n      }),\n      mockProvider(MatDialog, {\n        open: jest.fn(() => mockDialogRef),\n      }),\n      mockProvider(DialogService, {\n        confirm: jest.fn(() => of({\n          confirmed: true,\n          secondaryCheckbox: true,\n        })),\n        jobDialog: jest.fn(() => ({\n          afterClosed: () => of({}),\n        })),\n      }),\n      provideMockStore({\n        selectors: [{\n          selector: selectIsHaLicensed,\n          value: false,\n        }],\n      }),\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createComponent();\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n  });\n\n  it('shows save configuration dialog and runs update when Apply Pending Update button is pressed', async () => {\n    const applyPendingButton = await loader.getHarness(MatButtonHarness.with({ text: 'Apply Pending update' }));\n    await applyPendingButton.click();\n\n    expect(spectator.inject(MatDialog).open).toHaveBeenCalledWith(SaveConfigDialogComponent, {\n      data: {\n        cancelButton: 'Do not save',\n        saveButton: 'Save Configuration',\n        title: 'Save configuration settings from this machine before updating?',\n      },\n    });\n\n    expect(spectator.inject(DialogService).confirm).toHaveBeenCalledWith({\n      message: 'The system will restart and be briefly unavailable while applying updates. Apply updates and restart?',\n      title: 'Apply Pending Updates',\n    });\n\n    expect(spectator.inject(WebSocketService).job).toHaveBeenCalledWith('update.update', [{ reboot: true, resume: false }]);\n  });\n\n  it('shows save configuration dialog and runs update when Download Updates button is pressed', async () => {\n    const downloadUpdatesButton = await loader.getHarness(MatButtonHarness.with({ text: 'Download Updates' }));\n    await downloadUpdatesButton.click();\n\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('core.get_jobs', [\n      [['method', '=', 'update.update'], ['state', '=', JobState.Running]],\n    ]);\n\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('update.check_available');\n\n    expect(spectator.inject(MatDialog).open).toHaveBeenCalledWith(SaveConfigDialogComponent, {\n      data: {\n        cancelButton: 'Do not save',\n        saveButton: 'Save Configuration',\n        title: 'Save configuration settings from this machine before updating?',\n      },\n    });\n\n    expect(spectator.inject(DialogService).confirm).toHaveBeenCalledWith({\n      buttonText: 'Download',\n      hideCheckbox: true,\n      message: 'Continue with download?',\n      secondaryCheckbox: true,\n      secondaryCheckboxText: 'Apply updates and restart system after downloading.',\n      title: 'Download Update',\n    });\n\n    expect(spectator.inject(WebSocketService).job).toHaveBeenCalledWith('update.update', [{ reboot: true, resume: false }]);\n  });\n\n  it('shows save configuration dialog and redirects to the manual update page when Install Manual Update File button is pressed', async () => {\n    const installManualButton = await loader.getHarness(MatButtonHarness.with({ text: 'Install Manual Update File' }));\n    await installManualButton.click();\n\n    expect(spectator.inject(MatDialog).open).toHaveBeenCalledWith(SaveConfigDialogComponent, {\n      data: {\n        cancelButton: 'Do not save',\n        saveButton: 'Save Configuration',\n        title: 'Save configuration settings from this machine before updating?',\n      },\n    });\n\n    expect(spectator.inject(Router).navigate).toHaveBeenCalledWith(['/system/update/manualupdate']);\n  });\n});\n"],"version":3}