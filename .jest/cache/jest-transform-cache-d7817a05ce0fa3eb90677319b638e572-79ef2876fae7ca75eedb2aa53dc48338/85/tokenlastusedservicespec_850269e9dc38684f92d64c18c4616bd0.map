{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/token-last-used.service.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/token-last-used.service.spec.ts"],"sourcesContent":["import { SpectatorService, createServiceFactory, mockProvider } from '@ngneat/spectator/jest';\nimport { of, Subject } from 'rxjs';\nimport { oneMinuteMillis } from 'app/constants/time.constant';\nimport { mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { WINDOW } from 'app/helpers/window.helper';\nimport { LoggedInUser } from 'app/interfaces/ds-cache.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { TokenLastUsedService } from 'app/services/token-last-used.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ndescribe('TokenLastUsedService', () => {\n  let spectator: SpectatorService<TokenLastUsedService>;\n  const mockLocalStorage = {\n    getItem: jest.fn(),\n    setItem: jest.fn(),\n  };\n  const createService = createServiceFactory({\n    service: TokenLastUsedService,\n    providers: [\n      mockProvider(DialogService),\n      mockProvider(AuthService, {\n        clearAuthToken: jest.fn(),\n        logout: jest.fn().mockReturnValue(new Subject()),\n        user$: new Subject(),\n      }),\n      mockWebSocket(),\n      {\n        provide: WINDOW,\n        useValue: {\n          localStorage: mockLocalStorage,\n          addEventListener: jest.fn(),\n          removeEventListener: jest.fn(),\n        },\n      },\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createService();\n  });\n\n  describe('isTokenWithinTimeline', () => {\n    it('should return false if tokenLastUsed is not set', () => {\n      mockLocalStorage.getItem.mockReturnValue(JSON.stringify(null));\n\n      spectator.service.isTokenWithinTimeline$.subscribe((value) => {\n        expect(value).toBe(false);\n      });\n    });\n\n    it('should return true if tokenLastUsed is within 5 minutes', () => {\n      const now = new Date();\n      const tokenLastUsed = new Date(now.getTime() - 4 * oneMinuteMillis).toISOString();\n      mockLocalStorage.getItem.mockReturnValue(tokenLastUsed);\n\n      spectator.service.isTokenWithinTimeline$.subscribe((value) => {\n        expect(value).toBe(true);\n      });\n    });\n\n    it('should return false if tokenLastUsed is older than 5 minutes', () => {\n      const now = new Date();\n      const tokenLastUsed = new Date(now.getTime() - 20 * oneMinuteMillis).toISOString();\n      mockLocalStorage.getItem.mockReturnValue(tokenLastUsed);\n\n      spectator.service.isTokenWithinTimeline$.subscribe((value) => {\n        expect(value).toBe(false);\n      });\n    });\n  });\n\n  describe('setupTokenLastUsedValue', () => {\n    it('should update tokenLastUsed in localStorage on user and WebSocket activity', () => {\n      const user$ = spectator.inject(AuthService).user$ as Subject<LoggedInUser>;\n      const updateTokenLastUsedSpy = jest.spyOn(spectator.service, 'updateTokenLastUsed');\n      const ws$ = new Subject();\n\n      jest.spyOn(spectator.inject(WebSocketService), 'getWebSocketStream$').mockReturnValue(ws$);\n\n      spectator.service.setupTokenLastUsedValue(of({} as LoggedInUser));\n\n      user$.next({} as LoggedInUser);\n      expect(updateTokenLastUsedSpy).toHaveBeenCalled();\n\n      ws$.next({});\n      expect(updateTokenLastUsedSpy).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}