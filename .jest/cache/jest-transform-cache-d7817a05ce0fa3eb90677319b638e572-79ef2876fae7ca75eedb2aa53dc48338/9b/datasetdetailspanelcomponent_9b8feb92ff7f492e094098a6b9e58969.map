{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-details-panel/dataset-details-panel.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-details-panel/dataset-details-panel.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, Component, computed, input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { filter, take } from 'rxjs';\nimport { DatasetType } from 'app/enums/dataset.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { DatasetDetails } from 'app/interfaces/dataset.interface';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { datasetDetailsPanelElements } from 'app/pages/datasets/components/dataset-details-panel/dataset-details-panel.elements';\nimport { DatasetFormComponent } from 'app/pages/datasets/components/dataset-form/dataset-form.component';\nimport { ZvolFormComponent } from 'app/pages/datasets/components/zvol-form/zvol-form.component';\nimport { DatasetTreeStore } from 'app/pages/datasets/store/dataset-store.service';\nimport { doesDatasetHaveShares, isIocageMounted } from 'app/pages/datasets/utils/dataset.utils';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-dataset-details-panel',\n  templateUrl: './dataset-details-panel.component.html',\n  styleUrls: ['./dataset-details-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatasetDetailsPanelComponent {\n  readonly dataset = input.required<DatasetDetails>();\n  readonly systemDataset = input<string>();\n\n  protected readonly requiredRoles = [Role.DatasetWrite];\n  protected readonly searchableElements = datasetDetailsPanelElements;\n\n  selectedParentDataset$ = this.datasetStore.selectedParentDataset$;\n\n  constructor(\n    private datasetStore: DatasetTreeStore,\n    private router: Router,\n    private slideInService: IxSlideInService,\n  ) { }\n\n  protected readonly hasRoles = computed(() => {\n    return this.dataset().type === DatasetType.Filesystem && !isIocageMounted(this.dataset());\n  });\n\n  protected readonly hasPermissions = computed(() => {\n    return this.hasRoles() && !this.dataset().locked;\n  });\n\n  protected readonly hasChildrenWithShares = computed(() => doesDatasetHaveShares(this.dataset()));\n\n  protected readonly isCapacityAllowed = computed(() => !this.dataset().locked);\n  protected readonly isEncryptionAllowed = computed(() => this.dataset().encrypted);\n  protected readonly ownName = computed(() => this.dataset().name.split('/').slice(-1)[0]);\n\n  protected readonly isZvol = computed(() => this.dataset().type === DatasetType.Volume);\n\n  handleSlideInClosed(slideInRef: IxSlideInRef<unknown>, modalType: unknown): void {\n    slideInRef.slideInClosed$.pipe(untilDestroyed(this))\n      .subscribe((value: { id: string }) => {\n        this.datasetStore.datasetUpdated();\n\n        if ((modalType !== DatasetFormComponent && modalType !== ZvolFormComponent) || !value?.id) {\n          return;\n        }\n\n        this.datasetStore.isLoading$.pipe(filter((isLoading) => !isLoading), take(1), untilDestroyed(this))\n          .subscribe(() => {\n            this.router.navigate(['/datasets', value.id]);\n          });\n      });\n  }\n\n  onAddDataset(): void {\n    const slideInRef = this.slideInService.open(DatasetFormComponent, {\n      wide: true, data: { isNew: true, datasetId: this.dataset().id },\n    });\n    this.handleSlideInClosed(slideInRef, DatasetFormComponent);\n  }\n\n  onAddZvol(): void {\n    const slideInRef = this.slideInService.open(ZvolFormComponent, {\n      data: { isNew: true, parentId: this.dataset().id },\n    });\n    this.handleSlideInClosed(slideInRef, ZvolFormComponent);\n  }\n\n  onCloseMobileDetails(): void {\n    this.router.navigate(['/datasets'], { state: { hideMobileDetails: true } });\n  }\n}\n"],"version":3}