{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/general-settings/upload-config-dialog/upload-config-dialog.component.ts","mappings":";;;;;;;;;AAAA,wCAAmE;AACnE,0CAAiE;AACjE,qDAAqD;AACrD,qDAA0E;AAC1E,4CAAyC;AACzC,2DAAqD;AACrD,yDAAqE;AACrE,8CAAwE;AACxE,qGAAgG;AAChG,mDAA2C;AAC3C,yDAAgF;AAChF,sEAAkE;AAClE,sHAAiH;AACjH,yHAAmH;AACnH,uEAAmE;AACnE,8EAAyE;AACzE,gEAA4D;AAqBrD,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IAStC,YACU,WAAwB,EACxB,MAAc,EACd,SAA2B,EAC3B,MAAqB,EACrB,aAA4B,EAC5B,YAAiC;QALjC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAkB;QAC3B,WAAM,GAAN,MAAM,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QAdlC,kBAAa,GAAG,CAAC,gBAAI,CAAC,SAAS,CAAC,CAAC;QAE1C,SAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,MAAM,EAAE,CAAC,IAAc,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;QAEM,aAAQ,GAAG,+BAAQ,CAAC;IAS1B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,aAAa;aACf,SAAS,CACR,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACtB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,MAAM,EAAE,eAAe;SACxB,CAAC,EACF,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC,EAAE,CACnE;aACA,WAAW,EAAE;aACb,IAAI,CACH,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,EAC9B,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB;aACA,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACP,CAAC;;AAnCU,kEAA2B;;;;;;;;;sCAA3B,2BAA2B;IAnBvC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,0DAAoD;QAEpD,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,uBAAc;YACd,2BAAmB;YACnB,8CAAoB;YACpB,6CAAoB;YACpB,kBAAS;YACT,8BAAa;YACb,uBAAc;YACd,iDAAsB;YACtB,sBAAe;SAChB;KACF,CAAC;GACW,2BAA2B,CAoCvC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/general-settings/upload-config-dialog/upload-config-dialog.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatDialogTitle, MatDialogClose } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { Role } from 'app/enums/role.enum';\nimport { helptextSystemGeneral as helptext } from 'app/helptext/system/general';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { FormActionsComponent } from 'app/modules/forms/ix-forms/components/form-actions/form-actions.component';\nimport { IxFileInputComponent } from 'app/modules/forms/ix-forms/components/ix-file-input/ix-file-input.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { UploadService } from 'app/services/upload.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-upload-config-dialog',\n  templateUrl: './upload-config-dialog.component.html',\n  styleUrls: ['./upload-config-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    ReactiveFormsModule,\n    IxFileInputComponent,\n    FormActionsComponent,\n    MatButton,\n    TestDirective,\n    MatDialogClose,\n    RequiresRolesDirective,\n    TranslateModule,\n  ],\n})\nexport class UploadConfigDialogComponent {\n  readonly requiredRoles = [Role.FullAdmin];\n\n  form = this.formBuilder.group({\n    config: [null as File[], Validators.required],\n  });\n\n  readonly helptext = helptext;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private translate: TranslateService,\n    private upload: UploadService,\n    private dialogService: DialogService,\n    private errorHandler: ErrorHandlerService,\n  ) {}\n\n  onSubmit(): void {\n    this.dialogService\n      .jobDialog(\n        this.upload.uploadAsJob({\n          file: this.form.value.config[0],\n          method: 'config.upload',\n        }),\n        { title: this.translate.instant('Uploading and Applying Config') },\n      )\n      .afterClosed()\n      .pipe(\n        this.errorHandler.catchError(),\n        untilDestroyed(this),\n      )\n      .subscribe(() => {\n        this.router.navigate(['/system-tasks/restart'], { skipLocationChange: true });\n      });\n  }\n}\n"],"version":3}