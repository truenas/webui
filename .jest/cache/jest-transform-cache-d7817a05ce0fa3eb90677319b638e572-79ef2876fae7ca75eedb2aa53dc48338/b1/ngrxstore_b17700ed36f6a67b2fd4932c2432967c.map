{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@ngrx/store/fesm2022/ngrx-store.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, computed, isDevMode, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER, NgModule, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n    for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n        delete REGISTERED_ACTION_TYPES[key];\n    }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n    REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n    if (typeof config === 'function') {\n        return defineType(type, (...args) => ({\n            ...config(...args),\n            type,\n        }));\n    }\n    const as = config ? config._as : 'empty';\n    switch (as) {\n        case 'empty':\n            return defineType(type, () => ({ type }));\n        case 'props':\n            return defineType(type, (props) => ({\n                ...props,\n                type,\n            }));\n        default:\n            throw new Error('Unexpected config.');\n    }\n}\nfunction props() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return { _as: 'props', _p: undefined };\n}\nfunction union(creators) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return undefined;\n}\nfunction defineType(type, creator) {\n    return Object.defineProperty(creator, 'type', {\n        value: type,\n        writable: false,\n    });\n}\n\nfunction capitalize(text) {\n    return (text.charAt(0).toUpperCase() + text.substring(1));\n}\nfunction uncapitalize(text) {\n    return (text.charAt(0).toLowerCase() + text.substring(1));\n}\n\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\nfunction createActionGroup(config) {\n    const { source, events } = config;\n    return Object.keys(events).reduce((actionGroup, eventName) => ({\n        ...actionGroup,\n        [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName]),\n    }), {});\n}\nfunction emptyProps() {\n    return props();\n}\nfunction toActionName(eventName) {\n    return eventName\n        .trim()\n        .split(' ')\n        .map((word, i) => (i === 0 ? uncapitalize(word) : capitalize(word)))\n        .join('');\n}\nfunction toActionType(source, eventName) {\n    return `[${source}] ${eventName}`;\n}\n\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n    constructor() {\n        super({ type: INIT });\n    }\n    next(action) {\n        if (typeof action === 'function') {\n            throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n        }\n        else if (typeof action === 'undefined') {\n            throw new TypeError(`Actions must be objects`);\n        }\n        else if (typeof action.type === 'undefined') {\n            throw new TypeError(`Actions must have a type property`);\n        }\n        super.next(action);\n    }\n    complete() {\n        /* noop */\n    }\n    ngOnDestroy() {\n        super.complete();\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ActionsSubject, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ActionsSubject }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ActionsSubject, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * InjectionToken that registers the global Store.\n * Mainly used to provide a hook that can be injected\n * to ensure the root state is loaded before something\n * that depends on it.\n */\nconst ROOT_STORE_PROVIDER = new InjectionToken('@ngrx/store Root Store Provider');\n/**\n * InjectionToken that registers feature states.\n * Mainly used to provide a hook that can be injected\n * to ensure feature state is loaded before something\n * that depends on it.\n */\nconst FEATURE_STATE_PROVIDER = new InjectionToken('@ngrx/store Feature State Provider');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n    const reducerKeys = Object.keys(reducers);\n    const finalReducers = {};\n    for (let i = 0; i < reducerKeys.length; i++) {\n        const key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    const finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state === undefined ? initialState : state;\n        let hasChanged = false;\n        const nextState = {};\n        for (let i = 0; i < finalReducerKeys.length; i++) {\n            const key = finalReducerKeys[i];\n            const reducer = finalReducers[key];\n            const previousStateForKey = state[key];\n            const nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter((key) => key !== keyToRemove)\n        .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\nfunction compose(...functions) {\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        const last = functions[functions.length - 1];\n        const rest = functions.slice(0, -1);\n        return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        reducerFactory = compose.apply(null, [\n            ...metaReducers,\n            reducerFactory,\n        ]);\n    }\n    return (reducers, initialState) => {\n        const reducer = reducerFactory(reducers);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n    const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0\n        ? compose(...metaReducers)\n        : (r) => r;\n    return (reducer, initialState) => {\n        reducer = reducerFactory(reducer);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\n\nclass ReducerObservable extends Observable {\n}\nclass ReducerManagerDispatcher extends ActionsSubject {\n}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n    get currentReducers() {\n        return this.reducers;\n    }\n    constructor(dispatcher, initialState, reducers, reducerFactory) {\n        super(reducerFactory(reducers, initialState));\n        this.dispatcher = dispatcher;\n        this.initialState = initialState;\n        this.reducers = reducers;\n        this.reducerFactory = reducerFactory;\n    }\n    addFeature(feature) {\n        this.addFeatures([feature]);\n    }\n    addFeatures(features) {\n        const reducers = features.reduce((reducerDict, { reducers, reducerFactory, metaReducers, initialState, key }) => {\n            const reducer = typeof reducers === 'function'\n                ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n                : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n            reducerDict[key] = reducer;\n            return reducerDict;\n        }, {});\n        this.addReducers(reducers);\n    }\n    removeFeature(feature) {\n        this.removeFeatures([feature]);\n    }\n    removeFeatures(features) {\n        this.removeReducers(features.map((p) => p.key));\n    }\n    addReducer(key, reducer) {\n        this.addReducers({ [key]: reducer });\n    }\n    addReducers(reducers) {\n        this.reducers = { ...this.reducers, ...reducers };\n        this.updateReducers(Object.keys(reducers));\n    }\n    removeReducer(featureKey) {\n        this.removeReducers([featureKey]);\n    }\n    removeReducers(featureKeys) {\n        featureKeys.forEach((key) => {\n            this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n        });\n        this.updateReducers(featureKeys);\n    }\n    updateReducers(featureKeys) {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({\n            type: UPDATE,\n            features: featureKeys,\n        });\n    }\n    ngOnDestroy() {\n        this.complete();\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ReducerManager, deps: [{ token: ReducerManagerDispatcher }, { token: INITIAL_STATE }, { token: INITIAL_REDUCERS }, { token: REDUCER_FACTORY }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ReducerManager }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ReducerManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: ReducerManagerDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_REDUCERS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REDUCER_FACTORY]\n                }] }] });\nconst REDUCER_MANAGER_PROVIDERS = [\n    ReducerManager,\n    { provide: ReducerObservable, useExisting: ReducerManager },\n    { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\nclass ScannedActionsSubject extends Subject {\n    ngOnDestroy() {\n        this.complete();\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ScannedActionsSubject, deps: null, target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ScannedActionsSubject }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: ScannedActionsSubject, decorators: [{\n            type: Injectable\n        }] });\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [\n    ScannedActionsSubject,\n];\n\nclass StateObservable extends Observable {\n}\nclass State extends BehaviorSubject {\n    static { this.INIT = INIT; }\n    constructor(actions$, reducer$, scannedActions, initialState) {\n        super(initialState);\n        const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n        const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n        const seed = { state: initialState };\n        const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n        this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n            this.next(state);\n            scannedActions.next(action);\n        });\n        this.state = toSignal(this, { manualCleanup: true, requireSync: true });\n    }\n    ngOnDestroy() {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: State, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: INITIAL_STATE }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: State }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: State, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }] });\nfunction reduceState(stateActionPair = { state: undefined }, [action, reducer]) {\n    const { state } = stateActionPair;\n    return { state: reducer(state, action), action };\n}\nconst STATE_PROVIDERS = [\n    State,\n    { provide: StateObservable, useExisting: State },\n];\n\n// disabled because we have lowercase generics for `select`\nclass Store extends Observable {\n    constructor(state$, actionsObserver, reducerManager) {\n        super();\n        this.actionsObserver = actionsObserver;\n        this.reducerManager = reducerManager;\n        this.source = state$;\n        this.state = state$.state;\n    }\n    select(pathOrMapFn, ...paths) {\n        return select.call(null, pathOrMapFn, ...paths)(this);\n    }\n    /**\n     * Returns a signal of the provided selector.\n     *\n     * @param selector selector function\n     * @param options select signal options\n     */\n    selectSignal(selector, options) {\n        return computed(() => selector(this.state()), options);\n    }\n    lift(operator) {\n        const store = new Store(this, this.actionsObserver, this.reducerManager);\n        store.operator = operator;\n        return store;\n    }\n    dispatch(action) {\n        this.actionsObserver.next(action);\n    }\n    next(action) {\n        this.actionsObserver.next(action);\n    }\n    error(err) {\n        this.actionsObserver.error(err);\n    }\n    complete() {\n        this.actionsObserver.complete();\n    }\n    addReducer(key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    }\n    removeReducer(key) {\n        this.reducerManager.removeReducer(key);\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Store, deps: [{ token: StateObservable }, { token: ActionsSubject }, { token: ReducerManager }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Store }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Store, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: StateObservable }, { type: ActionsSubject }, { type: ReducerManager }] });\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n    return function selectOperator(source$) {\n        let mapped$;\n        if (typeof pathOrMapFn === 'string') {\n            const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n            mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n        }\n        else if (typeof pathOrMapFn === 'function') {\n            mapped$ = source$.pipe(map((source) => pathOrMapFn(source, propsOrPath)));\n        }\n        else {\n            throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n                ` expected 'string' or 'function'`);\n        }\n        return mapped$.pipe(distinctUntilChanged());\n    };\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n    return target === undefined;\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isArray(target) {\n    return Array.isArray(target);\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n    return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n    if (!isObject(target)) {\n        return false;\n    }\n    const targetPrototype = Object.getPrototypeOf(target);\n    return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isComponent(target) {\n    return isFunction(target) && target.hasOwnProperty('\u0275cmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n    return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n    _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n    return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n    return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n    for (let i = 0; i < args.length; i++) {\n        if (!comparator(args[i], lastArguments[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n    return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n    let lastArguments = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n    let lastResult = null;\n    let overrideResult;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function setResult(result = undefined) {\n        overrideResult = { result };\n    }\n    function clearResult() {\n        overrideResult = undefined;\n    }\n    /* eslint-disable prefer-rest-params, prefer-spread */\n    // disabled because of the use of `arguments`\n    function memoized() {\n        if (overrideResult !== undefined) {\n            return overrideResult.result;\n        }\n        if (!lastArguments) {\n            lastResult = projectionFn.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n            return lastResult;\n        }\n        const newResult = projectionFn.apply(null, arguments);\n        lastArguments = arguments;\n        if (isResultEqual(lastResult, newResult)) {\n            return lastResult;\n        }\n        lastResult = newResult;\n        return newResult;\n    }\n    return { memoized, reset, setResult, clearResult };\n}\nfunction createSelector(...input) {\n    return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n    if (props === undefined) {\n        const args = selectors.map((fn) => fn(state));\n        return memoizedProjector.memoized.apply(null, args);\n    }\n    const args = selectors.map((fn) => fn(state, props));\n    return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const createOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n */\nfunction createSelectorFactory(memoize, options = {\n    stateFn: defaultStateFn,\n}) {\n    return function (...input) {\n        let args = input;\n        if (Array.isArray(args[0])) {\n            const [head, ...tail] = args;\n            args = [...head, ...tail];\n        }\n        else if (args.length === 1 && isSelectorsDictionary(args[0])) {\n            args = extractArgsFromSelectorsDictionary(args[0]);\n        }\n        const selectors = args.slice(0, args.length - 1);\n        const projector = args[args.length - 1];\n        const memoizedSelectors = selectors.filter((selector) => selector.release && typeof selector.release === 'function');\n        const memoizedProjector = memoize(function (...selectors) {\n            return projector.apply(null, selectors);\n        });\n        const memoizedState = defaultMemoize(function (state, props) {\n            return options.stateFn.apply(null, [\n                state,\n                selectors,\n                props,\n                memoizedProjector,\n            ]);\n        });\n        function release() {\n            memoizedState.reset();\n            memoizedProjector.reset();\n            memoizedSelectors.forEach((selector) => selector.release());\n        }\n        return Object.assign(memoizedState.memoized, {\n            release,\n            projector: memoizedProjector.memoized,\n            setResult: memoizedState.setResult,\n            clearResult: memoizedState.clearResult,\n        });\n    };\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector((state) => {\n        const featureState = state[featureName];\n        if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n            console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` +\n                'not exist in the state, therefore createFeatureSelector ' +\n                'cannot access it.  Be sure it is imported in a loaded module ' +\n                `using StoreModule.forRoot('${featureName}', ...) or ` +\n                `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n                'state is intended to be undefined, as is the case with router ' +\n                'state, this development-only warning message can be ignored.');\n        }\n        return featureState;\n    }, (featureState) => featureState);\n}\nfunction isSelectorsDictionary(selectors) {\n    return (!!selectors &&\n        typeof selectors === 'object' &&\n        Object.values(selectors).every((selector) => typeof selector === 'function'));\n}\nfunction extractArgsFromSelectorsDictionary(selectorsDictionary) {\n    const selectors = Object.values(selectorsDictionary);\n    const resultKeys = Object.keys(selectorsDictionary);\n    const projector = (...selectorResults) => resultKeys.reduce((result, key, index) => ({\n        ...result,\n        [key]: selectorResults[index],\n    }), {});\n    return [...selectors, projector];\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n * This function also provides the ability to add extra selectors to\n * the feature object.\n *\n * @param featureConfig An object that contains a feature name and a feature\n * reducer as required, and extra selectors factory as an optional argument.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, a selector for each feature state property, and extra\n * selectors.\n *\n * @usageNotes\n *\n * ```ts\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   // feature state properties selectors\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any>, string | null>\n * } = productsFeature;\n * ```\n *\n * **Creating Feature with Extra Selectors**\n *\n * ```ts\n * type CallState = 'init' | 'loading' | 'loaded' | { error: string };\n *\n * interface State extends EntityState<Product> {\n *   callState: CallState;\n * }\n *\n * const adapter = createEntityAdapter<Product>();\n * const initialState: State = adapter.getInitialState({\n *   callState: 'init',\n * });\n *\n * export const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n *   extraSelectors: ({ selectProductsState, selectCallState }) => ({\n *     ...adapter.getSelectors(selectProductsState),\n *     ...getCallStateSelectors(selectCallState)\n *   }),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState,\n *   // feature state properties selectors\n *   selectIds,\n *   selectEntities,\n *   selectCallState,\n *   // selectors returned by `adapter.getSelectors`\n *   selectAll,\n *   selectTotal,\n *   // selectors returned by `getCallStateSelectors`\n *   selectIsLoading,\n *   selectIsLoaded,\n *   selectError,\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n    const { name, reducer, extraSelectors: extraSelectorsFactory, } = featureConfig;\n    const featureSelector = createFeatureSelector(name);\n    const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n    const baseSelectors = {\n        [`select${capitalize(name)}State`]: featureSelector,\n        ...nestedSelectors,\n    };\n    const extraSelectors = extraSelectorsFactory\n        ? extraSelectorsFactory(baseSelectors)\n        : {};\n    return {\n        name,\n        reducer,\n        ...baseSelectors,\n        ...extraSelectors,\n    };\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n    const initialState = getInitialState(reducer);\n    const nestedKeys = (isPlainObject(initialState) ? Object.keys(initialState) : []);\n    return nestedKeys.reduce((nestedSelectors, nestedKey) => ({\n        ...nestedSelectors,\n        [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, (parentState) => parentState?.[nestedKey]),\n    }), {});\n}\nfunction getInitialState(reducer) {\n    return reducer(undefined, { type: '@ngrx/feature/init' });\n}\n\nfunction _createStoreReducers(reducers) {\n    return reducers instanceof InjectionToken ? inject(reducers) : reducers;\n}\nfunction _createFeatureStore(configs, featureStores) {\n    return featureStores.map((feat, index) => {\n        if (configs[index] instanceof InjectionToken) {\n            const conf = inject(configs[index]);\n            return {\n                key: feat.key,\n                reducerFactory: conf.reducerFactory\n                    ? conf.reducerFactory\n                    : combineReducers,\n                metaReducers: conf.metaReducers ? conf.metaReducers : [],\n                initialState: conf.initialState,\n            };\n        }\n        return feat;\n    });\n}\nfunction _createFeatureReducers(reducerCollection) {\n    return reducerCollection.map((reducer) => {\n        return reducer instanceof InjectionToken ? inject(reducer) : reducer;\n    });\n}\nfunction _initialStateFactory(initialState) {\n    if (typeof initialState === 'function') {\n        return initialState();\n    }\n    return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n    return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard() {\n    const store = inject(Store, { optional: true, skipSelf: true });\n    if (store) {\n        throw new TypeError(`The root Store has been provided more than once. Feature modules should provide feature states instead.`);\n    }\n    return 'guarded';\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        const act = checks.action(action) ? freeze(action) : action;\n        const nextState = reducer(state, act);\n        return checks.state() ? freeze(nextState) : nextState;\n    };\n}\nfunction freeze(target) {\n    Object.freeze(target);\n    const targetIsFunction = isFunction(target);\n    Object.getOwnPropertyNames(target).forEach((prop) => {\n        // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n        if (prop.startsWith('\u0275')) {\n            return;\n        }\n        if (hasOwnProperty(target, prop) &&\n            (targetIsFunction\n                ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n                : true)) {\n            const propValue = target[prop];\n            if ((isObjectLike(propValue) || isFunction(propValue)) &&\n                !Object.isFrozen(propValue)) {\n                freeze(propValue);\n            }\n        }\n    });\n    return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action)) {\n            const unserializableAction = getUnserializable(action);\n            throwIfUnserializable(unserializableAction, 'action');\n        }\n        const nextState = reducer(state, action);\n        if (checks.state()) {\n            const unserializableState = getUnserializable(nextState);\n            throwIfUnserializable(unserializableState, 'state');\n        }\n        return nextState;\n    };\n}\nfunction getUnserializable(target, path = []) {\n    // Guard against undefined and null, e.g. a reducer that returns undefined\n    if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n        return {\n            path: ['root'],\n            value: target,\n        };\n    }\n    const keys = Object.keys(target);\n    return keys.reduce((result, key) => {\n        if (result) {\n            return result;\n        }\n        const value = target[key];\n        // Ignore Ivy components\n        if (isComponent(value)) {\n            return result;\n        }\n        if (isUndefined(value) ||\n            isNull(value) ||\n            isNumber(value) ||\n            isBoolean(value) ||\n            isString(value) ||\n            isArray(value)) {\n            return false;\n        }\n        if (isPlainObject(value)) {\n            return getUnserializable(value, [...path, key]);\n        }\n        return {\n            path: [...path, key],\n            value,\n        };\n    }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n    if (unserializable === false) {\n        return;\n    }\n    const unserializablePath = unserializable.path.join('.');\n    const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n    error.value = unserializable.value;\n    error.unserializablePath = unserializablePath;\n    throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n            throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n        }\n        return reducer(state, action);\n    };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n    if (isDevMode()) {\n        return {\n            strictStateSerializability: false,\n            strictActionSerializability: false,\n            strictStateImmutability: true,\n            strictActionImmutability: true,\n            strictActionWithinNgZone: false,\n            strictActionTypeUniqueness: false,\n            ...runtimeChecks,\n        };\n    }\n    return {\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictActionWithinNgZone: false,\n        strictActionTypeUniqueness: false,\n    };\n}\nfunction createSerializationCheckMetaReducer({ strictActionSerializability, strictStateSerializability, }) {\n    return (reducer) => strictActionSerializability || strictStateSerializability\n        ? serializationCheckMetaReducer(reducer, {\n            action: (action) => strictActionSerializability && !ignoreNgrxAction(action),\n            state: () => strictStateSerializability,\n        })\n        : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({ strictActionImmutability, strictStateImmutability, }) {\n    return (reducer) => strictActionImmutability || strictStateImmutability\n        ? immutabilityCheckMetaReducer(reducer, {\n            action: (action) => strictActionImmutability && !ignoreNgrxAction(action),\n            state: () => strictStateImmutability,\n        })\n        : reducer;\n}\nfunction ignoreNgrxAction(action) {\n    return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({ strictActionWithinNgZone, }) {\n    return (reducer) => strictActionWithinNgZone\n        ? inNgZoneAssertMetaReducer(reducer, {\n            action: (action) => strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n        : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n    return [\n        {\n            provide: _USER_RUNTIME_CHECKS,\n            useValue: runtimeChecks,\n        },\n        {\n            provide: USER_RUNTIME_CHECKS,\n            useFactory: _runtimeChecksFactory,\n            deps: [_USER_RUNTIME_CHECKS],\n        },\n        {\n            provide: ACTIVE_RUNTIME_CHECKS,\n            deps: [USER_RUNTIME_CHECKS],\n            useFactory: createActiveRuntimeChecks,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createImmutabilityCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createSerializationCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createInNgZoneCheckMetaReducer,\n        },\n    ];\n}\nfunction checkForActionTypeUniqueness() {\n    return [\n        {\n            provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: _actionTypeUniquenessCheck,\n        },\n    ];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n    return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n    if (!config.strictActionTypeUniqueness) {\n        return;\n    }\n    const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n        .filter(([, registrations]) => registrations > 1)\n        .map(([type]) => type);\n    if (duplicates.length) {\n        throw new Error(`Action types are registered more than once, ${duplicates\n            .map((type) => `\"${type}\"`)\n            .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n    }\n}\n\n/**\n * Provides additional slices of state in the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing Store Features\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideState('books', booksReducer)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideState(featureNameOrSlice, reducers, config = {}) {\n    return makeEnvironmentProviders([\n        ..._provideState(featureNameOrSlice, reducers, config),\n        ENVIRONMENT_STATE_PROVIDER,\n    ]);\n}\nfunction _provideStore(reducers = {}, config = {}) {\n    return [\n        {\n            provide: _ROOT_STORE_GUARD,\n            useFactory: _provideForRootGuard,\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n            provide: INITIAL_STATE,\n            useFactory: _initialStateFactory,\n            deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n            provide: _STORE_REDUCERS,\n            useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n            provide: INITIAL_REDUCERS,\n            deps: [_INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n            useFactory: _createStoreReducers,\n        },\n        {\n            provide: USER_PROVIDED_META_REDUCERS,\n            useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n            provide: _RESOLVED_META_REDUCERS,\n            deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n            useFactory: _concatMetaReducers,\n        },\n        {\n            provide: _REDUCER_FACTORY,\n            useValue: config.reducerFactory ? config.reducerFactory : combineReducers,\n        },\n        {\n            provide: REDUCER_FACTORY,\n            deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n            useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n    ];\n}\nfunction rootStoreProviderFactory() {\n    inject(ActionsSubject);\n    inject(ReducerObservable);\n    inject(ScannedActionsSubject);\n    inject(Store);\n    inject(_ROOT_STORE_GUARD, { optional: true });\n    inject(_ACTION_TYPE_UNIQUENESS_CHECK, { optional: true });\n}\n/**\n * Environment Initializer used in the root\n * providers to initialize the Store\n */\nconst ENVIRONMENT_STORE_PROVIDER = [\n    { provide: ROOT_STORE_PROVIDER, useFactory: rootStoreProviderFactory },\n    {\n        provide: ENVIRONMENT_INITIALIZER,\n        multi: true,\n        useFactory() {\n            return () => inject(ROOT_STORE_PROVIDER);\n        },\n    },\n];\n/**\n * Provides the global Store providers and initializes\n * the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing the Global Store\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideStore()],\n * });\n * ```\n */\nfunction provideStore(reducers, config) {\n    return makeEnvironmentProviders([\n        ..._provideStore(reducers, config),\n        ENVIRONMENT_STORE_PROVIDER,\n    ]);\n}\nfunction featureStateProviderFactory() {\n    inject(ROOT_STORE_PROVIDER);\n    const features = inject(_STORE_FEATURES);\n    const featureReducers = inject(FEATURE_REDUCERS);\n    const reducerManager = inject(ReducerManager);\n    inject(_ACTION_TYPE_UNIQUENESS_CHECK, { optional: true });\n    const feats = features.map((feature, index) => {\n        const featureReducerCollection = featureReducers.shift();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const reducers = featureReducerCollection /*TODO(#823)*/[index];\n        return {\n            ...feature,\n            reducers,\n            initialState: _initialStateFactory(feature.initialState),\n        };\n    });\n    reducerManager.addFeatures(feats);\n}\n/**\n * Environment Initializer used in the feature\n * providers to register state features\n */\nconst ENVIRONMENT_STATE_PROVIDER = [\n    {\n        provide: FEATURE_STATE_PROVIDER,\n        useFactory: featureStateProviderFactory,\n    },\n    {\n        provide: ENVIRONMENT_INITIALIZER,\n        multi: true,\n        useFactory() {\n            return () => inject(FEATURE_STATE_PROVIDER);\n        },\n    },\n];\nfunction _provideState(featureNameOrSlice, reducers, config = {}) {\n    return [\n        {\n            provide: _FEATURE_CONFIGS,\n            multi: true,\n            useValue: featureNameOrSlice instanceof Object ? {} : config,\n        },\n        {\n            provide: STORE_FEATURES,\n            multi: true,\n            useValue: {\n                key: featureNameOrSlice instanceof Object\n                    ? featureNameOrSlice.name\n                    : featureNameOrSlice,\n                reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory\n                    ? config.reducerFactory\n                    : combineReducers,\n                metaReducers: !(config instanceof InjectionToken) && config.metaReducers\n                    ? config.metaReducers\n                    : [],\n                initialState: !(config instanceof InjectionToken) && config.initialState\n                    ? config.initialState\n                    : undefined,\n            },\n        },\n        {\n            provide: _STORE_FEATURES,\n            deps: [_FEATURE_CONFIGS, STORE_FEATURES],\n            useFactory: _createFeatureStore,\n        },\n        {\n            provide: _FEATURE_REDUCERS,\n            multi: true,\n            useValue: featureNameOrSlice instanceof Object\n                ? featureNameOrSlice.reducer\n                : reducers,\n        },\n        {\n            provide: _FEATURE_REDUCERS_TOKEN,\n            multi: true,\n            useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n            provide: FEATURE_REDUCERS,\n            multi: true,\n            deps: [_FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n            useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n    ];\n}\n\nclass StoreRootModule {\n    constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) { }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreRootModule, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: Store }, { token: _ROOT_STORE_GUARD, optional: true }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreRootModule }); }\n    /** @nocollapse */ static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreRootModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: () => [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: Store }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_STORE_GUARD]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }] });\nclass StoreFeatureModule {\n    constructor(features, featureReducers, reducerManager, root, actionCheck) {\n        this.features = features;\n        this.featureReducers = featureReducers;\n        this.reducerManager = reducerManager;\n        const feats = features.map((feature, index) => {\n            const featureReducerCollection = featureReducers.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const reducers = featureReducerCollection /*TODO(#823)*/[index];\n            return {\n                ...feature,\n                reducers,\n                initialState: _initialStateFactory(feature.initialState),\n            };\n        });\n        reducerManager.addFeatures(feats);\n    }\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngOnDestroy() {\n        this.reducerManager.removeFeatures(this.features);\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreFeatureModule, deps: [{ token: _STORE_FEATURES }, { token: FEATURE_REDUCERS }, { token: ReducerManager }, { token: StoreRootModule }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreFeatureModule }); }\n    /** @nocollapse */ static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreFeatureModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_STORE_FEATURES]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FEATURE_REDUCERS]\n                }] }, { type: ReducerManager }, { type: StoreRootModule }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }] });\nclass StoreModule {\n    static forRoot(reducers, config) {\n        return {\n            ngModule: StoreRootModule,\n            providers: [..._provideStore(reducers, config)],\n        };\n    }\n    static forFeature(featureNameOrSlice, reducers, config = {}) {\n        return {\n            ngModule: StoreFeatureModule,\n            providers: [..._provideState(featureNameOrSlice, reducers, config)],\n        };\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreModule }); }\n    /** @nocollapse */ static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: StoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n    const reducer = args.pop();\n    const types = args.map((creator) => creator.type);\n    return { reducer, types };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` does not require being wrapped with another function.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n    const map = new Map();\n    for (const on of ons) {\n        for (const type of on.types) {\n            const existingReducer = map.get(type);\n            if (existingReducer) {\n                const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n                map.set(type, newReducer);\n            }\n            else {\n                map.set(type, on.reducer);\n            }\n        }\n    }\n    return function (state = initialState, action) {\n        const reducer = map.get(action.type);\n        return reducer ? reducer(state, action) : state;\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, FEATURE_STATE_PROVIDER, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ROOT_STORE_PROVIDER, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, provideState, provideStore, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };\n//# sourceMappingURL=ngrx-store.mjs.map\n"],
  "mappings": "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",
  "names": ["props", "reducers", "args", "selectors", "map", "on"]
}
