7613de3671e9212a82b95dc784b29288
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxListComponent = void 0;
const core_1 = require("@angular/core");
const button_1 = require("@angular/material/button");
const core_2 = require("@ngx-translate/core");
const ix_errors_component_1 = require("app/modules/forms/ix-forms/components/ix-errors/ix-errors.component");
const ix_label_component_1 = require("app/modules/forms/ix-forms/components/ix-label/ix-label.component");
const test_directive_1 = require("app/modules/test-id/test.directive");
const i0 = __importStar(require("@angular/core"));
let IxListComponent = class IxListComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.canAdd = true;
        this.add = (0, core_1.output)();
        this.isDisabled = false;
    }
    ngAfterViewInit() {
        var _a;
        if (!this.isEditMode && ((_a = this.default) === null || _a === void 0 ? void 0 : _a.length) > 0) {
            this.handleListDefaults();
        }
    }
    addItem(schema) {
        this.add.emit(schema);
    }
    setDisabledState(isDisabled) {
        this.isDisabled = isDisabled;
    }
    handleListDefaults() {
        setTimeout(() => {
            this.default.forEach((defaultValue) => {
                this.addItem(this.itemsSchema.map((item) => {
                    var _a;
                    return Object.assign(Object.assign({}, item), { schema: Object.assign(Object.assign({}, item.schema), { default: (_a = defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue[item.variable]) !== null && _a !== void 0 ? _a : (typeof defaultValue !== 'object' ? defaultValue : item.schema.default) }) });
                }));
            });
            this.cdr.markForCheck();
        });
    }
};
exports.IxListComponent = IxListComponent;
IxListComponent.ctorParameters = () => [
    { type: core_1.ChangeDetectorRef }
];
IxListComponent.propDecorators = {
    formArray: [{ type: core_1.Input }],
    label: [{ type: core_1.Input }],
    tooltip: [{ type: core_1.Input }],
    empty: [{ type: core_1.Input }],
    required: [{ type: core_1.Input }],
    canAdd: [{ type: core_1.Input }],
    default: [{ type: core_1.Input }],
    itemsSchema: [{ type: core_1.Input }],
    isEditMode: [{ type: core_1.Input }],
    add: [{ type: i0.Output, args: ["add",] }]
};
exports.IxListComponent = IxListComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-list',
        template: require("./ix-list.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            ix_label_component_1.IxLabelComponent,
            button_1.MatButton,
            ix_errors_component_1.IxErrorsComponent,
            core_2.TranslateModule,
            test_directive_1.TestDirective,
        ],
    })
], IxListComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZm9ybXMvaXgtZm9ybXMvY29tcG9uZW50cy9peC1saXN0L2l4LWxpc3QuY29tcG9uZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsd0NBTXVCO0FBRXZCLHFEQUFxRDtBQUNyRCw4Q0FBc0Q7QUFFdEQsNkdBQXdHO0FBQ3hHLDBHQUFxRztBQUNyRyx1RUFBbUU7O0FBZ0I1RCxJQUFNLGVBQWUsR0FBckIsTUFBTSxlQUFlO0lBZ0IxQixZQUNVLEdBQXNCO1FBQXRCLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBWHZCLFdBQU0sR0FBRyxJQUFJO1FBTWIsUUFBRyxHQUFHLElBQUEsYUFBTSxHQUFxQjtRQUUxQyxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBSWhCLENBQUM7SUFFSixlQUFlOztRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUEsTUFBQSxJQUFJLENBQUMsT0FBTywwQ0FBRSxNQUFNLElBQUcsQ0FBQyxFQUFFLENBQUM7WUFDakQsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFDNUIsQ0FBQztJQUNILENBQUM7SUFFRCxPQUFPLENBQUMsTUFBMEI7UUFDaEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELGdCQUFnQixDQUFDLFVBQW1CO1FBQ2xDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7SUFFTyxrQkFBa0I7UUFDeEIsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBbUIsRUFBRSxFQUFFO2dCQUMzQyxJQUFJLENBQUMsT0FBTyxDQUNWLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBcUIsRUFBRSxFQUFFOztvQkFDN0MsdUNBQ0ssSUFBSSxLQUNQLE1BQU0sa0NBQ0QsSUFBSSxDQUFDLE1BQU0sS0FDZCxPQUFPLEVBQUUsTUFBQSxZQUFZLGFBQVosWUFBWSx1QkFBWixZQUFZLENBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxtQ0FBSSxDQUFDLE9BQU8sWUFBWSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUVuSDtnQkFDSixDQUFDLENBQUMsQ0FDSCxDQUFDO1lBQ0osQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7QUFwRFUsMENBQWU7Ozs7O3dCQUN6QixZQUFLO29CQUNMLFlBQUs7c0JBQ0wsWUFBSztvQkFDTCxZQUFLO3VCQUNMLFlBQUs7cUJBQ0wsWUFBSztzQkFDTCxZQUFLOzBCQUVMLFlBQUs7eUJBQ0wsWUFBSzs7OzBCQVZLLGVBQWU7SUFkM0IsSUFBQSxnQkFBUyxFQUFDO1FBQ1QsUUFBUSxFQUFFLFNBQVM7UUFDbkIsNkNBQXVDO1FBRXZDLGVBQWUsRUFBRSw4QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRTtZQUNQLHFDQUFnQjtZQUNoQixrQkFBUztZQUNULHVDQUFpQjtZQUNqQixzQkFBZTtZQUNmLDhCQUFhO1NBQ2Q7S0FDRixDQUFDO0dBQ1csZUFBZSxDQXFEM0IiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZm9ybXMvaXgtZm9ybXMvY29tcG9uZW50cy9peC1saXN0L2l4LWxpc3QuY29tcG9uZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgQ29tcG9uZW50LFxuICBJbnB1dCwgb3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE1hdEJ1dHRvbiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IENoYXJ0U2NoZW1hTm9kZSB9IGZyb20gJ2FwcC9pbnRlcmZhY2VzL2FwcC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgSXhFcnJvcnNDb21wb25lbnQgfSBmcm9tICdhcHAvbW9kdWxlcy9mb3Jtcy9peC1mb3Jtcy9jb21wb25lbnRzL2l4LWVycm9ycy9peC1lcnJvcnMuY29tcG9uZW50JztcbmltcG9ydCB7IEl4TGFiZWxDb21wb25lbnQgfSBmcm9tICdhcHAvbW9kdWxlcy9mb3Jtcy9peC1mb3Jtcy9jb21wb25lbnRzL2l4LWxhYmVsL2l4LWxhYmVsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUZXN0RGlyZWN0aXZlIH0gZnJvbSAnYXBwL21vZHVsZXMvdGVzdC1pZC90ZXN0LmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l4LWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vaXgtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2l4LWxpc3QuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBJeExhYmVsQ29tcG9uZW50LFxuICAgIE1hdEJ1dHRvbixcbiAgICBJeEVycm9yc0NvbXBvbmVudCxcbiAgICBUcmFuc2xhdGVNb2R1bGUsXG4gICAgVGVzdERpcmVjdGl2ZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgSXhMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpIGZvcm1BcnJheTogQWJzdHJhY3RDb250cm9sO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSB0b29sdGlwOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGVtcHR5OiBib29sZWFuO1xuICBASW5wdXQoKSByZXF1aXJlZDogYm9vbGVhbjtcbiAgQElucHV0KCkgY2FuQWRkID0gdHJ1ZTtcbiAgQElucHV0KCkgZGVmYXVsdDogdW5rbm93bltdO1xuICAvLyBUT0RPOiBEb2VzIG5vdCBiZWxvbmcgdG8gdGhlIHNjb3BlIG9mIHRoaXMgY29tcG9uZW50LlxuICBASW5wdXQoKSBpdGVtc1NjaGVtYTogQ2hhcnRTY2hlbWFOb2RlW107XG4gIEBJbnB1dCgpIGlzRWRpdE1vZGU6IGJvb2xlYW47XG5cbiAgcmVhZG9ubHkgYWRkID0gb3V0cHV0PENoYXJ0U2NoZW1hTm9kZVtdPigpO1xuXG4gIGlzRGlzYWJsZWQgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICkge31cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmlzRWRpdE1vZGUgJiYgdGhpcy5kZWZhdWx0Py5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmhhbmRsZUxpc3REZWZhdWx0cygpO1xuICAgIH1cbiAgfVxuXG4gIGFkZEl0ZW0oc2NoZW1hPzogQ2hhcnRTY2hlbWFOb2RlW10pOiB2b2lkIHtcbiAgICB0aGlzLmFkZC5lbWl0KHNjaGVtYSk7XG4gIH1cblxuICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmlzRGlzYWJsZWQgPSBpc0Rpc2FibGVkO1xuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVMaXN0RGVmYXVsdHMoKTogdm9pZCB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLmRlZmF1bHQuZm9yRWFjaCgoZGVmYXVsdFZhbHVlOiBuZXZlcikgPT4ge1xuICAgICAgICB0aGlzLmFkZEl0ZW0oXG4gICAgICAgICAgdGhpcy5pdGVtc1NjaGVtYS5tYXAoKGl0ZW06IENoYXJ0U2NoZW1hTm9kZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICAgICAgc2NoZW1hOiB7XG4gICAgICAgICAgICAgICAgLi4uaXRlbS5zY2hlbWEsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogZGVmYXVsdFZhbHVlPy5baXRlbS52YXJpYWJsZV0gPz8gKHR5cGVvZiBkZWZhdWx0VmFsdWUgIT09ICdvYmplY3QnID8gZGVmYXVsdFZhbHVlIDogaXRlbS5zY2hlbWEuZGVmYXVsdCksXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pLFxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH0pO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=