{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/download.service.spec.ts","mappings":";;AAAA,+CAAkD;AAClD,iDAA8F;AAC9F,oEAAgE;AAEhE,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,SAA4C,CAAC;IACjD,IAAI,UAA6B,CAAC;IAClC,MAAM,aAAa,GAAG,IAAA,2BAAoB,EAAC;QACzC,OAAO,EAAE,kCAAe;QACxB,SAAS,EAAE;YACT,IAAA,mBAAY,EAAC,iBAAU,CAAC;SACzB;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,aAAa,EAAE,CAAC;QAE5B,UAAU,GAAG;YACX,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;YACf,MAAM,EAAE,GAAG,EAAE,GAAE,CAAC;SACI,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,kBAAkB,EAAE,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAEtD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,kBAAkB,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,qEAAqE,EAAE,GAAG,EAAE;YAC7E,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;YACxD,MAAM,QAAQ,GAAG,UAAU,CAAC;YAE5B,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;YACzD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YACnE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC5C,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;YAE9C,MAAM,OAAO,GAAG,OAAO,CAAC;YACxB,MAAM,QAAQ,GAAG,UAAU,CAAC;YAE5B,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAElD,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC;iBACnC,oBAAoB,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/download.service.spec.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { createServiceFactory, mockProvider, SpectatorService } from '@ngneat/spectator/jest';\nimport { DownloadService } from 'app/services/download.service';\n\ndescribe('DownloadService', () => {\n  let spectator: SpectatorService<DownloadService>;\n  let anchorMock: HTMLAnchorElement;\n  const createService = createServiceFactory({\n    service: DownloadService,\n    providers: [\n      mockProvider(HttpClient),\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createService();\n\n    anchorMock = {\n      download: '',\n      href: '',\n      click: () => {},\n      remove: () => {},\n    } as HTMLAnchorElement;\n    jest.spyOn(anchorMock, 'click').mockImplementation();\n    jest.spyOn(anchorMock, 'remove').mockImplementation();\n\n    jest.spyOn(document, 'createElement').mockReturnValue(anchorMock);\n    jest.spyOn(document.body, 'appendChild').mockImplementation();\n  });\n\n  describe('downloadBlob', () => {\n    it('initiates download by creating an anchor element and clicking on it', () => {\n      const blob = new Blob(['test'], { type: 'text/plain' });\n      const filename = 'test.txt';\n\n      spectator.service.downloadBlob(blob, filename);\n\n      expect(document.createElement).toHaveBeenCalledWith('a');\n      expect(document.body.appendChild).toHaveBeenCalledWith(anchorMock);\n      expect(anchorMock.download).toBe(filename);\n      expect(anchorMock.click).toHaveBeenCalled();\n      expect(anchorMock.remove).toHaveBeenCalled();\n    });\n  });\n\n  describe('downloadText', () => {\n    it('download text content with a filename', () => {\n      jest.spyOn(spectator.service, 'downloadBlob');\n\n      const content = 'Lorem';\n      const filename = 'test.txt';\n\n      spectator.service.downloadText(content, filename);\n\n      expect(spectator.service.downloadBlob)\n        .toHaveBeenCalledWith(new Blob([content], { type: 'text/plain' }), filename);\n    });\n  });\n});\n"],"version":3}