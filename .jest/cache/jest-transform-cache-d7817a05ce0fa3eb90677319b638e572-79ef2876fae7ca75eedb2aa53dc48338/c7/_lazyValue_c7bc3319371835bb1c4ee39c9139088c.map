{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_lazyValue.js","mappings":";;;;;AAAA,kFAAsD;AACtD,gEAAoC;AACpC,8DAAmC;AAEnC,mDAAmD;AACnD,IAAI,gBAAgB,GAAG,CAAC,EACpB,aAAa,GAAG,CAAC,CAAC;AAEtB,wFAAwF;AACxF,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AAEzB;;;;;;;GAOG;AACH,SAAS,SAAS;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAChC,GAAG,GAAG,IAAI,CAAC,OAAO,EAClB,KAAK,GAAG,IAAA,oBAAO,EAAC,KAAK,CAAC,EACtB,OAAO,GAAG,GAAG,GAAG,CAAC,EACjB,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EACpC,IAAI,GAAG,IAAA,qBAAO,EAAC,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAC5C,KAAK,GAAG,IAAI,CAAC,KAAK,EAClB,GAAG,GAAG,IAAI,CAAC,GAAG,EACd,MAAM,GAAG,GAAG,GAAG,KAAK,EACpB,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EACnC,SAAS,GAAG,IAAI,CAAC,aAAa,EAC9B,UAAU,GAAG,SAAS,CAAC,MAAM,EAC7B,QAAQ,GAAG,CAAC,EACZ,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAEtD,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,CAAC,EAAE,CAAC;QACvE,OAAO,IAAA,8BAAgB,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,KAAK,EACL,OAAO,MAAM,EAAE,IAAI,QAAQ,GAAG,SAAS,EAAE,CAAC;QACxC,KAAK,IAAI,GAAG,CAAC;QAEb,IAAI,SAAS,GAAG,CAAC,CAAC,EACd,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAEzB,OAAO,EAAE,SAAS,GAAG,UAAU,EAAE,CAAC;YAChC,IAAI,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,EAC3B,QAAQ,GAAG,IAAI,CAAC,QAAQ,EACxB,IAAI,GAAG,IAAI,CAAC,IAAI,EAChB,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE/B,IAAI,IAAI,IAAI,aAAa,EAAE,CAAC;gBAC1B,KAAK,GAAG,QAAQ,CAAC;YACnB,CAAC;iBAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACrB,IAAI,IAAI,IAAI,gBAAgB,EAAE,CAAC;oBAC7B,SAAS,KAAK,CAAC;gBACjB,CAAC;qBAAM,CAAC;oBACN,MAAM,KAAK,CAAC;gBACd,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAC;IAC7B,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_lazyValue.js"],"sourcesContent":["import baseWrapperValue from './_baseWrapperValue.js';\nimport getView from './_getView.js';\nimport isArray from './isArray.js';\n\n/** Used to indicate the type of lazy iteratees. */\nvar LAZY_FILTER_FLAG = 1,\n    LAZY_MAP_FLAG = 2;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Extracts the unwrapped value from its lazy wrapper.\n *\n * @private\n * @name value\n * @memberOf LazyWrapper\n * @returns {*} Returns the unwrapped value.\n */\nfunction lazyValue() {\n  var array = this.__wrapped__.value(),\n      dir = this.__dir__,\n      isArr = isArray(array),\n      isRight = dir < 0,\n      arrLength = isArr ? array.length : 0,\n      view = getView(0, arrLength, this.__views__),\n      start = view.start,\n      end = view.end,\n      length = end - start,\n      index = isRight ? end : (start - 1),\n      iteratees = this.__iteratees__,\n      iterLength = iteratees.length,\n      resIndex = 0,\n      takeCount = nativeMin(length, this.__takeCount__);\n\n  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n    return baseWrapperValue(array, this.__actions__);\n  }\n  var result = [];\n\n  outer:\n  while (length-- && resIndex < takeCount) {\n    index += dir;\n\n    var iterIndex = -1,\n        value = array[index];\n\n    while (++iterIndex < iterLength) {\n      var data = iteratees[iterIndex],\n          iteratee = data.iteratee,\n          type = data.type,\n          computed = iteratee(value);\n\n      if (type == LAZY_MAP_FLAG) {\n        value = computed;\n      } else if (!computed) {\n        if (type == LAZY_FILTER_FLAG) {\n          continue outer;\n        } else {\n          break outer;\n        }\n      }\n    }\n    result[resIndex++] = value;\n  }\n  return result;\n}\n\nexport default lazyValue;\n"],"version":3}