55ab88a60e0875b7b993df67cd0048ec
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jobReducer = exports.jobsInitialState = exports.adapter = void 0;
const entity_1 = require("@ngrx/entity");
const store_1 = require("@ngrx/store");
const job_state_enum_1 = require("app/enums/job-state.enum");
const job_actions_1 = require("app/modules/jobs/store/job.actions");
const admin_actions_1 = require("app/store/admin-panel/admin.actions");
const topbar_actions_1 = require("app/store/topbar/topbar.actions");
exports.adapter = (0, entity_1.createEntityAdapter)({
    selectId: (job) => job.id,
    sortComparer: (a, b) => b.time_started.$date - a.time_started.$date,
});
exports.jobsInitialState = exports.adapter.getInitialState({
    isLoading: false,
    isPanelOpen: false,
    error: null,
});
exports.jobReducer = (0, store_1.createReducer)(exports.jobsInitialState, (0, store_1.on)(topbar_actions_1.jobIndicatorPressed, (state) => (Object.assign(Object.assign({}, state), { isPanelOpen: !state.isPanelOpen }))), (0, store_1.on)(job_actions_1.jobPanelClosed, (state) => (Object.assign(Object.assign({}, state), { isPanelOpen: false }))), (0, store_1.on)(admin_actions_1.adminUiInitialized, (state) => (Object.assign(Object.assign({}, state), { isLoading: true, error: null }))), (0, store_1.on)(job_actions_1.jobsLoaded, (state, { jobs }) => exports.adapter.setAll(jobs, Object.assign(Object.assign({}, state), { isLoading: false }))), (0, store_1.on)(job_actions_1.jobsNotLoaded, (state, { error }) => (Object.assign(Object.assign({}, state), { error, isLoading: true }))), (0, store_1.on)(job_actions_1.jobAdded, (state, { job }) => exports.adapter.addOne(job, state)), (0, store_1.on)(job_actions_1.jobChanged, (state, { job }) => exports.adapter.updateOne({
    id: job.id,
    changes: job,
}, state)), (0, store_1.on)(job_actions_1.jobRemoved, (state, { id }) => exports.adapter.removeOne(id, state)), (0, store_1.on)(job_actions_1.jobAborted, (state, { job }) => exports.adapter.updateOne({
    id: job.id,
    changes: {
        state: job_state_enum_1.JobState.Aborted,
        abortable: false,
        progress: null,
        time_finished: {
            $date: Date.now(),
        },
    },
}, state)));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvam9icy9zdG9yZS9qb2IucmVkdWNlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSx5Q0FBZ0U7QUFDaEUsdUNBQWdEO0FBQ2hELDZEQUFvRDtBQUVwRCxvRUFFNEM7QUFDNUMsdUVBQXlFO0FBQ3pFLG9FQUFzRTtBQVF6RCxRQUFBLE9BQU8sR0FBRyxJQUFBLDRCQUFtQixFQUFNO0lBQzlDLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDekIsWUFBWSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxLQUFLO0NBQ3BFLENBQUMsQ0FBQztBQUVVLFFBQUEsZ0JBQWdCLEdBQUcsZUFBTyxDQUFDLGVBQWUsQ0FBQztJQUN0RCxTQUFTLEVBQUUsS0FBSztJQUNoQixXQUFXLEVBQUUsS0FBSztJQUNsQixLQUFLLEVBQUUsSUFBSTtDQUNaLENBQUMsQ0FBQztBQUVVLFFBQUEsVUFBVSxHQUFHLElBQUEscUJBQWEsRUFDckMsd0JBQWdCLEVBRWhCLElBQUEsVUFBRSxFQUFDLG9DQUFtQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxpQ0FBTSxLQUFLLEtBQUUsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsSUFBRyxDQUFDLEVBQ25GLElBQUEsVUFBRSxFQUFDLDRCQUFjLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLGlDQUFNLEtBQUssS0FBRSxXQUFXLEVBQUUsS0FBSyxJQUFHLENBQUMsRUFFakUsSUFBQSxVQUFFLEVBQUMsa0NBQWtCLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLGlDQUFNLEtBQUssS0FBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLElBQUcsQ0FBQyxFQUMvRSxJQUFBLFVBQUUsRUFBQyx3QkFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLGVBQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxrQ0FBTyxLQUFLLEtBQUUsU0FBUyxFQUFFLEtBQUssSUFBRyxDQUFDLEVBQ3pGLElBQUEsVUFBRSxFQUFDLDJCQUFhLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsaUNBQU0sS0FBSyxLQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxJQUFHLENBQUMsRUFFL0UsSUFBQSxVQUFFLEVBQUMsc0JBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxlQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUM1RCxJQUFBLFVBQUUsRUFBQyx3QkFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLGVBQU8sQ0FBQyxTQUFTLENBQUM7SUFDbkQsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFO0lBQ1YsT0FBTyxFQUFFLEdBQUc7Q0FDYixFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQ1YsSUFBQSxVQUFFLEVBQUMsd0JBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxlQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUMvRCxJQUFBLFVBQUUsRUFBQyx3QkFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLGVBQU8sQ0FBQyxTQUFTLENBQUM7SUFDbkQsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFO0lBQ1YsT0FBTyxFQUFFO1FBQ1AsS0FBSyxFQUFFLHlCQUFRLENBQUMsT0FBTztRQUN2QixTQUFTLEVBQUUsS0FBSztRQUNoQixRQUFRLEVBQUUsSUFBSTtRQUNkLGFBQWEsRUFBRTtZQUNiLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFO1NBQ2xCO0tBQ0Y7Q0FDRixFQUFFLEtBQUssQ0FBQyxDQUFDLENBQ1gsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvbW9kdWxlcy9qb2JzL3N0b3JlL2pvYi5yZWR1Y2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIEVudGl0eVN0YXRlIH0gZnJvbSAnQG5ncngvZW50aXR5JztcbmltcG9ydCB7IGNyZWF0ZVJlZHVjZXIsIG9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgSm9iU3RhdGUgfSBmcm9tICdhcHAvZW51bXMvam9iLXN0YXRlLmVudW0nO1xuaW1wb3J0IHsgSm9iIH0gZnJvbSAnYXBwL2ludGVyZmFjZXMvam9iLmludGVyZmFjZSc7XG5pbXBvcnQge1xuICBqb2JzTG9hZGVkLCBqb2JDaGFuZ2VkLCBqb2JSZW1vdmVkLCBqb2JBZGRlZCwgam9iUGFuZWxDbG9zZWQsIGpvYnNOb3RMb2FkZWQsIGpvYkFib3J0ZWQsXG59IGZyb20gJ2FwcC9tb2R1bGVzL2pvYnMvc3RvcmUvam9iLmFjdGlvbnMnO1xuaW1wb3J0IHsgYWRtaW5VaUluaXRpYWxpemVkIH0gZnJvbSAnYXBwL3N0b3JlL2FkbWluLXBhbmVsL2FkbWluLmFjdGlvbnMnO1xuaW1wb3J0IHsgam9iSW5kaWNhdG9yUHJlc3NlZCB9IGZyb20gJ2FwcC9zdG9yZS90b3BiYXIvdG9wYmFyLmFjdGlvbnMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEpvYnNTdGF0ZSBleHRlbmRzIEVudGl0eVN0YXRlPEpvYj4ge1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG4gIGlzUGFuZWxPcGVuOiBib29sZWFuO1xuICBlcnJvcjogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgYWRhcHRlciA9IGNyZWF0ZUVudGl0eUFkYXB0ZXI8Sm9iPih7XG4gIHNlbGVjdElkOiAoam9iKSA9PiBqb2IuaWQsXG4gIHNvcnRDb21wYXJlcjogKGEsIGIpID0+IGIudGltZV9zdGFydGVkLiRkYXRlIC0gYS50aW1lX3N0YXJ0ZWQuJGRhdGUsXG59KTtcblxuZXhwb3J0IGNvbnN0IGpvYnNJbml0aWFsU3RhdGUgPSBhZGFwdGVyLmdldEluaXRpYWxTdGF0ZSh7XG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGlzUGFuZWxPcGVuOiBmYWxzZSxcbiAgZXJyb3I6IG51bGwsXG59KTtcblxuZXhwb3J0IGNvbnN0IGpvYlJlZHVjZXIgPSBjcmVhdGVSZWR1Y2VyKFxuICBqb2JzSW5pdGlhbFN0YXRlLFxuXG4gIG9uKGpvYkluZGljYXRvclByZXNzZWQsIChzdGF0ZSkgPT4gKHsgLi4uc3RhdGUsIGlzUGFuZWxPcGVuOiAhc3RhdGUuaXNQYW5lbE9wZW4gfSkpLFxuICBvbihqb2JQYW5lbENsb3NlZCwgKHN0YXRlKSA9PiAoeyAuLi5zdGF0ZSwgaXNQYW5lbE9wZW46IGZhbHNlIH0pKSxcblxuICBvbihhZG1pblVpSW5pdGlhbGl6ZWQsIChzdGF0ZSkgPT4gKHsgLi4uc3RhdGUsIGlzTG9hZGluZzogdHJ1ZSwgZXJyb3I6IG51bGwgfSkpLFxuICBvbihqb2JzTG9hZGVkLCAoc3RhdGUsIHsgam9icyB9KSA9PiBhZGFwdGVyLnNldEFsbChqb2JzLCB7IC4uLnN0YXRlLCBpc0xvYWRpbmc6IGZhbHNlIH0pKSxcbiAgb24oam9ic05vdExvYWRlZCwgKHN0YXRlLCB7IGVycm9yIH0pID0+ICh7IC4uLnN0YXRlLCBlcnJvciwgaXNMb2FkaW5nOiB0cnVlIH0pKSxcblxuICBvbihqb2JBZGRlZCwgKHN0YXRlLCB7IGpvYiB9KSA9PiBhZGFwdGVyLmFkZE9uZShqb2IsIHN0YXRlKSksXG4gIG9uKGpvYkNoYW5nZWQsIChzdGF0ZSwgeyBqb2IgfSkgPT4gYWRhcHRlci51cGRhdGVPbmUoe1xuICAgIGlkOiBqb2IuaWQsXG4gICAgY2hhbmdlczogam9iLFxuICB9LCBzdGF0ZSkpLFxuICBvbihqb2JSZW1vdmVkLCAoc3RhdGUsIHsgaWQgfSkgPT4gYWRhcHRlci5yZW1vdmVPbmUoaWQsIHN0YXRlKSksXG4gIG9uKGpvYkFib3J0ZWQsIChzdGF0ZSwgeyBqb2IgfSkgPT4gYWRhcHRlci51cGRhdGVPbmUoe1xuICAgIGlkOiBqb2IuaWQsXG4gICAgY2hhbmdlczoge1xuICAgICAgc3RhdGU6IEpvYlN0YXRlLkFib3J0ZWQsXG4gICAgICBhYm9ydGFibGU6IGZhbHNlLFxuICAgICAgcHJvZ3Jlc3M6IG51bGwsXG4gICAgICB0aW1lX2ZpbmlzaGVkOiB7XG4gICAgICAgICRkYXRlOiBEYXRlLm5vdygpLFxuICAgICAgfSxcbiAgICB9LFxuICB9LCBzdGF0ZSkpLFxuKTtcbiJdLCJ2ZXJzaW9uIjozfQ==