{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/jobs/store/job.reducer.ts","mappings":";;;AAAA,yCAAgE;AAChE,uCAAgD;AAChD,6DAAoD;AAEpD,oEAE4C;AAC5C,uEAAyE;AACzE,oEAAsE;AAQzD,QAAA,OAAO,GAAG,IAAA,4BAAmB,EAAM;IAC9C,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;IACzB,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,YAAY,CAAC,KAAK;CACpE,CAAC,CAAC;AAEU,QAAA,gBAAgB,GAAG,eAAO,CAAC,eAAe,CAAC;IACtD,SAAS,EAAE,KAAK;IAChB,WAAW,EAAE,KAAK;IAClB,KAAK,EAAE,IAAI;CACZ,CAAC,CAAC;AAEU,QAAA,UAAU,GAAG,IAAA,qBAAa,EACrC,wBAAgB,EAEhB,IAAA,UAAE,EAAC,oCAAmB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,WAAW,EAAE,CAAC,KAAK,CAAC,WAAW,IAAG,CAAC,EACnF,IAAA,UAAE,EAAC,4BAAc,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,WAAW,EAAE,KAAK,IAAG,CAAC,EAEjE,IAAA,UAAE,EAAC,kCAAkB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,IAAG,CAAC,EAC/E,IAAA,UAAE,EAAC,wBAAU,EAAE,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,MAAM,CAAC,IAAI,kCAAO,KAAK,KAAE,SAAS,EAAE,KAAK,IAAG,CAAC,EACzF,IAAA,UAAE,EAAC,2BAAa,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,KAAK,EAAE,SAAS,EAAE,IAAI,IAAG,CAAC,EAE/E,IAAA,UAAE,EAAC,sBAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAC5D,IAAA,UAAE,EAAC,wBAAU,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,SAAS,CAAC;IACnD,EAAE,EAAE,GAAG,CAAC,EAAE;IACV,OAAO,EAAE,GAAG;CACb,EAAE,KAAK,CAAC,CAAC,EACV,IAAA,UAAE,EAAC,wBAAU,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAC/D,IAAA,UAAE,EAAC,wBAAU,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,eAAO,CAAC,SAAS,CAAC;IACnD,EAAE,EAAE,GAAG,CAAC,EAAE;IACV,OAAO,EAAE;QACP,KAAK,EAAE,yBAAQ,CAAC,OAAO;QACvB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,IAAI;QACd,aAAa,EAAE;YACb,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE;SAClB;KACF;CACF,EAAE,KAAK,CAAC,CAAC,CACX,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/jobs/store/job.reducer.ts"],"sourcesContent":["import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport { JobState } from 'app/enums/job-state.enum';\nimport { Job } from 'app/interfaces/job.interface';\nimport {\n  jobsLoaded, jobChanged, jobRemoved, jobAdded, jobPanelClosed, jobsNotLoaded, jobAborted,\n} from 'app/modules/jobs/store/job.actions';\nimport { adminUiInitialized } from 'app/store/admin-panel/admin.actions';\nimport { jobIndicatorPressed } from 'app/store/topbar/topbar.actions';\n\nexport interface JobsState extends EntityState<Job> {\n  isLoading: boolean;\n  isPanelOpen: boolean;\n  error: string;\n}\n\nexport const adapter = createEntityAdapter<Job>({\n  selectId: (job) => job.id,\n  sortComparer: (a, b) => b.time_started.$date - a.time_started.$date,\n});\n\nexport const jobsInitialState = adapter.getInitialState({\n  isLoading: false,\n  isPanelOpen: false,\n  error: null,\n});\n\nexport const jobReducer = createReducer(\n  jobsInitialState,\n\n  on(jobIndicatorPressed, (state) => ({ ...state, isPanelOpen: !state.isPanelOpen })),\n  on(jobPanelClosed, (state) => ({ ...state, isPanelOpen: false })),\n\n  on(adminUiInitialized, (state) => ({ ...state, isLoading: true, error: null })),\n  on(jobsLoaded, (state, { jobs }) => adapter.setAll(jobs, { ...state, isLoading: false })),\n  on(jobsNotLoaded, (state, { error }) => ({ ...state, error, isLoading: true })),\n\n  on(jobAdded, (state, { job }) => adapter.addOne(job, state)),\n  on(jobChanged, (state, { job }) => adapter.updateOne({\n    id: job.id,\n    changes: job,\n  }, state)),\n  on(jobRemoved, (state, { id }) => adapter.removeOne(id, state)),\n  on(jobAborted, (state, { job }) => adapter.updateOne({\n    id: job.id,\n    changes: {\n      state: JobState.Aborted,\n      abortable: false,\n      progress: null,\n      time_finished: {\n        $date: Date.now(),\n      },\n    },\n  }, state)),\n);\n"],"version":3}