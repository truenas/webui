{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/components/train-card/train-card.component.ts","mappings":";;;;;;;;;AAAA,4CAA4C;AAC5C,wCAEuB;AACvB,0CAA8E;AAC9E,qDAA4D;AAC5D,iDAAiD;AACjD,yEAAwE;AACxE,uDAAuD;AACvD,yDAAqE;AACrE,8CAAwE;AACxE,+BAEc;AACd,qGAAgG;AAChG,mDAA2C;AAC3C,qEAAkE;AAClE,uFAA0E;AAC1E,uDAAkE;AAGlE,sEAAkE;AAClE,mHAA8G;AAC9G,6GAAwG;AACxG,6EAAwE;AACxE,uEAAmE;AACnE,kFAA8E;AAC9E,oFAAgF;AAChF,iEAA6D;AAC7D,gFAA2E;AAwBpE,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAe7B,YACU,aAAmC,EACnC,aAA4B,EAC5B,SAA2B,EAC3B,EAAe,EACf,WAAwB,EACtB,YAA0B,EAC1B,aAA4B,EAC9B,GAAsB;QAPtB,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAkB;QAC3B,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC9B,QAAG,GAAH,GAAG,CAAmB;QAtBhC,oBAAe,GAAG,KAAK,CAAC;QACxB,cAAS,GAAG,KAAK,CAAC;QAElB,WAAM,GAAa,EAAE,CAAC;QAEtB,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;QAEgB,kBAAa,GAAG,CAAC,gBAAI,CAAC,SAAS,CAAC,CAAC;QACjC,4BAAuB,GAAG,6BAAoB,CAAC,uBAAuB,CAAC;QACvE,uBAAkB,GAAG,uCAAkB,CAAC;QAYzD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,UAAkB,EAAE,EAAE;YAC3F,IAAI,CAAC,eAAe,GAAG,UAAU,KAAK,MAAM,CAAC;YAC7C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAA,SAAE,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,IAAA,eAAQ,EAAC;YACP,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;YACnC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;SAC9B,CAAC,CAAC,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,CAAC,gBAAgB,EAAE,MAAM,CAAC,EAAE,EAAE;;gBACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;gBAC3D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAErD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAEvD,IAAI,gBAAgB,EAAE,CAAC;oBACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;gBAC5B,CAAC;gBAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;oBAClE,KAAK,EAAE,KAAK,CAAC,WAAW;oBACxB,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC,CAAC;gBACJ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,MAAA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,0CAAE,WAAW,CAAC;gBACxE,CAAC;gBAED,IAAI,uBAAuB,GAAG,EAAE,CAAC;gBAEjC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;oBAClC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;wBAClF,uBAAuB,GAAG,WAAW,CAAC;oBACxC,CAAC;yBAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;wBACzF,uBAAuB,GAAG,WAAW,CAAC;oBACxC,CAAC;yBAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;wBAC5F,uBAAuB,GAAG,cAAc,CAAC;oBAC3C,CAAC;yBAAM,CAAC;wBACN,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;oBACrF,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBACzE,6EAA6E;gBAC7E,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBAE5E,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,CAAC,KAAqB,EAAE,EAAE;gBAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,KAAK,CAAC,KAAK,CAAC,KAAK,EACjB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6CAA6C,CAAC,CACtE,CAAC;YACJ,CAAC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YAChF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAA,eAAQ,GAAE,EAAE,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE;YAC/G,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAC7C,IAAA,mCAAW,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAI,CAAC,SAAS,CAAC,CAAC,EAC3D,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;;AAtGU,gDAAkB;;;;;;;;;;;6BAAlB,kBAAkB;IAtB9B,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,eAAe;QAEzB,gDAA0C;QAC1C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,cAAO;YACP,qCAAkB;YAClB,2BAAmB;YACnB,iDAAsB;YACtB,2CAAmB;YACnB,uCAAiB;YACjB,yBAAgB;YAChB,oBAAU;YACV,8BAAa;YACb,mCAAe;YACf,sBAAe;YACf,kBAAS;SACV;KACF,CAAC;GACW,kBAAkB,CAuG9B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/components/train-card/train-card.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit,\n} from '@angular/core';\nimport { FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatMiniFabButton } from '@angular/material/button';\nimport { MatCard } from '@angular/material/card';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport {\n  Observable, forkJoin, of, pairwise,\n} from 'rxjs';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { Role } from 'app/enums/role.enum';\nimport { SystemUpdateStatus } from 'app/enums/system-update.enum';\nimport { filterAsync } from 'app/helpers/operators/filter-async.operator';\nimport { helptextSystemUpdate } from 'app/helptext/system/update';\nimport { Option } from 'app/interfaces/option.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxCheckboxComponent } from 'app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component';\nimport { IxSelectComponent } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { TrainService } from 'app/pages/system/update/services/train.service';\nimport { UpdateService } from 'app/pages/system/update/services/update.service';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-train-card',\n  styleUrls: ['train-card.component.scss'],\n  templateUrl: './train-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatCard,\n    MatProgressSpinner,\n    ReactiveFormsModule,\n    RequiresRolesDirective,\n    IxCheckboxComponent,\n    IxSelectComponent,\n    MatMiniFabButton,\n    MatTooltip,\n    TestDirective,\n    IxIconComponent,\n    TranslateModule,\n    AsyncPipe,\n  ],\n})\nexport class TrainCardComponent implements OnInit {\n  isUpdateRunning = false;\n  checkable = false;\n  singleDescription: string;\n  trains: Option[] = [];\n\n  form = this.fb.group({\n    auto_check: [false],\n    train: ['', Validators.required],\n  });\n\n  protected readonly requiredRoles = [Role.FullAdmin];\n  protected readonly clickForInformationLink = helptextSystemUpdate.clickForInformationLink;\n  protected readonly SystemUpdateStatus = SystemUpdateStatus;\n\n  constructor(\n    private sysGenService: SystemGeneralService,\n    private dialogService: DialogService,\n    private translate: TranslateService,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    protected trainService: TrainService,\n    protected updateService: UpdateService,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.sysGenService.updateRunning.pipe(untilDestroyed(this)).subscribe((isUpdating: string) => {\n      this.isUpdateRunning = isUpdating === 'true';\n      this.cdr.markForCheck();\n    });\n  }\n\n  get trains$(): Observable<Option[]> {\n    return of(this.trains);\n  }\n\n  ngOnInit(): void {\n    forkJoin([\n      this.trainService.getAutoDownload(),\n      this.trainService.getTrains(),\n    ]).pipe(untilDestroyed(this)).subscribe({\n      next: ([isAutoDownloadOn, trains]) => {\n        this.form.controls.auto_check.patchValue(isAutoDownloadOn);\n        this.checkable = true;\n        this.cdr.markForCheck();\n        this.trainService.fullTrainList$.next(trains.trains);\n\n        this.trainService.trainValue$.next(trains.selected || '');\n        this.trainService.selectedTrain$.next(trains.selected);\n\n        if (isAutoDownloadOn) {\n          this.trainService.check();\n        }\n\n        this.trains = Object.entries(trains.trains).map(([name, train]) => ({\n          label: train.description,\n          value: name,\n        }));\n        if (this.trains.length > 0) {\n          this.singleDescription = Object.values(trains.trains)[0]?.description;\n        }\n\n        let currentTrainDescription = '';\n\n        if (trains.trains[trains.current]) {\n          if (trains.trains[trains.current].description.toLowerCase().includes('[nightly]')) {\n            currentTrainDescription = '[nightly]';\n          } else if (trains.trains[trains.current].description.toLowerCase().includes('[release]')) {\n            currentTrainDescription = '[release]';\n          } else if (trains.trains[trains.current].description.toLowerCase().includes('[prerelease]')) {\n            currentTrainDescription = '[prerelease]';\n          } else {\n            currentTrainDescription = trains.trains[trains.selected].description.toLowerCase();\n          }\n        }\n        this.trainService.currentTrainDescription$.next(currentTrainDescription);\n        // To remember train description if user switches away and then switches back\n        this.trainService.trainDescriptionOnPageLoad$.next(currentTrainDescription);\n\n        this.cdr.markForCheck();\n      },\n      error: (error: WebSocketError) => {\n        this.dialogService.warn(\n          error.trace.class,\n          this.translate.instant('TrueNAS was unable to reach update servers.'),\n        );\n      },\n    });\n\n    this.trainService.trainValue$.pipe(untilDestroyed(this)).subscribe((trainValue) => {\n      this.form.controls.train.patchValue(trainValue);\n    });\n\n    this.form.controls.train.valueChanges.pipe(pairwise(), untilDestroyed(this)).subscribe(([prevTrain, newTrain]) => {\n      this.trainService.onTrainChanged(newTrain, prevTrain);\n    });\n\n    this.form.controls.auto_check.valueChanges.pipe(\n      filterAsync(() => this.authService.hasRole(Role.FullAdmin)),\n      untilDestroyed(this),\n    ).subscribe(() => {\n      this.trainService.toggleAutoCheck(this.form.controls.auto_check.value);\n    });\n  }\n}\n"],"version":3}