{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/toPairsIn.js","mappings":";;;;;AAAA,4EAAgD;AAChD,4DAAiC;AAEjC;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,IAAI,SAAS,GAAG,IAAA,2BAAa,EAAC,mBAAM,CAAC,CAAC;AAEtC,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/toPairsIn.js"],"sourcesContent":["import createToPairs from './_createToPairs.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable string keyed-value pairs\n * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n * or set, its entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entriesIn\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairsIn(new Foo);\n * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n */\nvar toPairsIn = createToPairs(keysIn);\n\nexport default toPairsIn;\n"],"version":3}