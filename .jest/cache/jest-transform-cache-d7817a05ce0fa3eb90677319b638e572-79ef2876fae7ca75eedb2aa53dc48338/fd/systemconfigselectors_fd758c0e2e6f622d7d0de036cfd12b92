e28ea1fcb2fc348914df253e7ea0c609
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectHasConsoleFooter = exports.waitForAdvancedConfig = exports.selectAdvancedConfig = exports.selectTimezone = exports.waitForGeneralConfig = exports.selectGeneralConfig = exports.selectSystemConfigState = exports.systemConfigStateKey = void 0;
const store_1 = require("@ngrx/store");
const select_not_null_helper_1 = require("app/helpers/operators/select-not-null.helper");
exports.systemConfigStateKey = 'systemConfig';
exports.selectSystemConfigState = (0, store_1.createFeatureSelector)(exports.systemConfigStateKey);
exports.selectGeneralConfig = (0, store_1.createSelector)(exports.selectSystemConfigState, (state) => state.generalConfig);
/**
 * Will wait for config to load. Use within .pipe().
 */
exports.waitForGeneralConfig = (0, select_not_null_helper_1.selectNotNull)(exports.selectGeneralConfig);
exports.selectTimezone = (0, store_1.createSelector)(exports.selectGeneralConfig, (config) => config === null || config === void 0 ? void 0 : config.timezone);
exports.selectAdvancedConfig = (0, store_1.createSelector)(exports.selectSystemConfigState, (state) => state.advancedConfig);
/**
 * Will wait for config to load. Use within .pipe().
 */
exports.waitForAdvancedConfig = (0, select_not_null_helper_1.selectNotNull)(exports.selectAdvancedConfig);
exports.selectHasConsoleFooter = (0, store_1.createSelector)(exports.selectGeneralConfig, (config) => config === null || config === void 0 ? void 0 : config.ui_consolemsg);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3N0b3JlL3N5c3RlbS1jb25maWcvc3lzdGVtLWNvbmZpZy5zZWxlY3RvcnMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQW9FO0FBQ3BFLHlGQUE2RTtBQUdoRSxRQUFBLG9CQUFvQixHQUFHLGNBQWMsQ0FBQztBQUV0QyxRQUFBLHVCQUF1QixHQUFHLElBQUEsNkJBQXFCLEVBQW9CLDRCQUFvQixDQUFDLENBQUM7QUFFekYsUUFBQSxtQkFBbUIsR0FBRyxJQUFBLHNCQUFjLEVBQy9DLCtCQUF1QixFQUN2QixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FDL0IsQ0FBQztBQUVGOztHQUVHO0FBQ1UsUUFBQSxvQkFBb0IsR0FBRyxJQUFBLHNDQUFhLEVBQUMsMkJBQW1CLENBQUMsQ0FBQztBQUUxRCxRQUFBLGNBQWMsR0FBRyxJQUFBLHNCQUFjLEVBQzFDLDJCQUFtQixFQUNuQixDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsTUFBTSxhQUFOLE1BQU0sdUJBQU4sTUFBTSxDQUFFLFFBQVEsQ0FDN0IsQ0FBQztBQUVXLFFBQUEsb0JBQW9CLEdBQUcsSUFBQSxzQkFBYyxFQUNoRCwrQkFBdUIsRUFDdkIsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQ2hDLENBQUM7QUFFRjs7R0FFRztBQUNVLFFBQUEscUJBQXFCLEdBQUcsSUFBQSxzQ0FBYSxFQUFDLDRCQUFvQixDQUFDLENBQUM7QUFFNUQsUUFBQSxzQkFBc0IsR0FBRyxJQUFBLHNCQUFjLEVBQ2xELDJCQUFtQixFQUNuQixDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsTUFBTSxhQUFOLE1BQU0sdUJBQU4sTUFBTSxDQUFFLGFBQWEsQ0FDbEMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvc3RvcmUvc3lzdGVtLWNvbmZpZy9zeXN0ZW0tY29uZmlnLnNlbGVjdG9ycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVGZWF0dXJlU2VsZWN0b3IsIGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgc2VsZWN0Tm90TnVsbCB9IGZyb20gJ2FwcC9oZWxwZXJzL29wZXJhdG9ycy9zZWxlY3Qtbm90LW51bGwuaGVscGVyJztcbmltcG9ydCB7IFN5c3RlbUNvbmZpZ1N0YXRlIH0gZnJvbSAnYXBwL3N0b3JlL3N5c3RlbS1jb25maWcvc3lzdGVtLWNvbmZpZy5yZWR1Y2VyJztcblxuZXhwb3J0IGNvbnN0IHN5c3RlbUNvbmZpZ1N0YXRlS2V5ID0gJ3N5c3RlbUNvbmZpZyc7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RTeXN0ZW1Db25maWdTdGF0ZSA9IGNyZWF0ZUZlYXR1cmVTZWxlY3RvcjxTeXN0ZW1Db25maWdTdGF0ZT4oc3lzdGVtQ29uZmlnU3RhdGVLZXkpO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0R2VuZXJhbENvbmZpZyA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RTeXN0ZW1Db25maWdTdGF0ZSxcbiAgKHN0YXRlKSA9PiBzdGF0ZS5nZW5lcmFsQ29uZmlnLFxuKTtcblxuLyoqXG4gKiBXaWxsIHdhaXQgZm9yIGNvbmZpZyB0byBsb2FkLiBVc2Ugd2l0aGluIC5waXBlKCkuXG4gKi9cbmV4cG9ydCBjb25zdCB3YWl0Rm9yR2VuZXJhbENvbmZpZyA9IHNlbGVjdE5vdE51bGwoc2VsZWN0R2VuZXJhbENvbmZpZyk7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RUaW1lem9uZSA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RHZW5lcmFsQ29uZmlnLFxuICAoY29uZmlnKSA9PiBjb25maWc/LnRpbWV6b25lLFxuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdEFkdmFuY2VkQ29uZmlnID0gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFN5c3RlbUNvbmZpZ1N0YXRlLFxuICAoc3RhdGUpID0+IHN0YXRlLmFkdmFuY2VkQ29uZmlnLFxuKTtcblxuLyoqXG4gKiBXaWxsIHdhaXQgZm9yIGNvbmZpZyB0byBsb2FkLiBVc2Ugd2l0aGluIC5waXBlKCkuXG4gKi9cbmV4cG9ydCBjb25zdCB3YWl0Rm9yQWR2YW5jZWRDb25maWcgPSBzZWxlY3ROb3ROdWxsKHNlbGVjdEFkdmFuY2VkQ29uZmlnKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdEhhc0NvbnNvbGVGb290ZXIgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0R2VuZXJhbENvbmZpZyxcbiAgKGNvbmZpZykgPT4gY29uZmlnPy51aV9jb25zb2xlbXNnLFxuKTtcbiJdLCJ2ZXJzaW9uIjozfQ==