{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-checkbox-list/ix-checkbox-list.component.ts","mappings":";;;;;;;;;AAAA,4CAA4C;AAC5C,wCAEuB;AACvB,0CAAiE;AACjE,yDAAyD;AACzD,yDAAqD;AACrD,8CAAsD;AAGtD,6GAAwG;AACxG,0GAAqG;AACrG,uEAAmE;AAkB5D,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAYlC,YACS,gBAA2B,EAC1B,GAAsB;QADvB,qBAAgB,GAAhB,gBAAgB,CAAW;QAC1B,QAAG,GAAH,GAAG,CAAmB;QALhC,eAAU,GAAG,KAAK,CAAC;QAsBnB,aAAQ,GAAyC,GAAS,EAAE,GAAE,CAAC,CAAC;QAChE,YAAO,GAAe,GAAS,EAAE,GAAE,CAAC,CAAC;QAhBnC,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,IAAI,SAAS;QACX,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAKD,UAAU,CAAC,KAA0B;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,QAA8C;QAC7D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,iBAAiB,CAAC,SAAqB;QACrC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,KAAsB;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,iBAAiB,CAAC,KAAsB;QACtC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;QAC3D,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;;AAhEU,0DAAuB;;;;;;oBACjC,YAAK;mBACL,YAAK;sBACL,YAAK;uBACL,YAAK;sBACL,YAAK;2BACL,YAAK;8BACL,YAAK;;kCAPK,uBAAuB;IAhBnC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,sDAAgD;QAEhD,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,qCAAgB;YAChB,sBAAW;YACX,uCAAiB;YACjB,kBAAS;YACT,sBAAe;YACf,8BAAa;SACd;KACF,CAAC;GACW,uBAAuB,CAiEnC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-checkbox-list/ix-checkbox-list.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Option } from 'app/interfaces/option.interface';\nimport { IxErrorsComponent } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\nimport { IxLabelComponent } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-checkbox-list',\n  templateUrl: './ix-checkbox-list.component.html',\n  styleUrls: ['./ix-checkbox-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxLabelComponent,\n    MatCheckbox,\n    IxErrorsComponent,\n    AsyncPipe,\n    TranslateModule,\n    TestDirective,\n  ],\n})\nexport class IxCheckboxListComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() hint: string;\n  @Input() tooltip: string;\n  @Input() required: boolean;\n  @Input() options: Observable<Option[]>;\n  @Input() inlineFields: boolean;\n  @Input() inlineFieldFlex: string;\n\n  isDisabled = false;\n  value: (string | number)[];\n\n  constructor(\n    public controlDirective: NgControl,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  get fieldFlex(): string {\n    if (!this.inlineFields) {\n      return '100%';\n    }\n\n    if (this.inlineFields && this.inlineFieldFlex) {\n      return this.inlineFieldFlex;\n    }\n\n    return '50%';\n  }\n\n  onChange: (value: (string | number)[]) => void = (): void => {};\n  onTouch: () => void = (): void => {};\n\n  writeValue(value: (string | number)[]): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(onChange: (value: (string | number)[]) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouch = onTouched;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  isChecked(value: string | number): boolean {\n    return this.value.includes(value);\n  }\n\n  onCheckboxChanged(value: string | number): void {\n    if (this.isChecked(value)) {\n      this.value = this.value.filter((item) => item !== value);\n    } else {\n      this.value = [...this.value, value];\n    }\n\n    this.onChange(this.value);\n  }\n}\n"],"version":3}