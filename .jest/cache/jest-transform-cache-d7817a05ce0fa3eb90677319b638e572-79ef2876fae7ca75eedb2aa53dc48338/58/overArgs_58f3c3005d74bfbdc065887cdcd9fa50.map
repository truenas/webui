{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/overArgs.js","mappings":";;;;;AAAA,4DAAgC;AAChC,kEAAsC;AACtC,wEAA4C;AAC5C,0EAA8C;AAC9C,kEAAsC;AACtC,oEAAwC;AACxC,kEAAsC;AACtC,8DAAmC;AAEnC,wFAAwF;AACxF,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AAEzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,IAAI,QAAQ,GAAG,IAAA,sBAAQ,EAAC,UAAS,IAAI,EAAE,UAAU;IAC/C,UAAU,GAAG,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,IAAA,oBAAO,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC,CAAC,IAAA,sBAAQ,EAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAA,uBAAS,EAAC,0BAAY,CAAC,CAAC;QAClD,CAAC,CAAC,IAAA,sBAAQ,EAAC,IAAA,yBAAW,EAAC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAA,uBAAS,EAAC,0BAAY,CAAC,CAAC,CAAC;IAElE,IAAI,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC;IACpC,OAAO,IAAA,sBAAQ,EAAC,UAAS,IAAI;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC,EACV,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAEjD,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1D,CAAC;QACD,OAAO,IAAA,mBAAK,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,QAAQ,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/overArgs.js"],"sourcesContent":["import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUnary from './_baseUnary.js';\nimport castRest from './_castRest.js';\nimport isArray from './isArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nexport default overArgs;\n"],"version":3}