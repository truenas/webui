6cbf783ec7976273c0aa2e28ee9c392d
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const _apply_js_1 = __importDefault(require("./_apply.js"));
const _arrayMap_js_1 = __importDefault(require("./_arrayMap.js"));
const _baseFlatten_js_1 = __importDefault(require("./_baseFlatten.js"));
const _baseIteratee_js_1 = __importDefault(require("./_baseIteratee.js"));
const _baseRest_js_1 = __importDefault(require("./_baseRest.js"));
const _baseUnary_js_1 = __importDefault(require("./_baseUnary.js"));
const _castRest_js_1 = __importDefault(require("./_castRest.js"));
const isArray_js_1 = __importDefault(require("./isArray.js"));
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;
/**
 * Creates a function that invokes `func` with its arguments transformed.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Function
 * @param {Function} func The function to wrap.
 * @param {...(Function|Function[])} [transforms=[_.identity]]
 *  The argument transforms.
 * @returns {Function} Returns the new function.
 * @example
 *
 * function doubled(n) {
 *   return n * 2;
 * }
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var func = _.overArgs(function(x, y) {
 *   return [x, y];
 * }, [square, doubled]);
 *
 * func(9, 3);
 * // => [81, 6]
 *
 * func(10, 5);
 * // => [100, 10]
 */
var overArgs = (0, _castRest_js_1.default)(function (func, transforms) {
    transforms = (transforms.length == 1 && (0, isArray_js_1.default)(transforms[0]))
        ? (0, _arrayMap_js_1.default)(transforms[0], (0, _baseUnary_js_1.default)(_baseIteratee_js_1.default))
        : (0, _arrayMap_js_1.default)((0, _baseFlatten_js_1.default)(transforms, 1), (0, _baseUnary_js_1.default)(_baseIteratee_js_1.default));
    var funcsLength = transforms.length;
    return (0, _baseRest_js_1.default)(function (args) {
        var index = -1, length = nativeMin(args.length, funcsLength);
        while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
        }
        return (0, _apply_js_1.default)(func, this, args);
    });
});
exports.default = overArgs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL292ZXJBcmdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNERBQWdDO0FBQ2hDLGtFQUFzQztBQUN0Qyx3RUFBNEM7QUFDNUMsMEVBQThDO0FBQzlDLGtFQUFzQztBQUN0QyxvRUFBd0M7QUFDeEMsa0VBQXNDO0FBQ3RDLDhEQUFtQztBQUVuQyx3RkFBd0Y7QUFDeEYsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztBQUV6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBOEJHO0FBQ0gsSUFBSSxRQUFRLEdBQUcsSUFBQSxzQkFBUSxFQUFDLFVBQVMsSUFBSSxFQUFFLFVBQVU7SUFDL0MsVUFBVSxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksSUFBQSxvQkFBTyxFQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdELENBQUMsQ0FBQyxJQUFBLHNCQUFRLEVBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUEsdUJBQVMsRUFBQywwQkFBWSxDQUFDLENBQUM7UUFDbEQsQ0FBQyxDQUFDLElBQUEsc0JBQVEsRUFBQyxJQUFBLHlCQUFXLEVBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUEsdUJBQVMsRUFBQywwQkFBWSxDQUFDLENBQUMsQ0FBQztJQUVsRSxJQUFJLFdBQVcsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO0lBQ3BDLE9BQU8sSUFBQSxzQkFBUSxFQUFDLFVBQVMsSUFBSTtRQUMzQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFDVixNQUFNLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFakQsT0FBTyxFQUFFLEtBQUssR0FBRyxNQUFNLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDMUQsQ0FBQztRQUNELE9BQU8sSUFBQSxtQkFBSyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUVILGtCQUFlLFFBQVEsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvb3ZlckFyZ3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcGx5IGZyb20gJy4vX2FwcGx5LmpzJztcbmltcG9ydCBhcnJheU1hcCBmcm9tICcuL19hcnJheU1hcC5qcyc7XG5pbXBvcnQgYmFzZUZsYXR0ZW4gZnJvbSAnLi9fYmFzZUZsYXR0ZW4uanMnO1xuaW1wb3J0IGJhc2VJdGVyYXRlZSBmcm9tICcuL19iYXNlSXRlcmF0ZWUuanMnO1xuaW1wb3J0IGJhc2VSZXN0IGZyb20gJy4vX2Jhc2VSZXN0LmpzJztcbmltcG9ydCBiYXNlVW5hcnkgZnJvbSAnLi9fYmFzZVVuYXJ5LmpzJztcbmltcG9ydCBjYXN0UmVzdCBmcm9tICcuL19jYXN0UmVzdC5qcyc7XG5pbXBvcnQgaXNBcnJheSBmcm9tICcuL2lzQXJyYXkuanMnO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWluID0gTWF0aC5taW47XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBgZnVuY2Agd2l0aCBpdHMgYXJndW1lbnRzIHRyYW5zZm9ybWVkLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSA0LjAuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gd3JhcC5cbiAqIEBwYXJhbSB7Li4uKEZ1bmN0aW9ufEZ1bmN0aW9uW10pfSBbdHJhbnNmb3Jtcz1bXy5pZGVudGl0eV1dXG4gKiAgVGhlIGFyZ3VtZW50IHRyYW5zZm9ybXMuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gZG91YmxlZChuKSB7XG4gKiAgIHJldHVybiBuICogMjtcbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBzcXVhcmUobikge1xuICogICByZXR1cm4gbiAqIG47XG4gKiB9XG4gKlxuICogdmFyIGZ1bmMgPSBfLm92ZXJBcmdzKGZ1bmN0aW9uKHgsIHkpIHtcbiAqICAgcmV0dXJuIFt4LCB5XTtcbiAqIH0sIFtzcXVhcmUsIGRvdWJsZWRdKTtcbiAqXG4gKiBmdW5jKDksIDMpO1xuICogLy8gPT4gWzgxLCA2XVxuICpcbiAqIGZ1bmMoMTAsIDUpO1xuICogLy8gPT4gWzEwMCwgMTBdXG4gKi9cbnZhciBvdmVyQXJncyA9IGNhc3RSZXN0KGZ1bmN0aW9uKGZ1bmMsIHRyYW5zZm9ybXMpIHtcbiAgdHJhbnNmb3JtcyA9ICh0cmFuc2Zvcm1zLmxlbmd0aCA9PSAxICYmIGlzQXJyYXkodHJhbnNmb3Jtc1swXSkpXG4gICAgPyBhcnJheU1hcCh0cmFuc2Zvcm1zWzBdLCBiYXNlVW5hcnkoYmFzZUl0ZXJhdGVlKSlcbiAgICA6IGFycmF5TWFwKGJhc2VGbGF0dGVuKHRyYW5zZm9ybXMsIDEpLCBiYXNlVW5hcnkoYmFzZUl0ZXJhdGVlKSk7XG5cbiAgdmFyIGZ1bmNzTGVuZ3RoID0gdHJhbnNmb3Jtcy5sZW5ndGg7XG4gIHJldHVybiBiYXNlUmVzdChmdW5jdGlvbihhcmdzKSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIGxlbmd0aCA9IG5hdGl2ZU1pbihhcmdzLmxlbmd0aCwgZnVuY3NMZW5ndGgpO1xuXG4gICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgIGFyZ3NbaW5kZXhdID0gdHJhbnNmb3Jtc1tpbmRleF0uY2FsbCh0aGlzLCBhcmdzW2luZGV4XSk7XG4gICAgfVxuICAgIHJldHVybiBhcHBseShmdW5jLCB0aGlzLCBhcmdzKTtcbiAgfSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgb3ZlckFyZ3M7XG4iXSwidmVyc2lvbiI6M30=