{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/validators/forbidden-values-validation/forbidden-values-validation.ts","mappings":";;AAQA,0CAQC;AAED,oDAuBC;AAED,oDAcC;AAtDD,+BAEc;AACd,8CAA4C;AAE5C,SAAgB,eAAe,CAAC,aAAuB,EAAE,eAAyB;IAChF,OAAO,CAAC,OAA4B,EAA2B,EAAE;QAC/D,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YACxD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,oBAAoB,CAAC,aAAa,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC,CAAC;AACJ,CAAC;AAED,SAAgB,oBAAoB,CAClC,cAAoC,EACpC,eAAyB;IAEzB,MAAM,QAAQ,GAAG,cAAc,CAAC,IAAI,CAClC,IAAA,kBAAW,EAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAC/C,IAAA,sBAAU,EAAC,CAAC,KAAK,EAAE,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,IAAA,SAAE,EAAC,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,CACH,CAAC;IAEF,OAAO,CAAC,OAA4B,EAAuC,EAAE;QAC3E,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YACxD,OAAO,IAAA,SAAE,EAAC,IAAI,CAAC,CAAC;QAClB,CAAC;QAED,OAAO,QAAQ,CAAC,IAAI,CAClB,IAAA,UAAG,EAAC,CAAC,aAAa,EAAE,EAAE;YACpB,OAAO,oBAAoB,CAAC,aAAa,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;QACvE,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAED,SAAgB,oBAAoB,CAClC,MAAgB,EAChB,eAAwB,EACxB,WAAgC;IAEhC,IAAI,eAAe,EAAE,CAAC;QACpB,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QAChH,OAAO,aAAa,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1E,CAAC;IACD,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;QACvC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,CAAC;IACvD,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/validators/forbidden-values-validation/forbidden-values-validation.ts"],"sourcesContent":["import {\n  AsyncValidatorFn, FormControl, ValidationErrors, ValidatorFn,\n} from '@angular/forms';\nimport {\n  map, Observable, of, shareReplay,\n} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport function forbiddenValues(arrayOfValues: string[], caseInsensitive?: boolean): ValidatorFn {\n  return (control: FormControl<string>): ValidationErrors | null => {\n    if (control.value === '' || control.value === undefined) {\n      return null;\n    }\n\n    return forbiddenValuesError(arrayOfValues, caseInsensitive, control);\n  };\n}\n\nexport function forbiddenAsyncValues(\n  arrayOfValues$: Observable<string[]>,\n  caseInsensitive?: boolean,\n): AsyncValidatorFn {\n  const request$ = arrayOfValues$.pipe(\n    shareReplay({ refCount: false, bufferSize: 1 }),\n    catchError((error) => {\n      console.error(error);\n      return of(null);\n    }),\n  );\n\n  return (control: FormControl<string>): Observable<ValidationErrors> | null => {\n    if (control.value === '' || control.value === undefined) {\n      return of(null);\n    }\n\n    return request$.pipe(\n      map((arrayOfValues) => {\n        return forbiddenValuesError(arrayOfValues, caseInsensitive, control);\n      }),\n    );\n  };\n}\n\nexport function forbiddenValuesError(\n  values: string[],\n  caseInsensitive: boolean,\n  formControl: FormControl<string>,\n): ValidationErrors | null {\n  if (caseInsensitive) {\n    const existingValue = values.find((val) => val.toLowerCase().trim() === formControl.value.toLowerCase().trim());\n    return existingValue ? { forbidden: true, value: existingValue } : null;\n  }\n  if (values.includes(formControl.value)) {\n    return { forbidden: true, value: formControl.value };\n  }\n\n  return null;\n}\n"],"version":3}