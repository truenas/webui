853ffad88a82cfcdf7103afcd0deba50
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorTemplateComponent = void 0;
const core_1 = require("@angular/core");
const button_1 = require("@angular/material/button");
const dialog_1 = require("@angular/material/dialog");
const until_destroy_1 = require("@ngneat/until-destroy");
const core_2 = require("@ngx-translate/core");
const dialog_service_1 = require("app/modules/dialog/dialog.service");
const ix_icon_component_1 = require("app/modules/ix-icon/ix-icon.component");
const test_directive_1 = require("app/modules/test-id/test.directive");
const download_service_1 = require("app/services/download.service");
const error_handler_service_1 = require("app/services/error-handler.service");
const ws_service_1 = require("app/services/ws.service");
let ErrorTemplateComponent = class ErrorTemplateComponent {
    constructor(ws, download, errorHandler, dialogService) {
        this.ws = ws;
        this.download = download;
        this.errorHandler = errorHandler;
        this.dialogService = dialogService;
        this.isCloseMoreInfo = true;
    }
    toggleOpen() {
        const messageWrapper = this.errorMessageWrapper.nativeElement;
        const content = this.errorMdContent.nativeElement;
        const btPanel = this.errorBtPanel.nativeElement;
        const txtarea = this.errorBtText.nativeElement;
        this.isCloseMoreInfo = !this.isCloseMoreInfo;
        if (!this.isCloseMoreInfo) {
            let errMsgHeight = messageWrapper.offsetHeight - 21;
            if (errMsgHeight > 63) {
                errMsgHeight = 63;
            }
            messageWrapper.setAttribute('style', 'max-height: 63px; overflow: auto');
            btPanel.setAttribute('style', 'width: 750px; max-height: calc(80vh - 240px)');
        }
        else {
            content.removeAttribute('style');
            btPanel.removeAttribute('style');
            messageWrapper.removeAttribute('style');
            txtarea.removeAttribute('style');
        }
    }
    downloadLogs() {
        this.ws.call('core.job_download_logs', [this.logs.id, `${this.logs.id}.log`])
            .pipe(this.errorHandler.catchError(), (0, until_destroy_1.untilDestroyed)(this))
            .subscribe((url) => {
            const mimetype = 'text/plain';
            this.download.streamDownloadFile(url, `${this.logs.id}.log`, mimetype).pipe((0, until_destroy_1.untilDestroyed)(this)).subscribe({
                next: (file) => {
                    this.download.downloadBlob(file, `${this.logs.id}.log`);
                },
                error: (error) => {
                    this.dialogService.error(this.errorHandler.parseHttpError(error));
                },
            });
        });
    }
};
exports.ErrorTemplateComponent = ErrorTemplateComponent;
ErrorTemplateComponent.ctorParameters = () => [
    { type: ws_service_1.WebSocketService },
    { type: download_service_1.DownloadService },
    { type: error_handler_service_1.ErrorHandlerService },
    { type: dialog_service_1.DialogService }
];
ErrorTemplateComponent.propDecorators = {
    errorMessageWrapper: [{ type: core_1.ViewChild, args: ['errorMessageWrapper',] }],
    errorTitle: [{ type: core_1.ViewChild, args: ['errorTitle',] }],
    errorMdContent: [{ type: core_1.ViewChild, args: ['errorMdContent',] }],
    errorBtPanel: [{ type: core_1.ViewChild, args: ['errorBtPanel',] }],
    errorBtText: [{ type: core_1.ViewChild, args: ['errorBtText',] }],
    title: [{ type: core_1.Input }],
    message: [{ type: core_1.Input }],
    backtrace: [{ type: core_1.Input }],
    logs: [{ type: core_1.Input }]
};
exports.ErrorTemplateComponent = ErrorTemplateComponent = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Component)({
        selector: 'ix-error-template',
        template: require("./error-template.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            dialog_1.MatDialogTitle,
            ix_icon_component_1.IxIconComponent,
            button_1.MatButton,
            core_2.TranslateModule,
            test_directive_1.TestDirective,
        ],
    })
], ErrorTemplateComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,