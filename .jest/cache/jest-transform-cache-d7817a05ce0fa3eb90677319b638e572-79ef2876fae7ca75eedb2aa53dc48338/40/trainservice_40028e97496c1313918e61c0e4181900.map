{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/services/train.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/services/train.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject, Observable, combineLatest,\n} from 'rxjs';\nimport { SystemUpdateOperationType, SystemUpdateStatus } from 'app/enums/system-update.enum';\nimport { SystemUpdateTrain, SystemUpdateTrains } from 'app/interfaces/system-update.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { Package } from 'app/pages/system/update/interfaces/package.interface';\nimport { UpdateService } from 'app/pages/system/update/services/update.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainService {\n  selectedTrain$ = new BehaviorSubject<string>(undefined);\n  releaseTrain$ = new BehaviorSubject<boolean>(undefined);\n  preReleaseTrain$ = new BehaviorSubject<boolean>(undefined);\n  nightlyTrain$ = new BehaviorSubject<boolean>(undefined);\n  currentTrainDescription$ = new BehaviorSubject<string>('');\n  trainDescriptionOnPageLoad$ = new BehaviorSubject<string>('');\n  fullTrainList$ = new BehaviorSubject<Record<string, SystemUpdateTrain>>(undefined);\n  trainVersion$ = new BehaviorSubject<string>(null);\n\n  trainValue$ = new BehaviorSubject<string>('');\n\n  constructor(\n    private updateService: UpdateService,\n    private ws: WebSocketService,\n    private translate: TranslateService,\n    private dialogService: DialogService,\n    private errorHandler: ErrorHandlerService,\n  ) {}\n\n  getAutoDownload(): Observable<boolean> {\n    return this.ws.call('update.get_auto_download');\n  }\n\n  getTrains(): Observable<SystemUpdateTrains> {\n    return this.ws.call('update.get_trains');\n  }\n\n  onTrainChanged(newTrain: string, prevTrain: string): void {\n    combineLatest([this.fullTrainList$, this.selectedTrain$, this.trainDescriptionOnPageLoad$])\n      .pipe(untilDestroyed(this)).subscribe(([fullTrainList, selectedTrain, trainDescriptionOnPageLoad]) => {\n        // For the case when the user switches away, then BACK to the train of the current OS\n        if (newTrain === selectedTrain) {\n          this.currentTrainDescription$.next(trainDescriptionOnPageLoad);\n          this.setTrainAndCheck(newTrain, prevTrain);\n          return;\n        }\n\n        let warning = '';\n        if (fullTrainList[newTrain]?.description.includes('[nightly]')) {\n          warning = this.translate.instant('Changing to a nightly train is one-way. Changing back to a stable train is not supported! ');\n        }\n\n        this.dialogService.confirm({\n          title: this.translate.instant('Switch Train'),\n          message: warning + this.translate.instant('Switch update trains?'),\n        }).pipe(untilDestroyed(this)).subscribe((confirmSwitch: boolean) => {\n          if (confirmSwitch) {\n            this.setTrainDescription();\n            this.setTrainAndCheck(newTrain, prevTrain);\n          } else {\n            this.trainValue$.next(prevTrain);\n            this.setTrainDescription();\n          }\n        });\n      });\n  }\n\n  setTrainDescription(): void {\n    combineLatest([this.fullTrainList$, this.trainValue$])\n      .pipe(untilDestroyed(this)).subscribe(([fullTrainList, trainValue]) => {\n        if (fullTrainList[trainValue]) {\n          this.currentTrainDescription$.next(fullTrainList[trainValue].description.toLowerCase());\n        } else {\n          this.currentTrainDescription$.next('');\n        }\n      });\n  }\n\n  toggleAutoCheck(autoCheck: boolean): void {\n    this.ws.call('update.set_auto_download', [autoCheck]).pipe(untilDestroyed(this)).subscribe(() => {\n      this.check();\n    });\n  }\n\n  setTrainAndCheck(newTrain: string, prevTrain: string): void {\n    this.updateService.isLoading$.next(true);\n    this.ws.call('update.set_train', [newTrain]).pipe(untilDestroyed(this)).subscribe({\n      next: () => {\n        this.check();\n      },\n      error: (error: unknown) => {\n        this.dialogService.error(this.errorHandler.parseError(error));\n        this.trainValue$.next(prevTrain);\n        this.updateService.isLoading$.next(false);\n      },\n      complete: () => {\n        this.updateService.isLoading$.next(false);\n      },\n    });\n  }\n\n  check(): void {\n    // Reset the template\n    this.updateService.updatesAvailable$.next(false);\n    this.updateService.releaseNotesUrl$.next('');\n\n    this.updateService.isLoading$.next(true);\n    this.updateService.pendingUpdates();\n    this.updateService.error$.next(null);\n    sessionStorage.updateLastChecked = Date.now();\n\n    combineLatest([\n      this.ws.call('update.check_available'),\n      this.currentTrainDescription$,\n    ]).pipe(untilDestroyed(this)).subscribe({\n      next: ([update, currentTrainDescription]) => {\n        if (update.version) {\n          this.trainVersion$.next(update.version);\n        }\n        this.updateService.status$.next(update.status);\n        if (update.status === SystemUpdateStatus.Available) {\n          sessionStorage.updateAvailable = 'true';\n          this.updateService.updatesAvailable$.next(true);\n\n          const packages: Package[] = [];\n          update.changes.forEach((change) => {\n            if (change.operation === SystemUpdateOperationType.Upgrade) {\n              packages.push({\n                operation: 'Upgrade',\n                name: change.old.name + '-' + change.old.version\n                + ' -> ' + change.new.name + '-'\n                + change.new.version,\n              });\n            } else if (change.operation === SystemUpdateOperationType.Install) {\n              packages.push({\n                operation: 'Install',\n                name: change.new.name + '-' + change.new.version,\n              });\n            } else if (change.operation === SystemUpdateOperationType.Delete) {\n              if (change.old) {\n                packages.push({\n                  operation: 'Delete',\n                  name: change.old.name + '-' + change.old.version,\n                });\n              } else if (change.new) {\n                packages.push({\n                  operation: 'Delete',\n                  name: change.new.name + '-' + change.new.version,\n                });\n              }\n            } else {\n              console.error('Unknown operation:', change.operation);\n            }\n          });\n          this.updateService.packages$.next(packages);\n\n          if (update.changelog) {\n            this.updateService.changeLog$.next(update.changelog.replace(/\\n/g, '<br>'));\n          }\n          if (update.release_notes_url) {\n            this.updateService.releaseNotesUrl$.next(update.release_notes_url);\n          }\n        }\n        if (currentTrainDescription && currentTrainDescription.includes('[release]')) {\n          this.releaseTrain$.next(true);\n          this.preReleaseTrain$.next(false);\n          this.nightlyTrain$.next(false);\n        } else if (currentTrainDescription.includes('[prerelease]')) {\n          this.releaseTrain$.next(false);\n          this.preReleaseTrain$.next(true);\n          this.nightlyTrain$.next(false);\n        } else {\n          this.releaseTrain$.next(false);\n          this.preReleaseTrain$.next(false);\n          this.nightlyTrain$.next(true);\n        }\n        this.updateService.isLoading$.next(false);\n      },\n      error: (err: WebSocketError) => {\n        this.updateService.generalUpdateError$.next(\n          `${err.reason.replace('>', '').replace('<', '')}: ${this.translate.instant('Automatic update check failed. Please check system network settings.')}`,\n        );\n        this.updateService.isLoading$.next(false);\n      },\n      complete: () => {\n        this.updateService.isLoading$.next(false);\n      },\n    });\n  }\n}\n"],"version":3}