{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/interfaces/acl.interface.ts","mappings":";;AAiFA,wDAIC;AAUD,4CAEC;AArFD,6DAAwE;AAqExE,SAAgB,sBAAsB,CACpC,WAAyD;IAEzD,OAAO,OAAO,IAAI,WAAW,CAAC;AAChC,CAAC;AAUD,SAAgB,gBAAgB,CAAC,KAAuC;IACtE,OAAO,OAAO,IAAI,KAAK,CAAC;AAC1B,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/interfaces/acl.interface.ts"],"sourcesContent":["import {\n  AclType,\n\n} from 'app/enums/acl-type.enum';\nimport {\n  NfsAclTag,\n  NfsAclType,\n  NfsAdvancedFlag,\n  NfsAdvancedPermission,\n  NfsBasicFlag,\n  NfsBasicPermission,\n} from 'app/enums/nfs-acl.enum';\nimport { PosixAclTag, PosixPermission } from 'app/enums/posix-acl.enum';\nimport { QueryFilter, QueryOptions } from 'app/interfaces/query-api.interface';\n\nexport type Acl = NfsAcl | PosixAcl;\n\nexport interface BaseAcl {\n  acltype: AclType;\n  gid: number;\n  trivial: boolean;\n  uid: number;\n}\n\nexport interface NfsAcl extends BaseAcl {\n  acl: NfsAclItem[];\n  acltype: AclType.Nfs4;\n  nfs41_flags: Nfs41Flags;\n}\n\nexport interface PosixAcl extends BaseAcl {\n  acl: PosixAclItem[];\n  acltype: AclType.Posix1e;\n  flags: AclFlags;\n}\n\nexport type AclQueryParams = [\n  path: string,\n  simplified?: boolean,\n  resolveIds?: boolean,\n];\n\nexport interface PosixAclItem {\n  default: boolean;\n  id: number;\n  perms: PosixPermissions;\n  tag: PosixAclTag;\n\n  /**\n   * Present when queried with resolve_ids.\n   */\n  who?: string;\n}\n\nexport interface NfsAclItem {\n  tag: NfsAclTag;\n  id: number;\n  type: NfsAclType;\n  perms: BasicNfsPermissions | AdvancedNfsPermissions;\n  flags: BasicNfsFlags | AdvancedNfsFlags;\n\n  /**\n   * Present when queried with resolve_ids.\n   */\n  who?: string;\n}\n\nexport interface AclFlags {\n  setuid: boolean;\n  setgid: boolean;\n  sticky: boolean;\n}\n\nexport type AdvancedNfsPermissions = {\n  [key in NfsAdvancedPermission]: boolean;\n};\n\nexport interface BasicNfsPermissions {\n  BASIC: NfsBasicPermission;\n}\n\nexport function areNfsPermissionsBasic(\n  permissions: BasicNfsPermissions | AdvancedNfsPermissions,\n): permissions is BasicNfsPermissions {\n  return 'BASIC' in permissions;\n}\n\nexport type AdvancedNfsFlags = {\n  [key in NfsAdvancedFlag]: boolean;\n};\n\nexport interface BasicNfsFlags {\n  BASIC: NfsBasicFlag;\n}\n\nexport function areNfsFlagsBasic(flags: BasicNfsFlags | AdvancedNfsFlags): flags is BasicNfsFlags {\n  return 'BASIC' in flags;\n}\n\nexport interface PosixPermissions {\n  [PosixPermission.Read]: boolean;\n  [PosixPermission.Write]: boolean;\n  [PosixPermission.Execute]: boolean;\n}\n\nexport interface Nfs41Flags {\n  autoinherit: boolean;\n  protected: boolean;\n}\n\nexport interface SetAclOptions {\n  stripacl?: boolean;\n  recursive?: boolean;\n  traverse?: boolean;\n  canonicalize?: boolean;\n  validate_effective_acl?: boolean;\n}\n\nexport interface SetAcl {\n  path: string;\n  uid?: number;\n  gid?: number;\n  dacl: NfsAclItem[] | PosixAclItem[];\n  nfs41_flags?: Nfs41Flags;\n  acltype?: AclType;\n  options: SetAclOptions;\n}\n\nexport interface AclTemplateByPathParams {\n  path?: string;\n  'query-filters'?: QueryFilter<unknown>[];\n  'query-options'?: QueryOptions<unknown>;\n  'format-options'?: {\n    canonicalize?: boolean;\n    ensure_builtins?: boolean;\n    resolve_names?: boolean;\n  };\n}\n\nexport type AclTemplateByPath = NfsAclTemplateByPath | PosixAclTemplateByPath;\n\nexport interface BaseAclTemplateByPath {\n  id: number;\n  name: string;\n  builtin: boolean;\n  comment: string;\n}\n\nexport interface NfsAclTemplateByPath extends BaseAclTemplateByPath {\n  acltype: AclType.Nfs4;\n  acl: NfsAclItem[];\n}\n\nexport interface PosixAclTemplateByPath extends BaseAclTemplateByPath {\n  acltype: AclType.Posix1e;\n  acl: PosixAclItem[];\n}\n\nexport interface AclTemplateCreateParams {\n  name: string;\n  acltype: AclType.Nfs4 | AclType.Posix1e;\n  acl: NfsAclItem[] | PosixAclItem[];\n  comment?: string;\n}\n\nexport interface AclTemplateCreateResponse {\n  name: string;\n  acltype: AclType.Nfs4 | AclType.Posix1e;\n  acl: NfsAclItem[] | PosixAclItem[];\n  comment: string;\n  id: number;\n  builtin: boolean;\n}\n"],"version":3}