e7b97ed2a292c774b80febf53c75f405
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.failoverDisabledReasonLabels = exports.failoverAllowedReasons = exports.FailoverDisabledReason = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
var FailoverDisabledReason;
(function (FailoverDisabledReason) {
    FailoverDisabledReason["NoVolume"] = "NO_VOLUME";
    FailoverDisabledReason["NoVip"] = "NO_VIP";
    FailoverDisabledReason["NoSystemReady"] = "NO_SYSTEM_READY";
    FailoverDisabledReason["NoPong"] = "NO_PONG";
    FailoverDisabledReason["NoFailover"] = "NO_FAILOVER";
    FailoverDisabledReason["NoLicense"] = "NO_LICENSE";
    FailoverDisabledReason["DisagreeVip"] = "DISAGREE_VIP";
    FailoverDisabledReason["MismatchDisks"] = "MISMATCH_DISKS";
    FailoverDisabledReason["MismatchVersions"] = "MISMATCH_VERSIONS";
    FailoverDisabledReason["MismatchNics"] = "MISMATCH_NICS";
    FailoverDisabledReason["NoCriticalInterfaces"] = "NO_CRITICAL_INTERFACES";
    FailoverDisabledReason["NoFenced"] = "NO_FENCED";
    FailoverDisabledReason["NoJournalSync"] = "NO_JOURNAL_SYNC";
    FailoverDisabledReason["RemNoJournalSync"] = "REM_NO_JOURNAL_SYNC";
    FailoverDisabledReason["RemFailoverOngoing"] = "REM_FAILOVER_ONGOING";
    FailoverDisabledReason["LocFailoverOngoing"] = "LOC_FAILOVER_ONGOING";
    FailoverDisabledReason["NoHeartbeatIface"] = "NO_HEARTBEAT_IFACE";
    FailoverDisabledReason["NoCarrierOnHeartbeat"] = "NO_CARRIER_ON_HEARTBEAT";
    FailoverDisabledReason["LocalFipsRebootRequired"] = "LOC_FIPS_REBOOT_REQ";
    FailoverDisabledReason["RemoteFipsRebootRequired"] = "REM_FIPS_REBOOT_REQ";
    FailoverDisabledReason["LocalDatasetMigrationInProgress"] = "LOC_SYSTEM_DATASET_MIGRATION_IN_PROGRESS";
    FailoverDisabledReason["RemoteDatasetMigrationInProgress"] = "REM_SYSTEM_DATASET_MIGRATION_IN_PROGRESS";
})(FailoverDisabledReason || (exports.FailoverDisabledReason = FailoverDisabledReason = {}));
exports.failoverAllowedReasons = [
    FailoverDisabledReason.MismatchVersions,
    FailoverDisabledReason.LocalFipsRebootRequired,
    FailoverDisabledReason.RemoteFipsRebootRequired,
];
exports.failoverDisabledReasonLabels = new Map([
    [FailoverDisabledReason.NoVolume, (0, ngx_translate_extract_marker_1.marker)('No pools are configured.')],
    [FailoverDisabledReason.NoVip, (0, ngx_translate_extract_marker_1.marker)('No interfaces configured with Virtual IP.')],
    [FailoverDisabledReason.NoSystemReady, (0, ngx_translate_extract_marker_1.marker)('Other TrueNAS controller has not finished booting.')],
    [FailoverDisabledReason.NoPong, (0, ngx_translate_extract_marker_1.marker)('Other TrueNAS controller cannot be reached.')],
    [FailoverDisabledReason.NoFailover, (0, ngx_translate_extract_marker_1.marker)('Failover is administratively disabled.')],
    [FailoverDisabledReason.NoLicense, (0, ngx_translate_extract_marker_1.marker)('Other TrueNAS controller has no license.')],
    [FailoverDisabledReason.DisagreeVip, (0, ngx_translate_extract_marker_1.marker)('Nodes Virtual IP states do not agree.')],
    [FailoverDisabledReason.MismatchDisks, (0, ngx_translate_extract_marker_1.marker)('The TrueNAS controllers do not have the same quantity of disks.')],
    [FailoverDisabledReason.MismatchVersions, (0, ngx_translate_extract_marker_1.marker)('TrueNAS software versions do not match between storage controllers.')],
    [FailoverDisabledReason.MismatchNics, (0, ngx_translate_extract_marker_1.marker)('Network interfaces do not match between storage controllers.')],
    [FailoverDisabledReason.NoCriticalInterfaces, (0, ngx_translate_extract_marker_1.marker)('No network interfaces are marked critical for failover.')],
    [FailoverDisabledReason.NoFenced, (0, ngx_translate_extract_marker_1.marker)('Fenced is not running.')],
    [FailoverDisabledReason.NoJournalSync, (0, ngx_translate_extract_marker_1.marker)('Thread responsible for syncing db transactions not running on this node.')],
    [FailoverDisabledReason.RemNoJournalSync, (0, ngx_translate_extract_marker_1.marker)('Thread responsible for syncing db transactions not running on other node.')],
    [FailoverDisabledReason.RemFailoverOngoing, (0, ngx_translate_extract_marker_1.marker)('Other node is currently processing a failover event.')],
    [FailoverDisabledReason.LocFailoverOngoing, (0, ngx_translate_extract_marker_1.marker)('This node is currently processing a failover event.')],
    [FailoverDisabledReason.NoHeartbeatIface, (0, ngx_translate_extract_marker_1.marker)('Local heartbeat interface does not exist.')],
    [FailoverDisabledReason.NoCarrierOnHeartbeat, (0, ngx_translate_extract_marker_1.marker)('Local heartbeat interface is down.')],
    [FailoverDisabledReason.LocalFipsRebootRequired, (0, ngx_translate_extract_marker_1.marker)('Reboot of this node is required for FIPS changes.')],
    [FailoverDisabledReason.RemoteFipsRebootRequired, (0, ngx_translate_extract_marker_1.marker)('Reboot of the other node is required for FIPS changes.')],
    [FailoverDisabledReason.LocalDatasetMigrationInProgress, (0, ngx_translate_extract_marker_1.marker)('This node is currently configuring the system dataset.')],
    [FailoverDisabledReason.RemoteDatasetMigrationInProgress, (0, ngx_translate_extract_marker_1.marker)('Other node is currently configuring the system dataset.')],
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2VudW1zL2ZhaWxvdmVyLWRpc2FibGVkLXJlYXNvbi5lbnVtLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLDBGQUFzRTtBQUV0RSxJQUFZLHNCQXVCWDtBQXZCRCxXQUFZLHNCQUFzQjtJQUNoQyxnREFBc0IsQ0FBQTtJQUN0QiwwQ0FBZ0IsQ0FBQTtJQUNoQiwyREFBaUMsQ0FBQTtJQUNqQyw0Q0FBa0IsQ0FBQTtJQUNsQixvREFBMEIsQ0FBQTtJQUMxQixrREFBd0IsQ0FBQTtJQUN4QixzREFBNEIsQ0FBQTtJQUM1QiwwREFBZ0MsQ0FBQTtJQUNoQyxnRUFBc0MsQ0FBQTtJQUN0Qyx3REFBOEIsQ0FBQTtJQUM5Qix5RUFBK0MsQ0FBQTtJQUMvQyxnREFBc0IsQ0FBQTtJQUN0QiwyREFBaUMsQ0FBQTtJQUNqQyxrRUFBd0MsQ0FBQTtJQUN4QyxxRUFBMkMsQ0FBQTtJQUMzQyxxRUFBMkMsQ0FBQTtJQUMzQyxpRUFBdUMsQ0FBQTtJQUN2QywwRUFBZ0QsQ0FBQTtJQUNoRCx5RUFBK0MsQ0FBQTtJQUMvQywwRUFBZ0QsQ0FBQTtJQUNoRCxzR0FBNEUsQ0FBQTtJQUM1RSx1R0FBNkUsQ0FBQTtBQUMvRSxDQUFDLEVBdkJXLHNCQUFzQixzQ0FBdEIsc0JBQXNCLFFBdUJqQztBQUVZLFFBQUEsc0JBQXNCLEdBQUc7SUFDcEMsc0JBQXNCLENBQUMsZ0JBQWdCO0lBQ3ZDLHNCQUFzQixDQUFDLHVCQUF1QjtJQUM5QyxzQkFBc0IsQ0FBQyx3QkFBd0I7Q0FDaEQsQ0FBQztBQUVXLFFBQUEsNEJBQTRCLEdBQUcsSUFBSSxHQUFHLENBQWlDO0lBQ2xGLENBQUMsc0JBQXNCLENBQUMsUUFBUSxFQUFFLElBQUEscUNBQUMsRUFBQywwQkFBMEIsQ0FBQyxDQUFDO0lBQ2hFLENBQUMsc0JBQXNCLENBQUMsS0FBSyxFQUFFLElBQUEscUNBQUMsRUFBQywyQ0FBMkMsQ0FBQyxDQUFDO0lBQzlFLENBQUMsc0JBQXNCLENBQUMsYUFBYSxFQUFFLElBQUEscUNBQUMsRUFBQyxvREFBb0QsQ0FBQyxDQUFDO0lBQy9GLENBQUMsc0JBQXNCLENBQUMsTUFBTSxFQUFFLElBQUEscUNBQUMsRUFBQyw2Q0FBNkMsQ0FBQyxDQUFDO0lBQ2pGLENBQUMsc0JBQXNCLENBQUMsVUFBVSxFQUFFLElBQUEscUNBQUMsRUFBQyx3Q0FBd0MsQ0FBQyxDQUFDO0lBQ2hGLENBQUMsc0JBQXNCLENBQUMsU0FBUyxFQUFFLElBQUEscUNBQUMsRUFBQywwQ0FBMEMsQ0FBQyxDQUFDO0lBQ2pGLENBQUMsc0JBQXNCLENBQUMsV0FBVyxFQUFFLElBQUEscUNBQUMsRUFBQyx1Q0FBdUMsQ0FBQyxDQUFDO0lBQ2hGLENBQUMsc0JBQXNCLENBQUMsYUFBYSxFQUFFLElBQUEscUNBQUMsRUFBQyxpRUFBaUUsQ0FBQyxDQUFDO0lBQzVHLENBQUMsc0JBQXNCLENBQUMsZ0JBQWdCLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLHFFQUFxRSxDQUFDLENBQUM7SUFDbkgsQ0FBQyxzQkFBc0IsQ0FBQyxZQUFZLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLDhEQUE4RCxDQUFDLENBQUM7SUFDeEcsQ0FBQyxzQkFBc0IsQ0FBQyxvQkFBb0IsRUFBRSxJQUFBLHFDQUFDLEVBQUMseURBQXlELENBQUMsQ0FBQztJQUMzRyxDQUFDLHNCQUFzQixDQUFDLFFBQVEsRUFBRSxJQUFBLHFDQUFDLEVBQUMsd0JBQXdCLENBQUMsQ0FBQztJQUM5RCxDQUFDLHNCQUFzQixDQUFDLGFBQWEsRUFBRSxJQUFBLHFDQUFDLEVBQUMsMEVBQTBFLENBQUMsQ0FBQztJQUNySCxDQUFDLHNCQUFzQixDQUFDLGdCQUFnQixFQUFFLElBQUEscUNBQUMsRUFBQywyRUFBMkUsQ0FBQyxDQUFDO0lBQ3pILENBQUMsc0JBQXNCLENBQUMsa0JBQWtCLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLHNEQUFzRCxDQUFDLENBQUM7SUFDdEcsQ0FBQyxzQkFBc0IsQ0FBQyxrQkFBa0IsRUFBRSxJQUFBLHFDQUFDLEVBQUMscURBQXFELENBQUMsQ0FBQztJQUNyRyxDQUFDLHNCQUFzQixDQUFDLGdCQUFnQixFQUFFLElBQUEscUNBQUMsRUFBQywyQ0FBMkMsQ0FBQyxDQUFDO0lBQ3pGLENBQUMsc0JBQXNCLENBQUMsb0JBQW9CLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLG9DQUFvQyxDQUFDLENBQUM7SUFDdEYsQ0FBQyxzQkFBc0IsQ0FBQyx1QkFBdUIsRUFBRSxJQUFBLHFDQUFDLEVBQUMsbURBQW1ELENBQUMsQ0FBQztJQUN4RyxDQUFDLHNCQUFzQixDQUFDLHdCQUF3QixFQUFFLElBQUEscUNBQUMsRUFBQyx3REFBd0QsQ0FBQyxDQUFDO0lBQzlHLENBQUMsc0JBQXNCLENBQUMsK0JBQStCLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLHdEQUF3RCxDQUFDLENBQUM7SUFDckgsQ0FBQyxzQkFBc0IsQ0FBQyxnQ0FBZ0MsRUFBRSxJQUFBLHFDQUFDLEVBQUMseURBQXlELENBQUMsQ0FBQztDQUN4SCxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2VudW1zL2ZhaWxvdmVyLWRpc2FibGVkLXJlYXNvbi5lbnVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcmtlciBhcyBUIH0gZnJvbSAnQGJpZXNiamVyZy9uZ3gtdHJhbnNsYXRlLWV4dHJhY3QtbWFya2VyJztcblxuZXhwb3J0IGVudW0gRmFpbG92ZXJEaXNhYmxlZFJlYXNvbiB7XG4gIE5vVm9sdW1lID0gJ05PX1ZPTFVNRScsXG4gIE5vVmlwID0gJ05PX1ZJUCcsXG4gIE5vU3lzdGVtUmVhZHkgPSAnTk9fU1lTVEVNX1JFQURZJyxcbiAgTm9Qb25nID0gJ05PX1BPTkcnLFxuICBOb0ZhaWxvdmVyID0gJ05PX0ZBSUxPVkVSJyxcbiAgTm9MaWNlbnNlID0gJ05PX0xJQ0VOU0UnLFxuICBEaXNhZ3JlZVZpcCA9ICdESVNBR1JFRV9WSVAnLFxuICBNaXNtYXRjaERpc2tzID0gJ01JU01BVENIX0RJU0tTJyxcbiAgTWlzbWF0Y2hWZXJzaW9ucyA9ICdNSVNNQVRDSF9WRVJTSU9OUycsXG4gIE1pc21hdGNoTmljcyA9ICdNSVNNQVRDSF9OSUNTJyxcbiAgTm9Dcml0aWNhbEludGVyZmFjZXMgPSAnTk9fQ1JJVElDQUxfSU5URVJGQUNFUycsXG4gIE5vRmVuY2VkID0gJ05PX0ZFTkNFRCcsXG4gIE5vSm91cm5hbFN5bmMgPSAnTk9fSk9VUk5BTF9TWU5DJyxcbiAgUmVtTm9Kb3VybmFsU3luYyA9ICdSRU1fTk9fSk9VUk5BTF9TWU5DJyxcbiAgUmVtRmFpbG92ZXJPbmdvaW5nID0gJ1JFTV9GQUlMT1ZFUl9PTkdPSU5HJyxcbiAgTG9jRmFpbG92ZXJPbmdvaW5nID0gJ0xPQ19GQUlMT1ZFUl9PTkdPSU5HJyxcbiAgTm9IZWFydGJlYXRJZmFjZSA9ICdOT19IRUFSVEJFQVRfSUZBQ0UnLFxuICBOb0NhcnJpZXJPbkhlYXJ0YmVhdCA9ICdOT19DQVJSSUVSX09OX0hFQVJUQkVBVCcsXG4gIExvY2FsRmlwc1JlYm9vdFJlcXVpcmVkID0gJ0xPQ19GSVBTX1JFQk9PVF9SRVEnLFxuICBSZW1vdGVGaXBzUmVib290UmVxdWlyZWQgPSAnUkVNX0ZJUFNfUkVCT09UX1JFUScsXG4gIExvY2FsRGF0YXNldE1pZ3JhdGlvbkluUHJvZ3Jlc3MgPSAnTE9DX1NZU1RFTV9EQVRBU0VUX01JR1JBVElPTl9JTl9QUk9HUkVTUycsXG4gIFJlbW90ZURhdGFzZXRNaWdyYXRpb25JblByb2dyZXNzID0gJ1JFTV9TWVNURU1fREFUQVNFVF9NSUdSQVRJT05fSU5fUFJPR1JFU1MnLFxufVxuXG5leHBvcnQgY29uc3QgZmFpbG92ZXJBbGxvd2VkUmVhc29ucyA9IFtcbiAgRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5NaXNtYXRjaFZlcnNpb25zLFxuICBGYWlsb3ZlckRpc2FibGVkUmVhc29uLkxvY2FsRmlwc1JlYm9vdFJlcXVpcmVkLFxuICBGYWlsb3ZlckRpc2FibGVkUmVhc29uLlJlbW90ZUZpcHNSZWJvb3RSZXF1aXJlZCxcbl07XG5cbmV4cG9ydCBjb25zdCBmYWlsb3ZlckRpc2FibGVkUmVhc29uTGFiZWxzID0gbmV3IE1hcDxGYWlsb3ZlckRpc2FibGVkUmVhc29uLCBzdHJpbmc+KFtcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTm9Wb2x1bWUsIFQoJ05vIHBvb2xzIGFyZSBjb25maWd1cmVkLicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTm9WaXAsIFQoJ05vIGludGVyZmFjZXMgY29uZmlndXJlZCB3aXRoIFZpcnR1YWwgSVAuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5Ob1N5c3RlbVJlYWR5LCBUKCdPdGhlciBUcnVlTkFTIGNvbnRyb2xsZXIgaGFzIG5vdCBmaW5pc2hlZCBib290aW5nLicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTm9Qb25nLCBUKCdPdGhlciBUcnVlTkFTIGNvbnRyb2xsZXIgY2Fubm90IGJlIHJlYWNoZWQuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5Ob0ZhaWxvdmVyLCBUKCdGYWlsb3ZlciBpcyBhZG1pbmlzdHJhdGl2ZWx5IGRpc2FibGVkLicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTm9MaWNlbnNlLCBUKCdPdGhlciBUcnVlTkFTIGNvbnRyb2xsZXIgaGFzIG5vIGxpY2Vuc2UuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5EaXNhZ3JlZVZpcCwgVCgnTm9kZXMgVmlydHVhbCBJUCBzdGF0ZXMgZG8gbm90IGFncmVlLicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTWlzbWF0Y2hEaXNrcywgVCgnVGhlIFRydWVOQVMgY29udHJvbGxlcnMgZG8gbm90IGhhdmUgdGhlIHNhbWUgcXVhbnRpdHkgb2YgZGlza3MuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5NaXNtYXRjaFZlcnNpb25zLCBUKCdUcnVlTkFTIHNvZnR3YXJlIHZlcnNpb25zIGRvIG5vdCBtYXRjaCBiZXR3ZWVuIHN0b3JhZ2UgY29udHJvbGxlcnMuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5NaXNtYXRjaE5pY3MsIFQoJ05ldHdvcmsgaW50ZXJmYWNlcyBkbyBub3QgbWF0Y2ggYmV0d2VlbiBzdG9yYWdlIGNvbnRyb2xsZXJzLicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTm9Dcml0aWNhbEludGVyZmFjZXMsIFQoJ05vIG5ldHdvcmsgaW50ZXJmYWNlcyBhcmUgbWFya2VkIGNyaXRpY2FsIGZvciBmYWlsb3Zlci4nKV0sXG4gIFtGYWlsb3ZlckRpc2FibGVkUmVhc29uLk5vRmVuY2VkLCBUKCdGZW5jZWQgaXMgbm90IHJ1bm5pbmcuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5Ob0pvdXJuYWxTeW5jLCBUKCdUaHJlYWQgcmVzcG9uc2libGUgZm9yIHN5bmNpbmcgZGIgdHJhbnNhY3Rpb25zIG5vdCBydW5uaW5nIG9uIHRoaXMgbm9kZS4nKV0sXG4gIFtGYWlsb3ZlckRpc2FibGVkUmVhc29uLlJlbU5vSm91cm5hbFN5bmMsIFQoJ1RocmVhZCByZXNwb25zaWJsZSBmb3Igc3luY2luZyBkYiB0cmFuc2FjdGlvbnMgbm90IHJ1bm5pbmcgb24gb3RoZXIgbm9kZS4nKV0sXG4gIFtGYWlsb3ZlckRpc2FibGVkUmVhc29uLlJlbUZhaWxvdmVyT25nb2luZywgVCgnT3RoZXIgbm9kZSBpcyBjdXJyZW50bHkgcHJvY2Vzc2luZyBhIGZhaWxvdmVyIGV2ZW50LicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTG9jRmFpbG92ZXJPbmdvaW5nLCBUKCdUaGlzIG5vZGUgaXMgY3VycmVudGx5IHByb2Nlc3NpbmcgYSBmYWlsb3ZlciBldmVudC4nKV0sXG4gIFtGYWlsb3ZlckRpc2FibGVkUmVhc29uLk5vSGVhcnRiZWF0SWZhY2UsIFQoJ0xvY2FsIGhlYXJ0YmVhdCBpbnRlcmZhY2UgZG9lcyBub3QgZXhpc3QuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5Ob0NhcnJpZXJPbkhlYXJ0YmVhdCwgVCgnTG9jYWwgaGVhcnRiZWF0IGludGVyZmFjZSBpcyBkb3duLicpXSxcbiAgW0ZhaWxvdmVyRGlzYWJsZWRSZWFzb24uTG9jYWxGaXBzUmVib290UmVxdWlyZWQsIFQoJ1JlYm9vdCBvZiB0aGlzIG5vZGUgaXMgcmVxdWlyZWQgZm9yIEZJUFMgY2hhbmdlcy4nKV0sXG4gIFtGYWlsb3ZlckRpc2FibGVkUmVhc29uLlJlbW90ZUZpcHNSZWJvb3RSZXF1aXJlZCwgVCgnUmVib290IG9mIHRoZSBvdGhlciBub2RlIGlzIHJlcXVpcmVkIGZvciBGSVBTIGNoYW5nZXMuJyldLFxuICBbRmFpbG92ZXJEaXNhYmxlZFJlYXNvbi5Mb2NhbERhdGFzZXRNaWdyYXRpb25JblByb2dyZXNzLCBUKCdUaGlzIG5vZGUgaXMgY3VycmVudGx5IGNvbmZpZ3VyaW5nIHRoZSBzeXN0ZW0gZGF0YXNldC4nKV0sXG4gIFtGYWlsb3ZlckRpc2FibGVkUmVhc29uLlJlbW90ZURhdGFzZXRNaWdyYXRpb25JblByb2dyZXNzLCBUKCdPdGhlciBub2RlIGlzIGN1cnJlbnRseSBjb25maWd1cmluZyB0aGUgc3lzdGVtIGRhdGFzZXQuJyldLFxuXSk7XG4iXSwidmVyc2lvbiI6M30=