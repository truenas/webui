{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/buttons/copy-button/copy-button.component.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAEuB;AACvB,qDAAyD;AACzD,iDAA8E;AAC9E,uDAAuD;AACvD,8CAAwE;AACxE,6EAAwE;AACxE,qFAAiF;AACjF,uEAAmE;;AAmB5D,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IAM9B,YACU,QAAyB,EACzB,SAA2B;QAD3B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,cAAS,GAAT,SAAS,CAAkB;oBAPrB,YAAK,CAAC,QAAQ,EAAU;wBACpB,IAAA,YAAK,GAAW;QAE3B,gBAAW,GAAG,IAAA,eAAQ,EAAC,GAAG,EAAE,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,CAAC;IAKxE,CAAC;IAEI,kBAAkB;QACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACvE,CAAC;IAEO,4BAA4B,CAAC,IAAY;QAC/C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACpD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC;YACtF,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;YACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACpC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC7B,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,qBAAqB,CAAC,IAAY;QACxC,IAAI,SAAS,CAAC,SAAS,EAAE,CAAC;YACxB,OAAO,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC7C,CAAC;QAED,OAAO,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,eAAe;QACb,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC7G,CAAC;;AA1CU,kDAAmB;;;;;;;;;8BAAnB,mBAAmB;IAjB/B,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,iDAA2C;QAE3C,UAAU,EAAE,IAAI;QAChB,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,OAAO,EAAE;YACP,sBAAa;YACb,oBAAU;YACV,sBAAe;YACf,mCAAe;YACf,qBAAc;YACd,cAAO;YACP,kBAAW;YACX,8BAAa;SACd;KACF,CAAC;GACW,mBAAmB,CA2C/B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/buttons/copy-button/copy-button.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, Component, computed, input,\n} from '@angular/core';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatMenu, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@Component({\n  selector: 'ix-copy-button',\n  templateUrl: './copy-button.component.html',\n  styleUrls: ['./copy-button.component.scss'],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatIconButton,\n    MatTooltip,\n    TranslateModule,\n    IxIconComponent,\n    MatMenuTrigger,\n    MatMenu,\n    MatMenuItem,\n    TestDirective,\n  ],\n})\nexport class CopyButtonComponent {\n  readonly text = input.required<string>();\n  readonly jsonText = input<unknown>();\n\n  readonly isValidJson = computed(() => typeof this.jsonText() === 'object');\n\n  constructor(\n    private snackbar: SnackbarService,\n    private translate: TranslateService,\n  ) {}\n\n  private showSuccessMessage(): void {\n    this.snackbar.success(this.translate.instant('Copied to clipboard'));\n  }\n\n  private copyViaDeprecatedExecCommand(text: string): Promise<void> {\n    return new Promise((resolve) => {\n      const textArea = document.createElement('textarea');\n      Object.assign(textArea.style, { position: 'fixed', left: '-9999px', top: '-9999px' });\n      textArea.value = text;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      textArea.remove();\n      resolve();\n    });\n  }\n\n  private handleCopyToClipboard(text: string): Promise<void> {\n    if (navigator.clipboard) {\n      return navigator.clipboard.writeText(text);\n    }\n\n    return this.copyViaDeprecatedExecCommand(text);\n  }\n\n  copyToClipboard(): void {\n    this.handleCopyToClipboard(this.text()).then(() => this.showSuccessMessage());\n  }\n\n  copyJsonToClipboard(): void {\n    this.handleCopyToClipboard(JSON.stringify(this.jsonText(), null, 2)).then(() => this.showSuccessMessage());\n  }\n}\n"],"version":3}