a0bad5441ecd2e5b3e7c0acc48e88171
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxTableCellDirective = void 0;
const core_1 = require("@angular/core");
let IxTableCellDirective = class IxTableCellDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ngTemplateContextGuard(dir, ctx) {
        return true;
    }
};
exports.IxTableCellDirective = IxTableCellDirective;
IxTableCellDirective.ctorParameters = () => [
    { type: core_1.TemplateRef }
];
IxTableCellDirective.propDecorators = {
    dataProvider: [{ type: core_1.Input }],
    columnIndex: [{ type: core_1.Input }]
};
exports.IxTableCellDirective = IxTableCellDirective = __decorate([
    (0, core_1.Directive)({
        selector: '[ix-table-cell]',
        standalone: true,
    })
], IxTableCellDirective);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvZGlyZWN0aXZlcy9peC10YWJsZS1jZWxsLmRpcmVjdGl2ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx3Q0FBOEQ7QUFPdkQsSUFBTSxvQkFBb0IsR0FBMUIsTUFBTSxvQkFBb0I7SUFJL0IsWUFBbUIsV0FBMEM7UUFBMUMsZ0JBQVcsR0FBWCxXQUFXLENBQStCO0lBQUcsQ0FBQztJQUVqRSxNQUFNLENBQUMsc0JBQXNCLENBQzNCLEdBQTRCLEVBQzVCLEdBQVk7UUFFWixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7O0FBWFUsb0RBQW9COzs7OzsyQkFDOUIsWUFBSzswQkFDTCxZQUFLOzsrQkFGSyxvQkFBb0I7SUFKaEMsSUFBQSxnQkFBUyxFQUFDO1FBQ1QsUUFBUSxFQUFFLGlCQUFpQjtRQUMzQixVQUFVLEVBQUUsSUFBSTtLQUNqQixDQUFDO0dBQ1csb0JBQW9CLENBWWhDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9tb2R1bGVzL2l4LXRhYmxlL2RpcmVjdGl2ZXMvaXgtdGFibGUtY2VsbC5kaXJlY3RpdmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGFQcm92aWRlciB9IGZyb20gJ2FwcC9tb2R1bGVzL2l4LXRhYmxlL2ludGVyZmFjZXMvZGF0YS1wcm92aWRlci5pbnRlcmZhY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbaXgtdGFibGUtY2VsbF0nLFxuICBzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBJeFRhYmxlQ2VsbERpcmVjdGl2ZTxUPiB7XG4gIEBJbnB1dCgpIGRhdGFQcm92aWRlcjogRGF0YVByb3ZpZGVyPFQ+O1xuICBASW5wdXQoKSBjb2x1bW5JbmRleDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8eyAkaW1wbGljaXQ6IFQgfT4pIHt9XG5cbiAgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQ8VD4oXG4gICAgZGlyOiBJeFRhYmxlQ2VsbERpcmVjdGl2ZTxUPixcbiAgICBjdHg6IHVua25vd24sXG4gICk6IGN0eCBpcyB7ICRpbXBsaWNpdDogVDsgaW5kZXg6IG51bWJlciB9IHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9