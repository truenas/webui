5f00682ccc0e0ed3caf60a9f0bdc7244
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.datasetPresetLabels = exports.DatasetPreset = exports.datasetCaseSensitivityLabels = exports.DatasetCaseSensitivity = exports.DatasetChecksum = exports.datasetSnapdevLabels = exports.DatasetSnapdev = exports.datasetSnapdirLabels = exports.DatasetSnapdir = exports.datasetSyncLabels = exports.DatasetSync = exports.DatasetType = exports.DatasetSource = exports.DatasetQuotaType = exports.DatasetEncryptionType = exports.DatasetAclType = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
var DatasetAclType;
(function (DatasetAclType) {
    DatasetAclType["Inherit"] = "INHERIT";
    DatasetAclType["Off"] = "OFF";
    DatasetAclType["NoAcl"] = "NOACL";
    DatasetAclType["Nfsv4"] = "NFSV4";
    DatasetAclType["Nfs4Acl"] = "NFS4ACL";
    DatasetAclType["Posix"] = "POSIX";
    DatasetAclType["PosixAcl"] = "POSIXACL";
})(DatasetAclType || (exports.DatasetAclType = DatasetAclType = {}));
var DatasetEncryptionType;
(function (DatasetEncryptionType) {
    DatasetEncryptionType["Default"] = "DEFAULT";
    DatasetEncryptionType["Passphrase"] = "PASSPHRASE";
})(DatasetEncryptionType || (exports.DatasetEncryptionType = DatasetEncryptionType = {}));
var DatasetQuotaType;
(function (DatasetQuotaType) {
    DatasetQuotaType["Dataset"] = "DATASET";
    DatasetQuotaType["Project"] = "PROJECT";
    DatasetQuotaType["User"] = "USER";
    DatasetQuotaType["Group"] = "GROUP";
    DatasetQuotaType["UserObj"] = "USEROBJ";
    DatasetQuotaType["GroupObj"] = "GROUPOBJ";
})(DatasetQuotaType || (exports.DatasetQuotaType = DatasetQuotaType = {}));
var DatasetSource;
(function (DatasetSource) {
    DatasetSource["Local"] = "local";
    DatasetSource["Remote"] = "remote";
})(DatasetSource || (exports.DatasetSource = DatasetSource = {}));
var DatasetType;
(function (DatasetType) {
    DatasetType["Filesystem"] = "FILESYSTEM";
    DatasetType["Volume"] = "VOLUME";
})(DatasetType || (exports.DatasetType = DatasetType = {}));
var DatasetSync;
(function (DatasetSync) {
    DatasetSync["Standard"] = "STANDARD";
    DatasetSync["Always"] = "ALWAYS";
    DatasetSync["Disabled"] = "DISABLED";
})(DatasetSync || (exports.DatasetSync = DatasetSync = {}));
exports.datasetSyncLabels = new Map([
    [DatasetSync.Standard, (0, ngx_translate_extract_marker_1.marker)('Standard')],
    [DatasetSync.Always, (0, ngx_translate_extract_marker_1.marker)('Always')],
    [DatasetSync.Disabled, (0, ngx_translate_extract_marker_1.marker)('Disabled')],
]);
var DatasetSnapdir;
(function (DatasetSnapdir) {
    DatasetSnapdir["Visible"] = "VISIBLE";
    DatasetSnapdir["Hidden"] = "HIDDEN";
    DatasetSnapdir["Disabled"] = "DISABLED";
})(DatasetSnapdir || (exports.DatasetSnapdir = DatasetSnapdir = {}));
exports.datasetSnapdirLabels = new Map([
    [DatasetSnapdir.Visible, (0, ngx_translate_extract_marker_1.marker)('Visible')],
    [DatasetSnapdir.Hidden, (0, ngx_translate_extract_marker_1.marker)('Invisible')],
    [DatasetSnapdir.Disabled, (0, ngx_translate_extract_marker_1.marker)('Disabled')],
]);
var DatasetSnapdev;
(function (DatasetSnapdev) {
    DatasetSnapdev["Visible"] = "VISIBLE";
    DatasetSnapdev["Hidden"] = "HIDDEN";
})(DatasetSnapdev || (exports.DatasetSnapdev = DatasetSnapdev = {}));
exports.datasetSnapdevLabels = new Map([
    [DatasetSnapdev.Visible, (0, ngx_translate_extract_marker_1.marker)('Visible')],
    [DatasetSnapdev.Hidden, (0, ngx_translate_extract_marker_1.marker)('Hidden')],
]);
var DatasetChecksum;
(function (DatasetChecksum) {
    DatasetChecksum["On"] = "ON";
    DatasetChecksum["Off"] = "OFF";
    DatasetChecksum["Fletcher2"] = "FLETCHER2";
    DatasetChecksum["Fletcher4"] = "FLETCHER4";
    DatasetChecksum["Sha256"] = "SHA256";
    DatasetChecksum["Sha512"] = "SHA512";
    DatasetChecksum["Skein"] = "SKEIN";
    DatasetChecksum["Edonr"] = "EDONR";
})(DatasetChecksum || (exports.DatasetChecksum = DatasetChecksum = {}));
var DatasetCaseSensitivity;
(function (DatasetCaseSensitivity) {
    DatasetCaseSensitivity["Sensitive"] = "SENSITIVE";
    DatasetCaseSensitivity["Insensitive"] = "INSENSITIVE";
})(DatasetCaseSensitivity || (exports.DatasetCaseSensitivity = DatasetCaseSensitivity = {}));
exports.datasetCaseSensitivityLabels = new Map([
    [DatasetCaseSensitivity.Sensitive, (0, ngx_translate_extract_marker_1.marker)('Sensitive')],
    [DatasetCaseSensitivity.Insensitive, (0, ngx_translate_extract_marker_1.marker)('Insensitive')],
]);
var DatasetPreset;
(function (DatasetPreset) {
    DatasetPreset["Generic"] = "GENERIC";
    DatasetPreset["Smb"] = "SMB";
    DatasetPreset["Apps"] = "APPS";
    DatasetPreset["Multiprotocol"] = "MULTIPROTOCOL";
})(DatasetPreset || (exports.DatasetPreset = DatasetPreset = {}));
exports.datasetPresetLabels = new Map([
    [DatasetPreset.Generic, (0, ngx_translate_extract_marker_1.marker)('Generic')],
    [DatasetPreset.Smb, (0, ngx_translate_extract_marker_1.marker)('SMB')],
    [DatasetPreset.Apps, (0, ngx_translate_extract_marker_1.marker)('Apps')],
    [DatasetPreset.Multiprotocol, (0, ngx_translate_extract_marker_1.marker)('Multiprotocol')],
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2VudW1zL2RhdGFzZXQuZW51bS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwwRkFBc0U7QUFHdEUsSUFBWSxjQVFYO0FBUkQsV0FBWSxjQUFjO0lBQ3hCLHFDQUFtQixDQUFBO0lBQ25CLDZCQUFXLENBQUE7SUFDWCxpQ0FBZSxDQUFBO0lBQ2YsaUNBQWUsQ0FBQTtJQUNmLHFDQUFtQixDQUFBO0lBQ25CLGlDQUFlLENBQUE7SUFDZix1Q0FBcUIsQ0FBQTtBQUN2QixDQUFDLEVBUlcsY0FBYyw4QkFBZCxjQUFjLFFBUXpCO0FBRUQsSUFBWSxxQkFHWDtBQUhELFdBQVkscUJBQXFCO0lBQy9CLDRDQUFtQixDQUFBO0lBQ25CLGtEQUF5QixDQUFBO0FBQzNCLENBQUMsRUFIVyxxQkFBcUIscUNBQXJCLHFCQUFxQixRQUdoQztBQUVELElBQVksZ0JBT1g7QUFQRCxXQUFZLGdCQUFnQjtJQUMxQix1Q0FBbUIsQ0FBQTtJQUNuQix1Q0FBbUIsQ0FBQTtJQUNuQixpQ0FBYSxDQUFBO0lBQ2IsbUNBQWUsQ0FBQTtJQUNmLHVDQUFtQixDQUFBO0lBQ25CLHlDQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFQVyxnQkFBZ0IsZ0NBQWhCLGdCQUFnQixRQU8zQjtBQUVELElBQVksYUFHWDtBQUhELFdBQVksYUFBYTtJQUN2QixnQ0FBZSxDQUFBO0lBQ2Ysa0NBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUhXLGFBQWEsNkJBQWIsYUFBYSxRQUd4QjtBQUVELElBQVksV0FHWDtBQUhELFdBQVksV0FBVztJQUNyQix3Q0FBeUIsQ0FBQTtJQUN6QixnQ0FBaUIsQ0FBQTtBQUNuQixDQUFDLEVBSFcsV0FBVywyQkFBWCxXQUFXLFFBR3RCO0FBS0QsSUFBWSxXQUlYO0FBSkQsV0FBWSxXQUFXO0lBQ3JCLG9DQUFxQixDQUFBO0lBQ3JCLGdDQUFpQixDQUFBO0lBQ2pCLG9DQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFKVyxXQUFXLDJC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RUFBQyxlQUFlLENBQUMsQ0FBQztDQUNsRCxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2VudW1zL2RhdGFzZXQuZW51bS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXJrZXIgYXMgVCB9IGZyb20gJ0BiaWVzYmplcmcvbmd4LXRyYW5zbGF0ZS1leHRyYWN0LW1hcmtlcic7XG5pbXBvcnQgeyBCcmFuZCB9IGZyb20gJ3V0aWxpdHktdHlwZXMnO1xuXG5leHBvcnQgZW51bSBEYXRhc2V0QWNsVHlwZSB7XG4gIEluaGVyaXQgPSAnSU5IRVJJVCcsXG4gIE9mZiA9ICdPRkYnLFxuICBOb0FjbCA9ICdOT0FDTCcsXG4gIE5mc3Y0ID0gJ05GU1Y0JyxcbiAgTmZzNEFjbCA9ICdORlM0QUNMJyxcbiAgUG9zaXggPSAnUE9TSVgnLFxuICBQb3NpeEFjbCA9ICdQT1NJWEFDTCcsXG59XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRFbmNyeXB0aW9uVHlwZSB7XG4gIERlZmF1bHQgPSAnREVGQVVMVCcsIC8vIEtleVxuICBQYXNzcGhyYXNlID0gJ1BBU1NQSFJBU0UnLFxufVxuXG5leHBvcnQgZW51bSBEYXRhc2V0UXVvdGFUeXBlIHtcbiAgRGF0YXNldCA9ICdEQVRBU0VUJyxcbiAgUHJvamVjdCA9ICdQUk9KRUNUJyxcbiAgVXNlciA9ICdVU0VSJyxcbiAgR3JvdXAgPSAnR1JPVVAnLFxuICBVc2VyT2JqID0gJ1VTRVJPQkonLFxuICBHcm91cE9iaiA9ICdHUk9VUE9CSicsXG59XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRTb3VyY2Uge1xuICBMb2NhbCA9ICdsb2NhbCcsXG4gIFJlbW90ZSA9ICdyZW1vdGUnLFxufVxuXG5leHBvcnQgZW51bSBEYXRhc2V0VHlwZSB7XG4gIEZpbGVzeXN0ZW0gPSAnRklMRVNZU1RFTScsXG4gIFZvbHVtZSA9ICdWT0xVTUUnLFxufVxuXG5leHBvcnQgdHlwZSBEYXRhc2V0Vm9sdW1lQmxvY2tTaXplID0gQnJhbmQ8c3RyaW5nLCAnRGF0YXNldFZvbHVtZUJsb2NrU2l6ZSc+O1xuZXhwb3J0IHR5cGUgRGF0YXNldFJlY29yZFNpemUgPSBCcmFuZDxzdHJpbmcsICdEYXRhc2V0UmVjb3JkU2l6ZSc+O1xuXG5leHBvcnQgZW51bSBEYXRhc2V0U3luYyB7XG4gIFN0YW5kYXJkID0gJ1NUQU5EQVJEJyxcbiAgQWx3YXlzID0gJ0FMV0FZUycsXG4gIERpc2FibGVkID0gJ0RJU0FCTEVEJyxcbn1cblxuZXhwb3J0IGNvbnN0IGRhdGFzZXRTeW5jTGFiZWxzID0gbmV3IE1hcDxEYXRhc2V0U3luYywgc3RyaW5nPihbXG4gIFtEYXRhc2V0U3luYy5TdGFuZGFyZCwgVCgnU3RhbmRhcmQnKV0sXG4gIFtEYXRhc2V0U3luYy5BbHdheXMsIFQoJ0Fsd2F5cycpXSxcbiAgW0RhdGFzZXRTeW5jLkRpc2FibGVkLCBUKCdEaXNhYmxlZCcpXSxcbl0pO1xuXG5leHBvcnQgZW51bSBEYXRhc2V0U25hcGRpciB7XG4gIFZpc2libGUgPSAnVklTSUJMRScsXG4gIEhpZGRlbiA9ICdISURERU4nLFxuICBEaXNhYmxlZCA9ICdESVNBQkxFRCcsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0U25hcGRpckxhYmVscyA9IG5ldyBNYXA8RGF0YXNldFNuYXBkaXIsIHN0cmluZz4oW1xuICBbRGF0YXNldFNuYXBkaXIuVmlzaWJsZSwgVCgnVmlzaWJsZScpXSxcbiAgW0RhdGFzZXRTbmFwZGlyLkhpZGRlbiwgVCgnSW52aXNpYmxlJyldLFxuICBbRGF0YXNldFNuYXBkaXIuRGlzYWJsZWQsIFQoJ0Rpc2FibGVkJyldLFxuXSk7XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRTbmFwZGV2IHtcbiAgVmlzaWJsZSA9ICdWSVNJQkxFJyxcbiAgSGlkZGVuID0gJ0hJRERFTicsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0U25hcGRldkxhYmVscyA9IG5ldyBNYXA8RGF0YXNldFNuYXBkZXYsIHN0cmluZz4oW1xuICBbRGF0YXNldFNuYXBkZXYuVmlzaWJsZSwgVCgnVmlzaWJsZScpXSxcbiAgW0RhdGFzZXRTbmFwZGV2LkhpZGRlbiwgVCgnSGlkZGVuJyldLFxuXSk7XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRDaGVja3N1bSB7XG4gIE9uID0gJ09OJyxcbiAgT2ZmID0gJ09GRicsXG4gIEZsZXRjaGVyMiA9ICdGTEVUQ0hFUjInLFxuICBGbGV0Y2hlcjQgPSAnRkxFVENIRVI0JyxcbiAgU2hhMjU2ID0gJ1NIQTI1NicsXG4gIFNoYTUxMiA9ICdTSEE1MTInLFxuICBTa2VpbiA9ICdTS0VJTicsXG4gIEVkb25yID0gJ0VET05SJyxcbn1cblxuZXhwb3J0IGVudW0gRGF0YXNldENhc2VTZW5zaXRpdml0eSB7XG4gIFNlbnNpdGl2ZSA9ICdTRU5TSVRJVkUnLFxuICBJbnNlbnNpdGl2ZSA9ICdJTlNFTlNJVElWRScsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0Q2FzZVNlbnNpdGl2aXR5TGFiZWxzID0gbmV3IE1hcDxEYXRhc2V0Q2FzZVNlbnNpdGl2aXR5LCBzdHJpbmc+KFtcbiAgW0RhdGFzZXRDYXNlU2Vuc2l0aXZpdHkuU2Vuc2l0aXZlLCBUKCdTZW5zaXRpdmUnKV0sXG4gIFtEYXRhc2V0Q2FzZVNlbnNpdGl2aXR5Lkluc2Vuc2l0aXZlLCBUKCdJbnNlbnNpdGl2ZScpXSxcbl0pO1xuXG5leHBvcnQgZW51bSBEYXRhc2V0UHJlc2V0IHtcbiAgR2VuZXJpYyA9ICdHRU5FUklDJyxcbiAgU21iID0gJ1NNQicsXG4gIEFwcHMgPSAnQVBQUycsXG4gIE11bHRpcHJvdG9jb2wgPSAnTVVMVElQUk9UT0NPTCcsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0UHJlc2V0TGFiZWxzID0gbmV3IE1hcDxEYXRhc2V0UHJlc2V0LCBzdHJpbmc+KFtcbiAgW0RhdGFzZXRQcmVzZXQuR2VuZXJpYywgVCgnR2VuZXJpYycpXSxcbiAgW0RhdGFzZXRQcmVzZXQuU21iLCBUKCdTTUInKV0sXG4gIFtEYXRhc2V0UHJlc2V0LkFwcHMsIFQoJ0FwcHMnKV0sXG4gIFtEYXRhc2V0UHJlc2V0Lk11bHRpcHJvdG9jb2wsIFQoJ011bHRpcHJvdG9jb2wnKV0sXG5dKTtcbiJdLCJ2ZXJzaW9uIjozfQ==