{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/components/train-card/train-card.component.spec.ts","mappings":";;;;;;;;;;;AACA,0DAAyE;AACzE,0CAAqD;AACrD,8DAAoE;AACpE,iDAAyF;AACzF,+BAA2C;AAC3C,4EAAkE;AAClE,sFAA4E;AAE5E,wFAAmF;AACnF,6GAAwG;AACxG,kFAA8E;AAC9E,oFAAgF;AAChF,gFAA2E;AAE3E,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,SAAwC,CAAC;IAC7C,IAAI,MAAqB,CAAC;IAE1B,MAAM,eAAe,GAAG,IAAA,6BAAsB,EAAC;QAC7C,SAAS,EAAE,yCAAkB;QAC7B,OAAO,EAAE;YACP,2BAAmB;SACpB;QACD,SAAS,EAAE;YACT,IAAA,0BAAQ,GAAE;YACV,IAAA,oCAAa,EAAC,EAAE,CAAC;YACjB,IAAA,mBAAY,EAAC,4BAAY,EAAE;gBACzB,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,KAAK,CAAC,CAAC;gBACzC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC;oBAC1B,MAAM,EAAE,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,WAAW,EAAE,wBAAwB,EAAE,EAAE;oBACjF,OAAO,EAAE,YAAY;oBACrB,QAAQ,EAAE,YAAY;iBACD,CAAC,CAAC;gBACzB,WAAW,EAAE,IAAI,sBAAe,CAAC,QAAQ,CAAC;gBAC1C,cAAc,EAAE,IAAI,sBAAe,CAAC,SAAS,CAAC;gBAC9C,cAAc,EAAE,IAAI,sBAAe,CAAC,SAAS,CAAC;gBAC9C,wBAAwB,EAAE,IAAI,sBAAe,CAAS,EAAE,CAAC;gBACzD,2BAA2B,EAAE,IAAI,sBAAe,CAAS,EAAE,CAAC;aAC7D,CAAC;YACF,IAAA,mBAAY,EAAC,8BAAa,EAAE,EAC3B,CAAC;YACF,IAAA,mBAAY,EAAC,6CAAoB,EAAE;gBACjC,aAAa,EAAE,IAAA,SAAE,EAAC,OAAO,CAAC;aAC3B,CAAC;SACH;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,eAAe,EAAE,CAAC;QAC9B,MAAM,GAAG,mCAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,UAAU,CAAC,oDAAoD,CAAC,CAAC;IACjH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAS,EAAE;QAC5D,MAAM,aAAa,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,0BAAgB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,oBAAoB,EAAE,CAAC,CAAC,CAAC;QACzG,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;QAE5B,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,4BAAY,CAAC,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAClE,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,GAAS,EAAE;QAClE,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,+BAAa,CAAC,CAAC;QACpD,MAAM,IAAI,CAAC,QAAQ,CAAC;YAClB,mDAAmD,EAAE,IAAI;SAC1D,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,4BAAY,CAAC,CAAC,eAAe,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IACpF,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/components/train-card/train-card.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { SystemUpdateTrains } from 'app/interfaces/system-update.interface';\nimport { IxFormHarness } from 'app/modules/forms/ix-forms/testing/ix-form.harness';\nimport { TrainCardComponent } from 'app/pages/system/update/components/train-card/train-card.component';\nimport { TrainService } from 'app/pages/system/update/services/train.service';\nimport { UpdateService } from 'app/pages/system/update/services/update.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\n\ndescribe('TrainCardComponent', () => {\n  let spectator: Spectator<TrainCardComponent>;\n  let loader: HarnessLoader;\n\n  const createComponent = createComponentFactory({\n    component: TrainCardComponent,\n    imports: [\n      ReactiveFormsModule,\n    ],\n    providers: [\n      mockAuth(),\n      mockWebSocket([]),\n      mockProvider(TrainService, {\n        getAutoDownload: jest.fn(() => of(false)),\n        getTrains: jest.fn(() => of({\n          trains: { 'some train': { sequence: '', description: 'Some train description' } },\n          current: 'some train',\n          selected: 'some train',\n        } as SystemUpdateTrains)),\n        trainValue$: new BehaviorSubject('train1'),\n        fullTrainList$: new BehaviorSubject(undefined),\n        selectedTrain$: new BehaviorSubject(undefined),\n        currentTrainDescription$: new BehaviorSubject<string>(''),\n        trainDescriptionOnPageLoad$: new BehaviorSubject<string>(''),\n      }),\n      mockProvider(UpdateService, {\n      }),\n      mockProvider(SystemGeneralService, {\n        updateRunning: of('false'),\n      }),\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createComponent();\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n  });\n\n  it('shows single train name', () => {\n    expect(spectator.query('.single-train-name')).toHaveText('Current Train: some train - Some train description');\n  });\n\n  it('calls \"check\" when Refresh button is pressed', async () => {\n    const refreshButton = await loader.getHarness(MatButtonHarness.with({ selector: '[ixTest=\"refresh\"]' }));\n    await refreshButton.click();\n\n    expect(spectator.inject(TrainService).check).toHaveBeenCalled();\n  });\n\n  it('calls \"toggleAutoCheck\" when auto check is changed', async () => {\n    const form = await loader.getHarness(IxFormHarness);\n    await form.fillForm({\n      'Check for Updates Daily and Download if Available': true,\n    });\n\n    expect(spectator.inject(TrainService).toggleAutoCheck).toHaveBeenCalledWith(true);\n  });\n});\n"],"version":3}