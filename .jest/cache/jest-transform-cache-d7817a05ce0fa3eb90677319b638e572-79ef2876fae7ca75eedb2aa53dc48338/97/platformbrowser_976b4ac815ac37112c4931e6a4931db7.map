{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"],
  "sourcesContent": ["/**\n * @license Angular v18.2.4\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { \u0275DomAdapter, \u0275setRootDomAdapter, \u0275parseCookieValue, \u0275getDOM, isPlatformServer, DOCUMENT, \u0275PLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { \u0275getDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { \u0275global, \u0275RuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, inject, \u0275GLOBAL_EVENT_DELEGATION, \u0275internalCreateApplication, ErrorHandler, \u0275setDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, \u0275TESTABILITY_GETTER, \u0275TESTABILITY, Testability, NgZone, TestabilityRegistry, \u0275INJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ApplicationRef, \u0275Console, forwardRef, \u0275XSS_SECURITY_URL, SecurityContext, \u0275allowSanitizationBypassAndThrow, \u0275unwrapSafeValue, \u0275_sanitizeUrl, \u0275_sanitizeHtml, \u0275bypassSanitizationTrustHtml, \u0275bypassSanitizationTrustStyle, \u0275bypassSanitizationTrustScript, \u0275bypassSanitizationTrustUrl, \u0275bypassSanitizationTrustResourceUrl, \u0275withI18nSupport, \u0275withEventReplay, ENVIRONMENT_INITIALIZER, \u0275formatRuntimeError, makeEnvironmentProviders, \u0275withDomHydration, Version } from '@angular/core';\nimport { \u0275withHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends \u0275DomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        \u0275setRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener);\n        return () => {\n            el.removeEventListener(evt, listener);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        node.remove();\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return \u0275parseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n    // The base URL doesn't really matter, we just need it so relative paths have something\n    // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n    return new URL(url, document.baseURI).pathname;\n}\n\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        \u0275global['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new \u0275RuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'Could not find testability for element.');\n            }\n            return testability;\n        };\n        \u0275global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        \u0275global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback) => {\n            const testabilities = \u0275global['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            const decrement = function () {\n                count--;\n                if (count == 0) {\n                    callback();\n                }\n            };\n            testabilities.forEach((testability) => {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!\u0275global['frameworkStabilizers']) {\n            \u0275global['frameworkStabilizers'] = [];\n        }\n        \u0275global['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (\u0275getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserXhr }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach((plugin) => {\n            plugin.manager = this;\n        });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        let plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        plugin = plugins.find((plugin) => plugin.supports(eventName));\n        if (!plugin) {\n            throw new \u0275RuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `No event manager plugin found for event ${eventName}`);\n        }\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: EventManager }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }] });\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n    // TODO: remove (has some usage in G3)\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n    constructor(doc, appId, nonce, platformId = {}) {\n        this.doc = doc;\n        this.appId = appId;\n        this.nonce = nonce;\n        this.platformId = platformId;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this.styleRef = new Map();\n        this.hostNodes = new Set();\n        this.styleNodesInDOM = this.collectServerRenderedStyles();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.resetHostNodes();\n    }\n    addStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, 1);\n            if (usageCount === 1) {\n                this.onStyleAdded(style);\n            }\n        }\n    }\n    removeStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, -1);\n            if (usageCount <= 0) {\n                this.onStyleRemoved(style);\n            }\n        }\n    }\n    ngOnDestroy() {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        if (styleNodesInDOM) {\n            styleNodesInDOM.forEach((node) => node.remove());\n            styleNodesInDOM.clear();\n        }\n        for (const style of this.getAllStyles()) {\n            this.onStyleRemoved(style);\n        }\n        this.resetHostNodes();\n    }\n    addHost(hostNode) {\n        this.hostNodes.add(hostNode);\n        for (const style of this.getAllStyles()) {\n            this.addStyleToHost(hostNode, style);\n        }\n    }\n    removeHost(hostNode) {\n        this.hostNodes.delete(hostNode);\n    }\n    getAllStyles() {\n        return this.styleRef.keys();\n    }\n    onStyleAdded(style) {\n        for (const host of this.hostNodes) {\n            this.addStyleToHost(host, style);\n        }\n    }\n    onStyleRemoved(style) {\n        const styleRef = this.styleRef;\n        styleRef.get(style)?.elements?.forEach((node) => node.remove());\n        styleRef.delete(style);\n    }\n    collectServerRenderedStyles() {\n        const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n        if (styles?.length) {\n            const styleMap = new Map();\n            styles.forEach((style) => {\n                if (style.textContent != null) {\n                    styleMap.set(style.textContent, style);\n                }\n            });\n            return styleMap;\n        }\n        return null;\n    }\n    changeUsageCount(style, delta) {\n        const map = this.styleRef;\n        if (map.has(style)) {\n            const styleRefValue = map.get(style);\n            styleRefValue.usage += delta;\n            return styleRefValue.usage;\n        }\n        map.set(style, { usage: delta, elements: [] });\n        return delta;\n    }\n    getStyleElement(host, style) {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        const styleEl = styleNodesInDOM?.get(style);\n        if (styleEl?.parentNode === host) {\n            // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n            styleNodesInDOM.delete(style);\n            styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // This attribute is solely used for debugging purposes.\n                styleEl.setAttribute('ng-style-reused', '');\n            }\n            return styleEl;\n        }\n        else {\n            const styleEl = this.doc.createElement('style');\n            if (this.nonce) {\n                styleEl.setAttribute('nonce', this.nonce);\n            }\n            styleEl.textContent = style;\n            if (this.platformIsServer) {\n                styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n            }\n            host.appendChild(styleEl);\n            return styleEl;\n        }\n    }\n    addStyleToHost(host, style) {\n        const styleEl = this.getStyleElement(host, style);\n        const styleRef = this.styleRef;\n        const styleElRef = styleRef.get(style)?.elements;\n        if (styleElRef) {\n            styleElRef.push(styleEl);\n        }\n        else {\n            styleRef.set(style, { elements: [styleEl], usage: 1 });\n        }\n    }\n    resetHostNodes() {\n        const hostNodes = this.hostNodes;\n        hostNodes.clear();\n        // Re-add the head element back since this is the default host.\n        hostNodes.add(this.doc.head);\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: SharedStylesHost, deps: [{ token: DOCUMENT }, { token: APP_ID }, { token: CSP_NONCE, optional: true }, { token: PLATFORM_ID }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: SharedStylesHost }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/Math/MathML',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A DI token that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n    providedIn: 'root',\n    factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n    return styles.map((s) => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.ngZone = ngZone;\n        this.nonce = nonce;\n        this.rendererByCompId = new Map();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n            // Domino does not support shadow DOM.\n            type = { ...type, encapsulation: ViewEncapsulation.Emulated };\n        }\n        const renderer = this.getOrCreateRenderer(element, type);\n        // Renderers have different logic due to different encapsulation behaviours.\n        // Ex: for emulated, an attribute is added to the element.\n        if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n            renderer.applyToHost(element);\n        }\n        else if (renderer instanceof NoneEncapsulationDomRenderer) {\n            renderer.applyStyles();\n        }\n        return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n        const rendererByCompId = this.rendererByCompId;\n        let renderer = rendererByCompId.get(type.id);\n        if (!renderer) {\n            const doc = this.doc;\n            const ngZone = this.ngZone;\n            const eventManager = this.eventManager;\n            const sharedStylesHost = this.sharedStylesHost;\n            const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n            const platformIsServer = this.platformIsServer;\n            switch (type.encapsulation) {\n                case ViewEncapsulation.Emulated:\n                    renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n                case ViewEncapsulation.ShadowDom:\n                    return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n                default:\n                    renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n            }\n            rendererByCompId.set(type.id, renderer);\n        }\n        return renderer;\n    }\n    ngOnDestroy() {\n        this.rendererByCompId.clear();\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: SharedStylesHost }, { token: APP_ID }, { token: REMOVE_STYLES_ON_COMPONENT_DESTROY }, { token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: CSP_NONCE }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomRendererFactory2 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: EventManager }, { type: SharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\nclass DefaultDomRenderer2 {\n    constructor(eventManager, doc, ngZone, platformIsServer) {\n        this.eventManager = eventManager;\n        this.doc = doc;\n        this.ngZone = ngZone;\n        this.platformIsServer = platformIsServer;\n        this.data = Object.create(null);\n        /**\n         * By default this renderer throws when encountering synthetic properties\n         * This can be disabled for example by the AsyncAnimationRendererFactory\n         */\n        this.throwOnSyntheticProps = true;\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return this.doc.createElement(name);\n    }\n    createComment(value) {\n        return this.doc.createComment(value);\n    }\n    createText(value) {\n        return this.doc.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(_parent, oldChild) {\n        oldChild.remove();\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n        if (!el) {\n            throw new \u0275RuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            // removeProperty has no effect when used on camelCased properties.\n            el.style.removeProperty(style);\n        }\n        else {\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        if (el == null) {\n            return;\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            target = \u0275getDOM().getGlobalEventTarget(this.doc, target);\n            if (!target) {\n                throw new Error(`Unsupported event target ${target} for event ${event}`);\n            }\n        }\n        return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n    }\n    decoratePreventDefault(eventHandler) {\n        // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n        // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n        // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n        // unwrap the listener (see below).\n        return (event) => {\n            // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n            // debug_node can inspect the listener toString contents for the existence of this special\n            // token. Because the token is a string literal, it is ensured to not be modified by compiled\n            // code.\n            if (event === '__ngUnwrap__') {\n                return eventHandler;\n            }\n            // Run the event handler inside the ngZone because event handlers are not patched\n            // by Zone on the server. This is required only for tests.\n            const allowDefaultBehavior = this.platformIsServer\n                ? this.ngZone.runGuarded(() => eventHandler(event))\n                : eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                event.preventDefault();\n            }\n            return undefined;\n        };\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new \u0275RuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = shimStylesContent(component.id, component.styles);\n        for (const style of styles) {\n            const styleEl = document.createElement('style');\n            if (nonce) {\n                styleEl.setAttribute('nonce', nonce);\n            }\n            styleEl.textContent = style;\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(_parent, oldChild) {\n        return super.removeChild(null, oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n    }\n    applyStyles() {\n        this.sharedStylesHost.addStyles(this.styles);\n    }\n    destroy() {\n        if (!this.removeStylesOnCompDestroy) {\n            return;\n        }\n        this.sharedStylesHost.removeStyles(this.styles);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n    constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n        const compId = appId + '-' + component.id;\n        super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n        this.contentAttr = shimContentAttribute(compId);\n        this.hostAttr = shimHostAttribute(compId);\n    }\n    applyToHost(element) {\n        this.applyStyles();\n        this.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomEventsPlugin }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nclass EventDelegationPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n        this.delegate = inject(\u0275GLOBAL_EVENT_DELEGATION, { optional: true });\n    }\n    supports(eventName) {\n        // If `GlobalDelegationEventPlugin` implementation is not provided,\n        // this plugin is kept disabled.\n        return this.delegate ? this.delegate.supports(eventName) : false;\n    }\n    addEventListener(element, eventName, handler) {\n        return this.delegate.addEventListener(element, eventName, handler);\n    }\n    removeEventListener(element, eventName, callback) {\n        return this.delegate.removeEventListener(element, eventName, callback);\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: EventDelegationPlugin, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: EventDelegationPlugin }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: EventDelegationPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS',\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey,\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return \u0275getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach((modifierName) => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach((modifierName) => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: KeyEventsPlugin }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/components/importing).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return \u0275internalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return \u0275internalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app\n    // code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    \u0275setDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: \u0275PLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: \u0275TESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: \u0275TESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, \u0275TESTABILITY_GETTER],\n    },\n    {\n        provide: Testability, // Also provide as `Testability` for backwards-compatibility.\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, \u0275TESTABILITY_GETTER],\n    },\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: \u0275INJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID],\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: EventDelegationPlugin,\n        multi: true,\n    },\n    DomRendererFactory2,\n    SharedStylesHost,\n    EventManager,\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    typeof ngDevMode === 'undefined' || ngDevMode\n        ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true }\n        : [],\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n            throw new \u0275RuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     * @deprecated Use {@link APP_ID} instead to set the application ID.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [{ provide: APP_ID, useValue: params.appId }],\n        };\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserModule, providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS], imports: [CommonModule, ApplicationModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }] });\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = \u0275getDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter((elem) => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: Meta, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv',\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: Title, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = (\u0275global['ng'] = \u0275global['ng'] || {});\n        ng[name] = value;\n    }\n}\n\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        if (record && 'profile' in console && typeof console.profile === 'function') {\n            console.profile(profileName);\n        }\n        const start = performance.now();\n        let numTicks = 0;\n        while (numTicks < 5 || performance.now() - start < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performance.now();\n        if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n            console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        console.log(`ran ${numTicks} change detection cycles`);\n        console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null\n                ? elementMatches(debugElement.nativeElement, selector)\n                : false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (\u0275getDOM().isElementNode(n)) {\n        return ((n.matches && n.matches(selector)) ||\n            (n.msMatchesSelector && n.msMatchesSelector(selector)) ||\n            (n.webkitMatchesSelector && n.webkitMatchesSelector(selector)));\n    }\n    return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true,\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a HammerLoader to Angular.\n *\n * @see {@link HammerLoader}\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerGestureConfig }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            }).catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.\u0275Console }, { token: HAMMER_LOADER, optional: true }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerGesturesPlugin }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.\u0275Console }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }] });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nclass HammerModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerModule }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerModule, providers: [\n            {\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: HammerGesturesPlugin,\n                multi: true,\n                deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, \u0275Console, [new Optional(), HAMMER_LOADER]],\n            },\n            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n        ] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, \u0275Console, [new Optional(), HAMMER_LOADER]],\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ],\n                }]\n        }] });\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(() => DomSanitizerImpl) }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                return \u0275_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                throw new \u0275RuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                return \u0275_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                throw new \u0275RuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `unsafe value used in a resource URL context (see ${\u0275XSS_SECURITY_URL})`);\n            default:\n                throw new \u0275RuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unexpected SecurityContext ${ctx} (see ${\u0275XSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return \u0275bypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return \u0275bypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return \u0275bypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return \u0275bypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return \u0275bypassSanitizationTrustResourceUrl(value);\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.4\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind;\n(function (HydrationFeatureKind) {\n    HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n    HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n    HydrationFeatureKind[HydrationFeatureKind[\"I18nSupport\"] = 2] = \"I18nSupport\";\n    HydrationFeatureKind[HydrationFeatureKind[\"EventReplay\"] = 3] = \"EventReplay\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(\u0275kind, \u0275providers = [], \u0275options = {}) {\n    return { \u0275kind, \u0275providers };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n    // This feature has no providers and acts as a flag that turns off\n    // HTTP transfer cache (which otherwise is turned on by default).\n    return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n    // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n    return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, \u0275withHttpTransferCache(options));\n}\n/**\n * Enables support for hydrating i18n blocks.\n *\n * @developerPreview\n * @publicApi\n */\nfunction withI18nSupport() {\n    return hydrationFeature(HydrationFeatureKind.I18nSupport, \u0275withI18nSupport());\n}\n/**\n * Enables support for replaying user events (e.g. `click`s) that happened on a page\n * before hydration logic has completed. Once an application is hydrated, all captured\n * events are replayed and relevant event listeners are executed.\n *\n * @usageNotes\n *\n * Basic example of how you can enable event replay in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withEventReplay())]\n * });\n * ```\n * @developerPreview\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withEventReplay() {\n    return hydrationFeature(HydrationFeatureKind.EventReplay, \u0275withEventReplay());\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n    return [\n        {\n            provide: ENVIRONMENT_INITIALIZER,\n            useValue: () => {\n                const ngZone = inject(NgZone);\n                // Checking `ngZone instanceof NgZone` would be insufficient here,\n                // because custom implementations might use NgZone as a base class.\n                if (ngZone.constructor !== NgZone) {\n                    const console = inject(\u0275Console);\n                    const message = \u0275formatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n                        'that uses a custom or a noop Zone.js implementation. ' +\n                        'This is not yet a fully supported configuration.');\n                    // tslint:disable-next-line:no-console\n                    console.warn(message);\n                }\n            },\n            multi: true,\n        },\n    ];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or enable new ones:\n *\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n * * {@link withI18nSupport} to enable hydration support for i18n blocks\n * * {@link withEventReplay} to enable support for replaying user events\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n * @see {@link withI18nSupport}\n * @see {@link withEventReplay}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n    const providers = [];\n    const featuresKind = new Set();\n    const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n    for (const { \u0275providers, \u0275kind } of features) {\n        featuresKind.add(\u0275kind);\n        if (\u0275providers.length) {\n            providers.push(\u0275providers);\n        }\n    }\n    if (typeof ngDevMode !== 'undefined' &&\n        ngDevMode &&\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) &&\n        hasHttpTransferCacheOptions) {\n        // TODO: Make this a runtime error\n        throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n    }\n    return makeEnvironmentProviders([\n        typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [],\n        \u0275withDomHydration(),\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions\n            ? []\n            : \u0275withHttpTransferCache({}),\n        providers,\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('18.2.4');\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withEventReplay, withHttpTransferCacheOptions, withI18nSupport, withNoHttpTransferCache, BrowserDomAdapter as \u0275BrowserDomAdapter, BrowserGetTestability as \u0275BrowserGetTestability, DomEventsPlugin as \u0275DomEventsPlugin, DomRendererFactory2 as \u0275DomRendererFactory2, DomSanitizerImpl as \u0275DomSanitizerImpl, HammerGesturesPlugin as \u0275HammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as \u0275INTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as \u0275KeyEventsPlugin, SharedStylesHost as \u0275SharedStylesHost, initDomAdapter as \u0275initDomAdapter };\n//# sourceMappingURL=platform-browser.mjs.map\n"],
  "mappings": "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",
  "names": ["import_common", "plugin", "styleEl", "elem", "console", "HydrationFeatureKind"]
}
