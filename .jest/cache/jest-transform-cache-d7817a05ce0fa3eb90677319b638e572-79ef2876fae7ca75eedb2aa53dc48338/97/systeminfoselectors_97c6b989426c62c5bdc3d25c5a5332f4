dcc34a9fbe4287ce1f22bcb605220831
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.waitForSystemInfo = exports.selectBuildYear = exports.selectIsEnterprise = exports.selectProductType = exports.selectHasEnclosureSupport = exports.selectIsIxHardware = exports.selectSystemInfo = exports.selectSystemInfoState = exports.systemInfoStateKey = void 0;
const store_1 = require("@ngrx/store");
const product_type_enum_1 = require("app/enums/product-type.enum");
const select_not_null_helper_1 = require("app/helpers/operators/select-not-null.helper");
exports.systemInfoStateKey = 'systemInfo';
exports.selectSystemInfoState = (0, store_1.createFeatureSelector)(exports.systemInfoStateKey);
exports.selectSystemInfo = (0, store_1.createSelector)(exports.selectSystemInfoState, (state) => state.systemInfo);
exports.selectIsIxHardware = (0, store_1.createSelector)(exports.selectSystemInfoState, (state) => state.isIxHardware);
/**
 * At the moment it's an alias, but let's keep it separate to make it more explicit.
 */
exports.selectHasEnclosureSupport = exports.selectIsIxHardware;
exports.selectProductType = (0, store_1.createSelector)(exports.selectSystemInfoState, (state) => state.productType);
exports.selectIsEnterprise = (0, store_1.createSelector)(exports.selectProductType, (productType) => productType === product_type_enum_1.ProductType.ScaleEnterprise);
exports.selectBuildYear = (0, store_1.createSelector)(exports.selectSystemInfoState, (state) => state.buildYear);
exports.waitForSystemInfo = (0, select_not_null_helper_1.selectNotNull)(exports.selectSystemInfo);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3N0b3JlL3N5c3RlbS1pbmZvL3N5c3RlbS1pbmZvLnNlbGVjdG9ycy50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSx1Q0FBb0U7QUFDcEUsbUVBQTBEO0FBQzFELHlGQUE2RTtBQUdoRSxRQUFBLGtCQUFrQixHQUFHLFlBQVksQ0FBQztBQUVsQyxRQUFBLHFCQUFxQixHQUFHLElBQUEsNkJBQXFCLEVBQWtCLDBCQUFrQixDQUFDLENBQUM7QUFFbkYsUUFBQSxnQkFBZ0IsR0FBRyxJQUFBLHNCQUFjLEVBQzVDLDZCQUFxQixFQUNyQixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FDNUIsQ0FBQztBQUVXLFFBQUEsa0JBQWtCLEdBQUcsSUFBQSxzQkFBYyxFQUM5Qyw2QkFBcUIsRUFDckIsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQzlCLENBQUM7QUFFRjs7R0FFRztBQUNVLFFBQUEseUJBQXlCLEdBQUcsMEJBQWtCLENBQUM7QUFFL0MsUUFBQSxpQkFBaUIsR0FBRyxJQUFBLHNCQUFjLEVBQzdDLDZCQUFxQixFQUNyQixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FDN0IsQ0FBQztBQUVXLFFBQUEsa0JBQWtCLEdBQUcsSUFBQSxzQkFBYyxFQUM5Qyx5QkFBaUIsRUFDakIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsS0FBSywrQkFBVyxDQUFDLGVBQWUsQ0FDN0QsQ0FBQztBQUVXLFFBQUEsZUFBZSxHQUFHLElBQUEsc0JBQWMsRUFDM0MsNkJBQXFCLEVBQ3JCLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUMzQixDQUFDO0FBRVcsUUFBQSxpQkFBaUIsR0FBRyxJQUFBLHNDQUFhLEVBQUMsd0JBQWdCLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvc3RvcmUvc3lzdGVtLWluZm8vc3lzdGVtLWluZm8uc2VsZWN0b3JzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUZlYXR1cmVTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBQcm9kdWN0VHlwZSB9IGZyb20gJ2FwcC9lbnVtcy9wcm9kdWN0LXR5cGUuZW51bSc7XG5pbXBvcnQgeyBzZWxlY3ROb3ROdWxsIH0gZnJvbSAnYXBwL2hlbHBlcnMvb3BlcmF0b3JzL3NlbGVjdC1ub3QtbnVsbC5oZWxwZXInO1xuaW1wb3J0IHsgU3lzdGVtSW5mb1N0YXRlIH0gZnJvbSAnYXBwL3N0b3JlL3N5c3RlbS1pbmZvL3N5c3RlbS1pbmZvLnJlZHVjZXInO1xuXG5leHBvcnQgY29uc3Qgc3lzdGVtSW5mb1N0YXRlS2V5ID0gJ3N5c3RlbUluZm8nO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0U3lzdGVtSW5mb1N0YXRlID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPFN5c3RlbUluZm9TdGF0ZT4oc3lzdGVtSW5mb1N0YXRlS2V5KTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdFN5c3RlbUluZm8gPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0U3lzdGVtSW5mb1N0YXRlLFxuICAoc3RhdGUpID0+IHN0YXRlLnN5c3RlbUluZm8sXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0SXNJeEhhcmR3YXJlID0gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFN5c3RlbUluZm9TdGF0ZSxcbiAgKHN0YXRlKSA9PiBzdGF0ZS5pc0l4SGFyZHdhcmUsXG4pO1xuXG4vKipcbiAqIEF0IHRoZSBtb21lbnQgaXQncyBhbiBhbGlhcywgYnV0IGxldCdzIGtlZXAgaXQgc2VwYXJhdGUgdG8gbWFrZSBpdCBtb3JlIGV4cGxpY2l0LlxuICovXG5leHBvcnQgY29uc3Qgc2VsZWN0SGFzRW5jbG9zdXJlU3VwcG9ydCA9IHNlbGVjdElzSXhIYXJkd2FyZTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdFByb2R1Y3RUeXBlID0gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFN5c3RlbUluZm9TdGF0ZSxcbiAgKHN0YXRlKSA9PiBzdGF0ZS5wcm9kdWN0VHlwZSxcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RJc0VudGVycHJpc2UgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0UHJvZHVjdFR5cGUsXG4gIChwcm9kdWN0VHlwZSkgPT4gcHJvZHVjdFR5cGUgPT09IFByb2R1Y3RUeXBlLlNjYWxlRW50ZXJwcmlzZSxcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RCdWlsZFllYXIgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0U3lzdGVtSW5mb1N0YXRlLFxuICAoc3RhdGUpID0+IHN0YXRlLmJ1aWxkWWVhcixcbik7XG5cbmV4cG9ydCBjb25zdCB3YWl0Rm9yU3lzdGVtSW5mbyA9IHNlbGVjdE5vdE51bGwoc2VsZWN0U3lzdGVtSW5mbyk7XG4iXSwidmVyc2lvbiI6M30=