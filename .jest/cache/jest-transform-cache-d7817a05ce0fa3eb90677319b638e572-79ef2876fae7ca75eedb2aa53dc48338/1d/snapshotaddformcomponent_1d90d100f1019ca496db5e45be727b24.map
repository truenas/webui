{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/modules/snapshots/snapshot-add-form/snapshot-add-form.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/modules/snapshots/snapshot-add-form/snapshot-add-form.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit,\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport { format } from 'date-fns-tz';\nimport {\n  combineLatest, merge, Observable, of,\n} from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Role } from 'app/enums/role.enum';\nimport { singleArrayToOptions } from 'app/helpers/operators/options.operators';\nimport { helptextSnapshots } from 'app/helptext/storage/snapshots/snapshots';\nimport { Dataset } from 'app/interfaces/dataset.interface';\nimport { Option } from 'app/interfaces/option.interface';\nimport { QueryFilters } from 'app/interfaces/query-api.interface';\nimport { CreateZfsSnapshot } from 'app/interfaces/zfs-snapshot.interface';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { FormErrorHandlerService } from 'app/modules/forms/ix-forms/services/form-error-handler.service';\nimport { IxValidatorsService } from 'app/modules/forms/ix-forms/services/ix-validators.service';\nimport { atLeastOne } from 'app/modules/forms/ix-forms/validators/at-least-one-validation';\nimport { requiredEmpty } from 'app/modules/forms/ix-forms/validators/required-empty-validation';\nimport {\n  snapshotExcludeBootQueryFilter,\n} from 'app/pages/datasets/modules/snapshots/constants/snapshot-exclude-boot.constant';\nimport { DatasetTreeStore } from 'app/pages/datasets/store/dataset-store.service';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-snapshot-add-form',\n  templateUrl: './snapshot-add-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SnapshotAddFormComponent implements OnInit {\n  readonly requiredRoles = [Role.SnapshotWrite];\n\n  isFormLoading = true;\n  form = this.fb.group({\n    dataset: ['', Validators.required],\n    name: [this.getDefaultSnapshotName(), [this.validatorsService.withMessage(\n      atLeastOne('naming_schema', [helptextSnapshots.snapshot_add_name_placeholder, helptextSnapshots.snapshot_add_naming_schema_placeholder]),\n      this.translate.instant('Name or Naming Schema must be provided.'),\n    ), this.validatorsService.validateOnCondition(\n      (control: AbstractControl) => control.value && control.parent?.get('naming_schema').value,\n      this.validatorsService.withMessage(\n        requiredEmpty(),\n        this.translate.instant('Name and Naming Schema cannot be provided at the same time.'),\n      ),\n    )]],\n    naming_schema: [''],\n    recursive: [false],\n    vmware_sync: [false],\n  });\n\n  datasetOptions$: Observable<Option[]>;\n  namingSchemaOptions$: Observable<Option[]>;\n  hasVmsInDataset = false;\n\n  readonly helptext = helptextSnapshots;\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private ws: WebSocketService,\n    private translate: TranslateService,\n    private authService: AuthService,\n    private errorHandler: FormErrorHandlerService,\n    private validatorsService: IxValidatorsService,\n    private datasetStore: DatasetTreeStore,\n    private slideInRef: IxSlideInRef<SnapshotAddFormComponent>,\n    @Inject(SLIDE_IN_DATA) private datasetId: string,\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.getDatasetOptions(),\n      this.getNamingSchemaOptions(),\n    ]).pipe(\n      untilDestroyed(this),\n    ).subscribe({\n      next: ([datasetOptions, namingSchemaOptions]) => {\n        this.datasetOptions$ = of(datasetOptions);\n        this.namingSchemaOptions$ = of(namingSchemaOptions);\n        this.isFormLoading = false;\n        this.form.controls.name.markAsTouched();\n        this.checkForVmsInDataset();\n        this.cdr.markForCheck();\n      },\n      error: (error: unknown) => {\n        this.errorHandler.handleWsFormError(error, this.form);\n        this.isFormLoading = false;\n        this.cdr.markForCheck();\n      },\n    });\n\n    merge(\n      this.form.controls.recursive.valueChanges,\n      this.form.controls.dataset.valueChanges,\n    ).pipe(untilDestroyed(this)).subscribe(() => this.checkForVmsInDataset());\n\n    if (this.datasetId) {\n      this.setDataset();\n    }\n  }\n\n  setDataset(): void {\n    this.form.controls.dataset.setValue(this.datasetId);\n  }\n\n  onSubmit(): void {\n    const values = this.form.value;\n    const params: CreateZfsSnapshot = {\n      dataset: values.dataset,\n      recursive: values.recursive,\n    };\n    if (values.naming_schema) {\n      params.naming_schema = values.naming_schema;\n    } else {\n      params.name = values.name;\n    }\n\n    if (this.hasVmsInDataset) {\n      params.vmware_sync = values.vmware_sync;\n    }\n\n    this.isFormLoading = true;\n    this.ws.call('zfs.snapshot.create', [params]).pipe(\n      untilDestroyed(this),\n    ).subscribe({\n      next: () => {\n        this.isFormLoading = false;\n        this.slideInRef.close(true);\n        this.datasetStore.datasetUpdated();\n        this.cdr.markForCheck();\n      },\n      error: (error: unknown) => {\n        this.isFormLoading = false;\n        this.errorHandler.handleWsFormError(error, this.form);\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  private getDefaultSnapshotName(): string {\n    const datetime = format(new Date(), 'yyyy-MM-dd_HH-mm');\n    return `manual-${datetime}`;\n  }\n\n  private getDatasetOptions(): Observable<Option[]> {\n    return this.ws.call('pool.dataset.query', [\n      snapshotExcludeBootQueryFilter as QueryFilters<Dataset>,\n      { extra: { flat: true } },\n    ]).pipe(\n      map((datasets) => datasets.map((dataset) => ({ label: dataset.name, value: dataset.name }))),\n    );\n  }\n\n  private getNamingSchemaOptions(): Observable<Option[]> {\n    return this.authService.hasRole([Role.ReplicationTaskWrite, Role.ReplicationTaskWritePull]).pipe(\n      switchMap((hasAccess) => {\n        if (!hasAccess) {\n          return of([]);\n        }\n\n        return this.ws.call('replication.list_naming_schemas').pipe(\n          singleArrayToOptions(),\n        );\n      }),\n    );\n  }\n\n  private checkForVmsInDataset(): void {\n    this.isFormLoading = true;\n    this.ws.call('vmware.dataset_has_vms', [this.form.controls.dataset.value, this.form.controls.recursive.value])\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (hasVmsInDataset) => {\n          this.hasVmsInDataset = hasVmsInDataset;\n          this.isFormLoading = false;\n          this.cdr.markForCheck();\n        },\n        error: (error: unknown) => {\n          this.errorHandler.handleWsFormError(error, this.form);\n          this.isFormLoading = false;\n          this.cdr.markForCheck();\n        },\n      });\n  }\n}\n"],"version":3}