{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/toArray.js","mappings":";;;;;AAAA,8DAAkC;AAClC,oEAAwC;AACxC,8DAAkC;AAClC,sEAA2C;AAC3C,gEAAqC;AACrC,gFAAoD;AACpD,sEAA0C;AAC1C,sEAA0C;AAC1C,4EAAgD;AAChD,4DAAiC;AAEjC,2CAA2C;AAC3C,IAAI,MAAM,GAAG,cAAc,EACvB,MAAM,GAAG,cAAc,CAAC;AAE5B,iCAAiC;AACjC,IAAI,WAAW,GAAG,oBAAM,CAAC,CAAC,CAAC,oBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;AAEvD;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,SAAS,OAAO,CAAC,KAAK;IACpB,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,IAAI,IAAA,wBAAW,EAAC,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,IAAA,qBAAQ,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAA,2BAAa,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAA,uBAAS,EAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IACD,IAAI,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC;QACtC,OAAO,IAAA,6BAAe,EAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IACD,IAAI,GAAG,GAAG,IAAA,oBAAM,EAAC,KAAK,CAAC,EACnB,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,wBAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,wBAAU,CAAC,CAAC,CAAC,mBAAM,CAAC,CAAC;IAE9E,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,CAAC;AAED,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/toArray.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport copyArray from './_copyArray.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport iteratorToArray from './_iteratorToArray.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\nimport stringToArray from './_stringToArray.js';\nimport values from './values.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nexport default toArray;\n"],"version":3}