{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/attempt.js","mappings":";;;;;AAAA,4DAAgC;AAChC,kEAAsC;AACtC,8DAAmC;AAEnC;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,IAAI,OAAO,GAAG,IAAA,sBAAQ,EAAC,UAAS,IAAI,EAAE,IAAI;IACxC,IAAI,CAAC;QACH,OAAO,IAAA,mBAAK,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,OAAO,IAAA,oBAAO,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/attempt.js"],"sourcesContent":["import apply from './_apply.js';\nimport baseRest from './_baseRest.js';\nimport isError from './isError.js';\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nexport default attempt;\n"],"version":3}