d91cb5a375e4503c1c1c82a36f34e6a2
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxComboboxProviderManager = void 0;
const rxjs_1 = require("rxjs");
class IxComboboxProviderManager {
    constructor(provider) {
        this.provider = provider;
    }
    fetch(filterValue) {
        return this.provider.fetch(filterValue).pipe((0, rxjs_1.map)((result) => {
            if (this.provider.mapOptions) {
                return this.provider.mapOptions(result);
            }
            return result;
        }));
    }
    nextPage(filterValue) {
        return this.provider.nextPage(filterValue).pipe((0, rxjs_1.map)((result) => {
            if (this.provider.mapOptions) {
                return this.provider.mapOptions(result);
            }
            return result;
        }));
    }
}
exports.IxComboboxProviderManager = IxComboboxProviderManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZm9ybXMvaXgtZm9ybXMvY29tcG9uZW50cy9peC1jb21ib2JveC9peC1jb21ib2JveC1wcm92aWRlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwrQkFBdUM7QUEyQnZDLE1BQWEseUJBQXlCO0lBQ3BDLFlBQW9CLFFBQTRCO1FBQTVCLGFBQVEsR0FBUixRQUFRLENBQW9CO0lBQUksQ0FBQztJQUNyRCxLQUFLLENBQUMsV0FBbUI7UUFDdkIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQzFDLElBQUEsVUFBRyxFQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDYixJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUM7Z0JBQzdCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDMUMsQ0FBQztZQUNELE9BQU8sTUFBTSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsUUFBUSxDQUFDLFdBQW1CO1FBQzFCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUM3QyxJQUFBLFVBQUcsRUFBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ2IsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO2dCQUM3QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzFDLENBQUM7WUFDRCxPQUFPLE1BQU0sQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBdkJELDhEQXVCQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvbW9kdWxlcy9mb3Jtcy9peC1mb3Jtcy9jb21wb25lbnRzL2l4LWNvbWJvYm94L2l4LWNvbWJvYm94LXByb3ZpZGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIG1hcCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgT3B0aW9uIH0gZnJvbSAnYXBwL2ludGVyZmFjZXMvb3B0aW9uLmludGVyZmFjZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSXhDb21ib2JveFByb3ZpZGVyIHtcbiAgLyoqXG4gICAqIEZpbHRlciB0aGUgb3B0aW9ucyBiYXNlZCBvbiBxdWVyeSBzdHJpbmcuIFNob3VsZCBoYW5kbGUgPGVtcHR5IHN0cmluZz4gYW5kIHJldHVybiBub3JtYWxcbiAgICogbGlzdCBvZiBvcHRpb25zIGluIHRoYXQgY2FzZS5cbiAgICogQHBhcmFtIHZhbHVlIFRoZSBxdWVyeSBzdHJpbmdcbiAgICogQHJldHVybnMgQW4gb2JzZXJ2YWJsZSBvZiBvcHRpb25zIHRoYXQgd2lsbCByZXBsYWNlIHRoZSBjdXJyZW50IGxpc3RcbiAgICovXG4gIGZldGNoKGZpbHRlclZhbHVlOiBzdHJpbmcpOiBPYnNlcnZhYmxlPE9wdGlvbltdPjtcblxuICAvKipcbiAgICAqIFRha2VzIHRoZSBmaWx0ZXJWYWx1ZSAod2hpY2ggY2FuIGJlIGVtcHR5KSBhbmQgZmV0Y2hlcyB0aGUgbmV4dCBwYWdlIG9mIG9wdGlvbnNcbiAgICAqIHRvIGJlIHNob3duLiBMZWF2ZXMgaXQgdXAgdG8gdGhlIHVzZXIgdG8gbWFuYWdlIHBhZ2luYXRpb24gY29udGV4dCBsaWtlXG4gICAgKiAodG90YWwgaXRlbXMsIGl0ZW1zIHBlciBwYWdlLCBudW1iZXIgb2YgcGFnZXMgZXRjKVxuICAgICogQHJldHVybnMgU2hvdWxkIHJldHVybiBhIGxpc3Qgb2Ygb3B0aW9uIHRvIGJlIGNvbmNhdGVuYXRlZCB0byB0aGUgY3VycmVudCBsaXN0XG4gICAgKi9cbiAgbmV4dFBhZ2UoZmlsdGVyVmFsdWU6IHN0cmluZyk6IE9ic2VydmFibGU8T3B0aW9uW10+O1xuXG4gIC8qKlxuICAgKiBVc2VkIHRvIG1hcCB0aGUgZmV0Y2ggcmVzdWx0IHRvIGEgbmV3IGFycmF5IG9mIG9wdGlvbnMgZm9yIGFueSBuZWVkZWQgY2hhbmdlcyBiZWZvcmVcbiAgICogdGhlIG9wdGlvbnMgYXJyYXkgaXMgY29uc3VtZWQgYnkgSXhDb21ib2JveENvbXBvbmVudFxuICAgKi9cbiAgbWFwT3B0aW9ucz8ob3B0aW9uczogT3B0aW9uW10pOiBPcHRpb25bXTtcbn1cblxuZXhwb3J0IGNsYXNzIEl4Q29tYm9ib3hQcm92aWRlck1hbmFnZXIge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb3ZpZGVyOiBJeENvbWJvYm94UHJvdmlkZXIpIHsgfVxuICBmZXRjaChmaWx0ZXJWYWx1ZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxPcHRpb25bXT4ge1xuICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLmZldGNoKGZpbHRlclZhbHVlKS5waXBlKFxuICAgICAgbWFwKChyZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKHRoaXMucHJvdmlkZXIubWFwT3B0aW9ucykge1xuICAgICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLm1hcE9wdGlvbnMocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSksXG4gICAgKTtcbiAgfVxuXG4gIG5leHRQYWdlKGZpbHRlclZhbHVlOiBzdHJpbmcpOiBPYnNlcnZhYmxlPE9wdGlvbltdPiB7XG4gICAgcmV0dXJuIHRoaXMucHJvdmlkZXIubmV4dFBhZ2UoZmlsdGVyVmFsdWUpLnBpcGUoXG4gICAgICBtYXAoKHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5wcm92aWRlci5tYXBPcHRpb25zKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucHJvdmlkZXIubWFwT3B0aW9ucyhyZXN1bHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9KSxcbiAgICApO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=