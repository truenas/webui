{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-slide-in/components/ix-modal-header2/ix-modal-header2.component.ts","mappings":";;;;;;;;;AAAA,4CAA4C;AAC5C,wCAGuB;AACvB,qDAAyD;AACzD,iEAAgE;AAChE,uDAAuD;AACvD,yDAAqE;AACrE,8CAAwE;AAGxE,mHAAqG;AACrG,4HAAkH;AAClH,6EAAwE;AACxE,uEAAmE;AACnE,iEAA6D;AAC7D,0FAAmF;AAoB5E,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAQlC,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtD,CAAC;IAID,YACU,SAA2B,EAC3B,cAAuC,EACvC,iBAAsC,EACtC,WAAwB;QAHxB,cAAS,GAAT,SAAS,CAAkB;QAC3B,mBAAc,GAAd,cAAc,CAAyB;QACvC,sBAAiB,GAAjB,iBAAiB,CAAqB;QACtC,gBAAW,GAAX,WAAW,CAAa;QAfzB,iBAAY,GAAG,KAAK;QACpB,kBAAa,GAAW,EAAE;QAEzB,mBAAc,GAAG,IAAA,aAAM,EAAC,CAAC,CAAC,CAAC;QAMrC,YAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAOhD,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAClC,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACxE,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IACjE,CAAC;;AApCU,0DAAuB;;;;;;;;oBACjC,YAAK;sBACL,YAAK;2BACL,YAAK;4BACL,YAAK;;kCAJK,uBAAuB;IAlBnC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,sDAAgD;QAEhD,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,sBAAa;YACb,oBAAU;YACV,mCAAe;YACf,4CAAiB;YACjB,6BAAc;YACd,kBAAS;YACT,sBAAe;YACf,8BAAa;SACd;KACF,CAAC;GACW,uBAAuB,CAqCnC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-slide-in/components/ix-modal-header2/ix-modal-header2.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, Input,\n  signal,\n} from '@angular/core';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Role } from 'app/enums/role.enum';\nimport { ChainedRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/chained-component-ref';\nimport { ReadOnlyComponent } from 'app/modules/forms/ix-forms/components/readonly-badge/readonly-badge.component';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { IxChainedSlideInService } from 'app/services/ix-chained-slide-in.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-modal-header2',\n  templateUrl: './ix-modal-header2.component.html',\n  styleUrls: ['./ix-modal-header2.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatIconButton,\n    MatTooltip,\n    IxIconComponent,\n    ReadOnlyComponent,\n    MatProgressBar,\n    AsyncPipe,\n    TranslateModule,\n    TestDirective,\n  ],\n})\nexport class IxModalHeader2Component implements AfterViewInit {\n  @Input() title: string;\n  @Input() loading: boolean;\n  @Input() disableClose = false;\n  @Input() requiredRoles: Role[] = [];\n\n  protected componentsSize = signal(1);\n\n  get hasRequiredRoles(): Observable<boolean> {\n    return this.authService.hasRole(this.requiredRoles);\n  }\n\n  tooltip = this.translate.instant('Close the form');\n\n  constructor(\n    private translate: TranslateService,\n    private chainedSlideIn: IxChainedSlideInService,\n    private chainedSlideInRef: ChainedRef<unknown>,\n    private authService: AuthService,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.chainedSlideIn.components$.pipe(\n      untilDestroyed(this),\n    ).subscribe((components) => {\n      this.componentsSize.set(components.length);\n      if (components.length > 1) {\n        this.tooltip = this.translate.instant('Go back to the previous form');\n      } else {\n        this.tooltip = this.translate.instant('Close the form');\n      }\n    });\n  }\n\n  close(): void {\n    this.chainedSlideInRef.close({ response: false, error: null });\n  }\n}\n"],"version":3}