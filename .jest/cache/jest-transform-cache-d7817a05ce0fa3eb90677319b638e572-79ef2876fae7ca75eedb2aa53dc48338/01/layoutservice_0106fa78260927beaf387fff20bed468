da443c21f59546315a1cbf9822abb0ac
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LayoutService = void 0;
const core_1 = require("@angular/core");
const until_destroy_1 = require("@ngneat/until-destroy");
const rxjs_1 = require("rxjs");
const window_helper_1 = require("app/helpers/window.helper");
let LayoutService = class LayoutService {
    constructor(window) {
        this.window = window;
        this.hasCustomPageHeader$ = new rxjs_1.BehaviorSubject(false);
    }
    getContentContainer() {
        return this.window.document.querySelector('.rightside-content-hold');
    }
};
exports.LayoutService = LayoutService;
LayoutService.ctorParameters = () => [
    { type: Window, decorators: [{ type: core_1.Inject, args: [window_helper_1.WINDOW,] }] }
];
exports.LayoutService = LayoutService = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Injectable)({
        providedIn: 'root',
    })
], LayoutService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3NlcnZpY2VzL2xheW91dC5zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQUV1QjtBQUN2Qix5REFBcUQ7QUFDckQsK0JBQXVDO0FBQ3ZDLDZEQUFtRDtBQU01QyxJQUFNLGFBQWEsR0FBbkIsTUFBTSxhQUFhO0lBR3hCLFlBQzBCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBSC9CLHlCQUFvQixHQUFHLElBQUksc0JBQWUsQ0FBVSxLQUFLLENBQUMsQ0FBQztJQUlqRSxDQUFDO0lBRUosbUJBQW1CO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDdkUsQ0FBQzs7QUFUVSxzQ0FBYTs7eUNBSXJCLGFBQU0sU0FBQyxzQkFBTTs7d0JBSkwsYUFBYTtJQUp6QixJQUFBLDRCQUFZLEdBQUU7SUFDZCxJQUFBLGlCQUFVLEVBQUM7UUFDVixVQUFVLEVBQUUsTUFBTTtLQUNuQixDQUFDO0dBQ1csYUFBYSxDQVV6QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvc2VydmljZXMvbGF5b3V0LnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgSW5qZWN0LCBJbmplY3RhYmxlLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVudGlsRGVzdHJveSB9IGZyb20gJ0BuZ25lYXQvdW50aWwtZGVzdHJveSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJ2FwcC9oZWxwZXJzL3dpbmRvdy5oZWxwZXInO1xuXG5AVW50aWxEZXN0cm95KClcbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBMYXlvdXRTZXJ2aWNlIHtcbiAgcmVhZG9ubHkgaGFzQ3VzdG9tUGFnZUhlYWRlciQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGJvb2xlYW4+KGZhbHNlKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KFdJTkRPVykgcHJpdmF0ZSB3aW5kb3c6IFdpbmRvdyxcbiAgKSB7fVxuXG4gIGdldENvbnRlbnRDb250YWluZXIoKTogSFRNTEVsZW1lbnQge1xuICAgIHJldHVybiB0aGlzLndpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmlnaHRzaWRlLWNvbnRlbnQtaG9sZCcpO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=