{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/components/installed-apps/app-upgrade-dialog/app-upgrade-dialog.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/components/installed-apps/app-upgrade-dialog/app-upgrade-dialog.component.ts"],"sourcesContent":["import { KeyValue } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component, Inject,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { appImagePlaceholder } from 'app/constants/catalog.constants';\nimport { Role } from 'app/enums/role.enum';\nimport { helptextApps } from 'app/helptext/apps/apps';\nimport { AppUpgradeDialogConfig } from 'app/interfaces/app-upgrade-dialog-config.interface';\nimport { ChartContainerImage } from 'app/interfaces/app.interface';\nimport { AppUpgradeSummary } from 'app/interfaces/application.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { AppLoaderService } from 'app/modules/loader/app-loader.service';\nimport { ApplicationsService } from 'app/pages/apps/services/applications.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\n\ntype Version = Omit<AppUpgradeSummary, 'upgrade_version' | 'image_update_available' | 'upgrade_human_version'> & { fetched?: boolean };\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-app-upgrade-dialog',\n  styleUrls: ['./app-upgrade-dialog.component.scss'],\n  templateUrl: './app-upgrade-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppUpgradeDialogComponent {\n  dialogConfig: AppUpgradeDialogConfig;\n  imagePlaceholder = appImagePlaceholder;\n  helptext = helptextApps;\n  versionOptions = new Map<string, Version>();\n  selectedVersionKey: string;\n  selectedVersion: Version;\n\n  protected readonly requiredRoles = [Role.AppsWrite];\n\n  constructor(\n    public dialogRef: MatDialogRef<AppUpgradeDialogComponent>,\n    private loader: AppLoaderService,\n    private errorHandler: ErrorHandlerService,\n    private appService: ApplicationsService,\n    public dialogService: DialogService,\n    @Inject(MAT_DIALOG_DATA) public data: AppUpgradeDialogConfig,\n  ) {\n    this.dialogConfig = data;\n\n    this.versionOptions.set(this.dialogConfig.upgradeSummary.latest_version, {\n      ...this.dialogConfig.upgradeSummary,\n      fetched: true,\n    });\n\n    if (this.dialogConfig.upgradeSummary.available_versions_for_upgrade) {\n      this.dialogConfig.upgradeSummary.available_versions_for_upgrade.forEach((availableVersion) => {\n        if (!this.versionOptions.has(availableVersion.version)) {\n          this.versionOptions.set(availableVersion.version, {\n            latest_version: availableVersion.version,\n            latest_human_version: availableVersion.human_version,\n            changelog: null,\n            available_versions_for_upgrade: null,\n          });\n        }\n      });\n    }\n\n    this.selectedVersionKey = Array.from(this.versionOptions.keys())[0];\n    this.selectedVersion = this.versionOptions.get(this.selectedVersionKey);\n  }\n\n  onVersionOptionChanged(): void {\n    this.selectedVersion = this.versionOptions.get(this.selectedVersionKey);\n    if (!this.selectedVersion.fetched) {\n      this.appService.getAppUpgradeSummary(\n        this.dialogConfig.appInfo.name,\n        this.selectedVersionKey,\n      )\n        .pipe(\n          this.loader.withLoader(),\n          this.errorHandler.catchError(),\n          untilDestroyed(this),\n        ).subscribe((summary: AppUpgradeSummary) => {\n          this.selectedVersion.changelog = summary.changelog;\n          this.selectedVersion.fetched = true;\n        });\n    }\n  }\n\n  originalOrder(): number {\n    return 0;\n  }\n\n  containerImagesOrder(a: KeyValue<string, ChartContainerImage>, b: KeyValue<string, ChartContainerImage>): number {\n    return a.value.id.localeCompare(b.value.id);\n  }\n}\n"],"version":3}