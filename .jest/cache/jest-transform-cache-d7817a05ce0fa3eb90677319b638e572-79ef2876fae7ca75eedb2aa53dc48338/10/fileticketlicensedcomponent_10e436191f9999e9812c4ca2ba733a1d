a1539f15f6ee3910edeebbc122cde375
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileTicketLicensedComponent = void 0;
const scrolling_1 = require("@angular/cdk/scrolling");
const core_1 = require("@angular/core");
const forms_1 = require("@angular/forms");
const button_1 = require("@angular/material/button");
const dialog_1 = require("@angular/material/dialog");
const router_1 = require("@angular/router");
const until_destroy_1 = require("@ngneat/until-destroy");
const core_2 = require("@ngx-translate/core");
const EmailValidator = __importStar(require("email-validator"));
const rxjs_1 = require("rxjs");
const bytes_constant_1 = require("app/constants/bytes.constant");
const file_ticket_enum_1 = require("app/enums/file-ticket.enum");
const options_helper_1 = require("app/helpers/options.helper");
const window_helper_1 = require("app/helpers/window.helper");
const support_1 = require("app/helptext/system/support");
const feedback_service_1 = require("app/modules/feedback/services/feedback.service");
const form_actions_component_1 = require("app/modules/forms/ix-forms/components/form-actions/form-actions.component");
const ix_checkbox_component_1 = require("app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component");
const ix_chips_component_1 = require("app/modules/forms/ix-forms/components/ix-chips/ix-chips.component");
const ix_file_input_component_1 = require("app/modules/forms/ix-forms/components/ix-file-input/ix-file-input.component");
const ix_input_component_1 = require("app/modules/forms/ix-forms/components/ix-input/ix-input.component");
const ix_select_component_1 = require("app/modules/forms/ix-forms/components/ix-select/ix-select.component");
const ix_textarea_component_1 = require("app/modules/forms/ix-forms/components/ix-textarea/ix-textarea.component");
const form_error_handler_service_1 = require("app/modules/forms/ix-forms/services/form-error-handler.service");
const ix_validators_service_1 = require("app/modules/forms/ix-forms/services/ix-validators.service");
const email_validation_1 = require("app/modules/forms/ix-forms/validators/email-validation/email-validation");
const image_validator_service_1 = require("app/modules/forms/ix-forms/validators/image-validator/image-validator.service");
const test_directive_1 = require("app/modules/test-id/test.directive");
const ws_service_1 = require("app/services/ws.service");
const i0 = __importStar(require("@angular/core"));
let FileTicketLicensedComponent = class FileTicketLicensedComponent {
    constructor(formBuilder, translate, validatorsService, feedbackService, router, imageValidator, formErrorHandler, window, ws) {
        this.formBuilder = formBuilder;
        this.translate = translate;
        this.validatorsService = validatorsService;
        this.feedbackService = feedbackService;
        this.router = router;
        this.imageValidator = imageValidator;
        this.formErrorHandler = formErrorHandler;
        this.window = window;
        this.ws = ws;
        this.isLoadingChange = (0, core_1.output)();
        this.form = this.formBuilder.group({
            name: ['', [forms_1.Validators.required]],
            email: ['', [forms_1.Validators.required, (0, email_validation_1.emailValidator)()]],
            cc: [[], [
                    this.validatorsService.customValidator((control) => {
                        var _a;
                        return (_a = control.value) === null || _a === void 0 ? void 0 : _a.every((item) => EmailValidator.validate(item));
                    }, this.translate.instant(support_1.helptextSystemSupport.cc.err)),
                ]],
            phone: ['', [forms_1.Validators.required]],
            category: [file_ticket_enum_1.TicketCategory.Bug, [forms_1.Validators.required]],
            environment: [file_ticket_enum_1.TicketEnvironment.Production, [forms_1.Validators.required]],
            criticality: [file_ticket_enum_1.TicketCriticality.Inquiry, [forms_1.Validators.required]],
            title: ['', [forms_1.Validators.required, forms_1.Validators.maxLength(200)]],
            message: ['', [forms_1.Validators.maxLength(20000)]],
            images: [[], []],
            attach_debug: [true],
            attach_images: [false],
            take_screenshot: [true],
        });
        this.messagePlaceholder = support_1.helptextSystemSupport.bug.message.placeholder;
        this.acceptedFiles = file_ticket_enum_1.ticketAcceptedFiles;
        this.categoryOptions$ = (0, rxjs_1.of)((0, options_helper_1.mapToOptions)(file_ticket_enum_1.ticketCategoryLabels, this.translate));
        this.environmentOptions$ = (0, rxjs_1.of)((0, options_helper_1.mapToOptions)(file_ticket_enum_1.ticketEnvironmentLabels, this.translate));
        this.criticalityOptions$ = (0, rxjs_1.of)((0, options_helper_1.mapToOptions)(file_ticket_enum_1.ticketCriticalityLabels, this.translate));
        this.tooltips = {
            name: support_1.helptextSystemSupport.name.tooltip,
            email: support_1.helptextSystemSupport.email.tooltip,
            cc: support_1.helptextSystemSupport.cc.tooltip,
            phone: support_1.helptextSystemSupport.phone.tooltip,
            category: support_1.helptextSystemSupport.type.tooltip,
            environment: support_1.helptextSystemSupport.environment.tooltip,
            criticality: support_1.helptextSystemSupport.criticality.tooltip,
            title: support_1.helptextSystemSupport.title.tooltip,
            attach_debug: support_1.helptextSystemSupport.attach_debug.tooltip,
        };
        this.getSystemFileSizeLimit();
    }
    onUserGuidePressed() {
        this.window.open('https://www.truenas.com/docs/hub/');
    }
    onEulaPressed() {
        this.router.navigate(['system', 'support', 'eula']).then(() => {
            this.dialogRef.close();
        });
    }
    onSubmit() {
        this.isLoadingChange.emit(true);
        this.feedbackService.createTicketLicensed(this.form.value).pipe((0, rxjs_1.finalize)(() => this.isLoadingChange.emit(false)), (0, until_destroy_1.untilDestroyed)(this)).subscribe({
            next: (createdTicket) => this.onSuccess(createdTicket.url),
            error: (error) => this.formErrorHandler.handleWsFormError(error, this.form),
        });
    }
    onSuccess(ticketUrl) {
        this.feedbackService.showTicketSuccessMsg(ticketUrl);
        this.dialogRef.close();
    }
    getSystemFileSizeLimit() {
        this.ws.call('support.attach_ticket_max_size').pipe((0, until_destroy_1.untilDestroyed)(this)).subscribe((size) => {
            this.form.controls.images.addAsyncValidators(this.imageValidator.getImagesValidator(size * bytes_constant_1.MiB));
            this.form.controls.images.updateValueAndValidity();
        });
    }
};
exports.FileTicketLicensedComponent = FileTicketLicensedComponent;
FileTicketLicensedComponent.ctorParameters = () => [
    { type: forms_1.FormBuilder },
    { type: core_2.TranslateService },
    { type: ix_validators_service_1.IxValidatorsService },
    { type: feedback_service_1.FeedbackService },
    { type: router_1.Router },
    { type: image_validator_service_1.ImageValidatorService },
    { type: form_error_handler_service_1.FormErrorHandlerService },
    { type: Window, decorators: [{ type: core_1.Inject, args: [window_helper_1.WINDOW,] }] },
    { type: ws_service_1.WebSocketService }
];
FileTicketLicensedComponent.propDecorators = {
    dialogRef: [{ type: core_1.Input }],
    isLoading: [{ type: core_1.Input }],
    isLoadingChange: [{ type: i0.Output, args: ["isLoadingChange",] }]
};
exports.FileTicketLicensedComponent = FileTicketLicensedComponent = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Component)({
        selector: 'ix-file-ticket-licensed',
        template: require("./file-ticket-licensed.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            scrolling_1.CdkScrollable,
            dialog_1.MatDialogContent,
            forms_1.ReactiveFormsModule,
            ix_input_component_1.IxInputComponent,
            ix_chips_component_1.IxChipsComponent,
            ix_select_component_1.IxSelectComponent,
            ix_textarea_component_1.IxTextareaComponent,
            ix_checkbox_component_1.IxCheckboxComponent,
            ix_file_input_component_1.IxFileInputComponent,
            dialog_1.MatDialogActions,
            form_actions_component_1.FormActionsComponent,
            button_1.MatButton,
            test_directive_1.TestDirective,
            core_2.TranslateModule,
        ],
    })
], FileTicketLicensedComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,