{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/services/ix-validators.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/services/ix-validators.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  AbstractControl, FormControl, ValidationErrors, ValidatorFn, Validators,\n} from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport isCidr from 'is-cidr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IxValidatorsService {\n  constructor(protected translate: TranslateService) {}\n\n  makeErrorMessage(key: string, message: string): ValidationErrors {\n    return {\n      [key]: {\n        message,\n      },\n    };\n  }\n\n  withMessage(validatorFn: ValidatorFn, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const errors = validatorFn(control);\n      if (!errors || Object.keys(errors).length === 0) {\n        return null;\n      }\n\n      const errorKey = Object.keys(errors)[0];\n      return this.makeErrorMessage(errorKey, errorMessage);\n    };\n  }\n\n  readonly validateOnCondition = (\n    condition: (control: AbstractControl) => boolean,\n    validator: ValidatorFn,\n  ): ValidatorFn => {\n    return (control: AbstractControl): ValidationErrors => {\n      if (condition(control)) {\n        return validator(control);\n      }\n      return null;\n    };\n  };\n\n  /**\n   * This function returns a validator\n   * @param errMessage The error message applied if the validator fails\n   * @returns a validator function that checks if the control value\n   * is valid Cidr notation ip v4 or v6\n   */\n  readonly ipCidrV4orCidrV6: { forProperty: 'ip'; validatorFn: () => ValidatorFn } = {\n    forProperty: 'ip',\n    validatorFn: (): ValidatorFn => {\n      return (control: FormControl<string>) => {\n        if (!control.parent) {\n          return null;\n        }\n\n        if (control.value === '' || control.value === undefined) {\n          return null;\n        }\n\n        if (!isCidr.v4(control.value) && !isCidr.v6(control.value)) {\n          return { ip: true };\n        }\n\n        return null;\n      };\n    },\n  };\n\n  confirmValidator(name: string, validationMessage: string): ValidatorFn {\n    return Validators.compose([\n      this.withMessage(\n        Validators.pattern(new RegExp(`^${name}$`)),\n        validationMessage,\n      ),\n      this.withMessage(\n        Validators.required,\n        validationMessage,\n      ),\n    ]);\n  }\n\n  /**\n   * Specify simple validator function returning false for invalid value and an error message.\n   */\n  customValidator(validatorFn: (control: AbstractControl) => boolean, message: string): ValidatorFn {\n    return this.withMessage(\n      (control) => {\n        const isValid = validatorFn(control);\n\n        if (isValid) {\n          return null;\n        }\n\n        return { customValidator: true };\n      },\n      message,\n    );\n  }\n}\n"],"version":3}