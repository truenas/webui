{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/wrapperAt.js","mappings":";;;;;AAAA,wEAA4C;AAC5C,4EAAgD;AAChD,8DAAkC;AAClC,kEAAsC;AACtC,gEAAoC;AACpC,wDAA6B;AAE7B;;;;;;;;;;;;;;;GAeG;AACH,IAAI,SAAS,GAAG,IAAA,sBAAQ,EAAC,UAAS,KAAK;IACrC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EACrB,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B,KAAK,GAAG,IAAI,CAAC,WAAW,EACxB,WAAW,GAAG,UAAS,MAAM,IAAI,OAAO,IAAA,oBAAM,EAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAErE,IAAI,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM;QACrC,CAAC,CAAC,KAAK,YAAY,yBAAW,CAAC,IAAI,CAAC,IAAA,qBAAO,EAAC,KAAK,CAAC,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IACD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QACrB,MAAM,EAAE,iBAAI;QACZ,MAAM,EAAE,CAAC,WAAW,CAAC;QACrB,SAAS,EAAE,SAAS;KACrB,CAAC,CAAC;IACH,OAAO,IAAI,2BAAa,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAS,KAAK;QACjE,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAC5B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxB,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/wrapperAt.js"],"sourcesContent":["import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport baseAt from './_baseAt.js';\nimport flatRest from './_flatRest.js';\nimport isIndex from './_isIndex.js';\nimport thru from './thru.js';\n\n/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */\nvar wrapperAt = flatRest(function(paths) {\n  var length = paths.length,\n      start = length ? paths[0] : 0,\n      value = this.__wrapped__,\n      interceptor = function(object) { return baseAt(object, paths); };\n\n  if (length > 1 || this.__actions__.length ||\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\n    return this.thru(interceptor);\n  }\n  value = value.slice(start, +start + (length ? 1 : 0));\n  value.__actions__.push({\n    'func': thru,\n    'args': [interceptor],\n    'thisArg': undefined\n  });\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\n    if (length && !array.length) {\n      array.push(undefined);\n    }\n    return array;\n  });\n});\n\nexport default wrapperAt;\n"],"version":3}