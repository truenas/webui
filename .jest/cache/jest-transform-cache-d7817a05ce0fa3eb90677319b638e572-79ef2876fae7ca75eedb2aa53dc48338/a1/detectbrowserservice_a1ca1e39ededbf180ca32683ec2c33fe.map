{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/detect-browser.service.ts","mappings":";;;;;;;;;AAAA,wCAAmD;AACnD,6DAAmD;AAEnD;;GAEG;AAII,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,YAC0B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACrC,CAAC;IAEJ,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;IAED,cAAc,CAAC,IAAY;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;QAC9C,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QAC3C,MAAM,cAAc,GAAG,EAAE,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;QAC7F,MAAM,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACpD,IAAI,cAAc,IAAI,YAAY,KAAK,IAAI,EAAE,CAAC;YAC5C,cAAc,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;QACD,MAAM,WAAW,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAEjE,OAAO,IAAI,KAAK,WAAW,CAAC;IAC9B,CAAC;;AApBU,oDAAoB;;yCAE5B,aAAM,SAAC,sBAAM;;+BAFL,oBAAoB;IAHhC,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CAqBhC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/detect-browser.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { WINDOW } from 'app/helpers/window.helper';\n\n/**\n * Avoid using if possible.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DetectBrowserService {\n  constructor(\n    @Inject(WINDOW) private window: Window,\n  ) {}\n\n  isMacOs(): boolean {\n    return this.window.navigator.userAgent.includes('Macintosh');\n  }\n\n  matchesBrowser(name: string): boolean {\n    const appName = this.window.navigator.appName;\n    const ua = this.window.navigator.userAgent;\n    const browserVersion = ua.match(/(opera|chrome|safari|firefox|msie)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\n    const versionMatch = ua.match(/version\\/([.\\d]+)/i);\n    if (browserVersion && versionMatch !== null) {\n      browserVersion[2] = versionMatch[1];\n    }\n    const browserName = browserVersion ? browserVersion[1] : appName;\n\n    return name === browserName;\n  }\n}\n"],"version":3}