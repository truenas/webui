{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/partialRight.js","mappings":";;;;;AAAA,kEAAsC;AACtC,sEAA0C;AAC1C,oEAAwC;AACxC,8EAAkD;AAElD,sDAAsD;AACtD,IAAI,uBAAuB,GAAG,EAAE,CAAC;AAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AACH,IAAI,YAAY,GAAG,IAAA,sBAAQ,EAAC,UAAS,IAAI,EAAE,QAAQ;IACjD,IAAI,OAAO,GAAG,IAAA,4BAAc,EAAC,QAAQ,EAAE,IAAA,uBAAS,EAAC,YAAY,CAAC,CAAC,CAAC;IAChE,OAAO,IAAA,wBAAU,EAAC,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC;AAEH,+BAA+B;AAC/B,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;AAE9B,kBAAe,YAAY,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/partialRight.js"],"sourcesContent":["import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * This method is like `_.partial` except that partially applied arguments\n * are appended to the arguments it receives.\n *\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var greetFred = _.partialRight(greet, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n *\n * // Partially applied with placeholders.\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\n * sayHelloTo('fred');\n * // => 'hello fred'\n */\nvar partialRight = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partialRight));\n  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartialRight.placeholder = {};\n\nexport default partialRight;\n"],"version":3}