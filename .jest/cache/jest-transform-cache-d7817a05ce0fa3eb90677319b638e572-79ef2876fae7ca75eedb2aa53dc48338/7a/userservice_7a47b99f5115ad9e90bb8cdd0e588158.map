{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/user.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DsUncachedGroup, DsUncachedUser } from 'app/interfaces/ds-cache.interface';\nimport { Group } from 'app/interfaces/group.interface';\nimport { QueryFilter } from 'app/interfaces/query-api.interface';\nimport { User } from 'app/interfaces/user.interface';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  static readonly namePattern = /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*[$]?$/;\n  protected uncachedUserQuery = 'user.get_user_obj' as const;\n  protected uncachedGroupQuery = 'group.get_group_obj' as const;\n  protected userQuery = 'user.query' as const;\n  protected groupQuery = 'group.query' as const;\n  protected queryOptions = { limit: 50 };\n\n  constructor(protected ws: WebSocketService) {}\n\n  private groupQueryDsCacheByName(name: string): Observable<Group[]> {\n    if (!name?.length) {\n      return of([]);\n    }\n    let queryArgs: QueryFilter<Group>[] = [];\n    name = name.trim();\n    if (name.length > 0) {\n      queryArgs = [['name', '=', name]];\n    }\n    return this.ws.call(this.groupQuery, [queryArgs, { ...this.queryOptions }]);\n  }\n\n  groupQueryDsCache(search = '', hideBuiltIn = false, offset = 0): Observable<Group[]> {\n    let queryArgs: QueryFilter<Group>[] = [];\n    search = search.trim();\n    if (search.length > 0) {\n      queryArgs = [['group', '^', search]];\n    }\n    if (hideBuiltIn) {\n      queryArgs = queryArgs.concat([['builtin', '=', false]]);\n    }\n    return combineLatest([\n      this.groupQueryDsCacheByName(search),\n      this.ws.call(this.groupQuery, [queryArgs, { ...this.queryOptions, offset, order_by: ['builtin'] }]),\n    ]).pipe(map(([groupSearchedByName, groups]) => {\n      const groupIds = groupSearchedByName.map((groupsByName) => groupsByName.id);\n      groups = groups.filter(\n        (group) => {\n          return !groupIds.some((gid) => gid === group.id);\n        },\n      );\n      return [...groups, ...groupSearchedByName];\n    }));\n  }\n\n  smbGroupQueryDsCache(search = '', hideBuiltIn = false, offset = 0): Observable<Group[]> {\n    const queryArgs: QueryFilter<Group>[] = [['smb', '=', true]];\n    search = search.trim();\n    if (search.length > 0) {\n      queryArgs.push(['group', '^', search]);\n    }\n    if (hideBuiltIn) {\n      queryArgs.push(['builtin', '=', false]);\n    }\n    return combineLatest([\n      this.groupQueryDsCacheByName(search),\n      this.ws.call(this.groupQuery, [queryArgs, { ...this.queryOptions, offset, order_by: ['builtin'] }]),\n    ]).pipe(map(([groupSearchedByName, groups]) => {\n      const groupIds = groupSearchedByName.map((groupsByName) => groupsByName.id);\n      groups = groups.filter(\n        (group) => {\n          return !groupIds.some((gid) => gid === group.id);\n        },\n      );\n      return [...groups, ...groupSearchedByName];\n    }));\n  }\n\n  getGroupByName(groupname: string): Observable<DsUncachedGroup> {\n    return this.ws.call(this.uncachedGroupQuery, [{ groupname }]);\n  }\n\n  userQueryDsCache(search = '', offset = 0): Observable<User[]> {\n    let queryArgs: QueryFilter<User>[] = [];\n    search = search.trim();\n    if (search.length > 0) {\n      queryArgs = [['username', '^', search]];\n    }\n    return this.ws.call(this.userQuery, [queryArgs, { ...this.queryOptions, offset, order_by: ['builtin'] }]);\n  }\n\n  getUserByName(username: string): Observable<DsUncachedUser> {\n    return this.ws.call(this.uncachedUserQuery, [{ username }]);\n  }\n\n  smbUserQueryDsCache(search = '', offset = 0): Observable<User[]> {\n    const queryArgs: QueryFilter<User>[] = [['smb', '=', true]];\n    search = search.trim();\n    if (search.length > 0) {\n      queryArgs.push(['username', '^', search]);\n    }\n    return this.ws.call(this.userQuery, [queryArgs, { ...this.queryOptions, offset, order_by: ['builtin'] }]);\n  }\n}\n"],"version":3}