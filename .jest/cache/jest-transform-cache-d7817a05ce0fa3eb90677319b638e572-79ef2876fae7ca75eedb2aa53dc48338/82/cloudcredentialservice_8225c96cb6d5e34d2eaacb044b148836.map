{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/cloud-credential.service.ts","mappings":";;;;;;;;;AAAA,wCAA2C;AAI3C,wDAA2D;AAKpD,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IACjC,YAAsB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;IAAG,CAAC;IAE9C,YAAY;QACV,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC7C,CAAC;IAED,uBAAuB;QACrB,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;IACrD,CAAC;IAED,UAAU,CAAC,YAAoB;QAC7B,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAChE,CAAC;;AAbU,wDAAsB;;;;iCAAtB,sBAAsB;IAHlC,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,sBAAsB,CAclC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/cloud-credential.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CloudSyncBucket, CloudSyncCredential } from 'app/interfaces/cloudsync-credential.interface';\nimport { CloudSyncProvider } from 'app/interfaces/cloudsync-provider.interface';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CloudCredentialService {\n  constructor(protected ws: WebSocketService) {}\n\n  getProviders(): Observable<CloudSyncProvider[]> {\n    return this.ws.call('cloudsync.providers');\n  }\n\n  getCloudSyncCredentials(): Observable<CloudSyncCredential[]> {\n    return this.ws.call('cloudsync.credentials.query');\n  }\n\n  getBuckets(credentialId: number): Observable<CloudSyncBucket[]> {\n    return this.ws.call('cloudsync.list_buckets', [credentialId]);\n  }\n}\n"],"version":3}