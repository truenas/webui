48e0c398a351dbf8a012d4240191c335
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequiresRolesDirective = void 0;
const core_1 = require("@angular/core");
const until_destroy_1 = require("@ngneat/until-destroy");
const lodash_es_1 = require("lodash-es");
const rxjs_1 = require("rxjs");
const has_access_directive_1 = require("app/directives/has-access/has-access.directive");
const auth_service_1 = require("app/services/auth/auth.service");
let RequiresRolesDirective = class RequiresRolesDirective extends has_access_directive_1.HasAccessDirective {
    set ixRequiresRoles(roles) {
        if ((0, lodash_es_1.isEqual)(this.previousRoles, roles)) {
            return;
        }
        this.previousRoles = roles;
        if (!(roles === null || roles === void 0 ? void 0 : roles.length)) {
            this.viewContainerRef.createEmbeddedView(this.templateRef);
            return;
        }
        this.authService
            .hasRole(roles)
            .pipe((0, rxjs_1.take)(1), (0, until_destroy_1.untilDestroyed)(this))
            .subscribe((hasRole) => this.ixHasAccess = hasRole);
    }
    get elementClass() {
        return this.cssClassList.join(' ');
    }
    set elementClass(val) {
        this.cssClassList = val.split(' ');
    }
    constructor(templateRef, viewContainerRef, authService) {
        super(templateRef, viewContainerRef);
        this.templateRef = templateRef;
        this.viewContainerRef = viewContainerRef;
        this.authService = authService;
        this.previousRoles = [];
        this.cssClassList = [];
    }
};
exports.RequiresRolesDirective = RequiresRolesDirective;
RequiresRolesDirective.ctorParameters = () => [
    { type: core_1.TemplateRef },
    { type: core_1.ViewContainerRef },
    { type: auth_service_1.AuthService }
];
RequiresRolesDirective.propDecorators = {
    ixRequiresRoles: [{ type: core_1.Input }],
    elementClass: [{ type: core_1.Input, args: ['class',] }, { type: core_1.HostBinding, args: ['class',] }]
};
exports.RequiresRolesDirective = RequiresRolesDirective = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Directive)({
        selector: '[ixRequiresRoles]',
        standalone: true,
    })
], RequiresRolesDirective);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2RpcmVjdGl2ZXMvcmVxdWlyZXMtcm9sZXMvcmVxdWlyZXMtcm9sZXMuZGlyZWN0aXZlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQUV1QjtBQUN2Qix5REFBcUU7QUFDckUseUNBQW9DO0FBQ3BDLCtCQUE0QjtBQUM1Qix5RkFBb0Y7QUFFcEYsaUVBQTZEO0FBT3RELElBQU0sc0JBQXNCLEdBQTVCLE1BQU0sc0JBQXVCLFNBQVEseUNBQWtCO1FBSXhELGVBQWUsQ0FBQyxLQUFhO1FBQy9CLElBQUksSUFBQSxtQkFBTyxFQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUN2QyxPQUFPO1FBQ1QsQ0FBQztRQUVELElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBRTNCLElBQUksQ0FBQyxDQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxNQUFNLENBQUEsRUFBRSxDQUFDO1lBQ25CLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDM0QsT0FBTztRQUNULENBQUM7UUFFRCxJQUFJLENBQUMsV0FBVzthQUNiLE9BQU8sQ0FBQyxLQUFLLENBQUM7YUFDZCxJQUFJLENBQUMsSUFBQSxXQUFJLEVBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBQSw4QkFBYyxFQUFDLElBQUksQ0FBQyxDQUFDO2FBQ25DLFNBQVMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsQ0FBQztJQUN4RCxDQUFDO1FBTVksWUFBWTtRQUN2QixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFDRCxJQUFhLFlBQVksQ0FBQyxHQUFXO1FBQ25DLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsWUFDcUIsV0FBcUMsRUFDckMsZ0JBQWtDLEVBQzdDLFdBQXdCO1FBRWhDLEtBQUssQ0FBQyxXQUFXLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztRQUpsQixnQkFBVyxHQUFYLFdBQVcsQ0FBMEI7UUFDckMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUM3QyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQW5DMUIsa0JBQWEsR0FBVyxFQUFFLENBQUM7UUFxQmhCLGlCQUFZLEdBQWEsRUFBRSxDQUFDO0lBaUIvQyxDQUFDOztBQXZDVSx3REFBc0I7Ozs7Ozs7OEJBR2hDLFlBQUs7MkJBcUJMLFlBQUssU0FBQyxPQUFPLGNBQ2Isa0JBQVcsU0FBQyxPQUFPOztpQ0F6QlQsc0JBQXNCO0lBTGxDLElBQUEsNEJBQVksR0FBRTtJQUNkLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSxtQkFBbUI7UUFDN0IsVUFBVSxFQUFFLElBQUk7S0FDakIsQ0FBQztHQUNXLHNCQUFzQixDQXdDbEMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2RpcmVjdGl2ZXMvcmVxdWlyZXMtcm9sZXMvcmVxdWlyZXMtcm9sZXMuZGlyZWN0aXZlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVbnRpbERlc3Ryb3ksIHVudGlsRGVzdHJveWVkIH0gZnJvbSAnQG5nbmVhdC91bnRpbC1kZXN0cm95JztcbmltcG9ydCB7IGlzRXF1YWwgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgdGFrZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSGFzQWNjZXNzRGlyZWN0aXZlIH0gZnJvbSAnYXBwL2RpcmVjdGl2ZXMvaGFzLWFjY2Vzcy9oYXMtYWNjZXNzLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSb2xlIH0gZnJvbSAnYXBwL2VudW1zL3JvbGUuZW51bSc7XG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJ2FwcC9zZXJ2aWNlcy9hdXRoL2F1dGguc2VydmljZSc7XG5cbkBVbnRpbERlc3Ryb3koKVxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2l4UmVxdWlyZXNSb2xlc10nLFxuICBzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBSZXF1aXJlc1JvbGVzRGlyZWN0aXZlIGV4dGVuZHMgSGFzQWNjZXNzRGlyZWN0aXZlIHtcbiAgcHJpdmF0ZSBwcmV2aW91c1JvbGVzOiBSb2xlW10gPSBbXTtcblxuICBASW5wdXQoKVxuICBzZXQgaXhSZXF1aXJlc1JvbGVzKHJvbGVzOiBSb2xlW10pIHtcbiAgICBpZiAoaXNFcXVhbCh0aGlzLnByZXZpb3VzUm9sZXMsIHJvbGVzKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucHJldmlvdXNSb2xlcyA9IHJvbGVzO1xuXG4gICAgaWYgKCFyb2xlcz8ubGVuZ3RoKSB7XG4gICAgICB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVSZWYpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuYXV0aFNlcnZpY2VcbiAgICAgIC5oYXNSb2xlKHJvbGVzKVxuICAgICAgLnBpcGUodGFrZSgxKSwgdW50aWxEZXN0cm95ZWQodGhpcykpXG4gICAgICAuc3Vic2NyaWJlKChoYXNSb2xlKSA9PiB0aGlzLml4SGFzQWNjZXNzID0gaGFzUm9sZSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgY3NzQ2xhc3NMaXN0OiBzdHJpbmdbXSA9IFtdO1xuXG4gIEBJbnB1dCgnY2xhc3MnKVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgb3ZlcnJpZGUgZ2V0IGVsZW1lbnRDbGFzcygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmNzc0NsYXNzTGlzdC5qb2luKCcgJyk7XG4gIH1cbiAgb3ZlcnJpZGUgc2V0IGVsZW1lbnRDbGFzcyh2YWw6IHN0cmluZykge1xuICAgIHRoaXMuY3NzQ2xhc3NMaXN0ID0gdmFsLnNwbGl0KCcgJyk7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgb3ZlcnJpZGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPEhUTUxFbGVtZW50PixcbiAgICBwcm90ZWN0ZWQgb3ZlcnJpZGUgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZixcbiAgICBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoU2VydmljZSxcbiAgKSB7XG4gICAgc3VwZXIodGVtcGxhdGVSZWYsIHZpZXdDb250YWluZXJSZWYpO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=