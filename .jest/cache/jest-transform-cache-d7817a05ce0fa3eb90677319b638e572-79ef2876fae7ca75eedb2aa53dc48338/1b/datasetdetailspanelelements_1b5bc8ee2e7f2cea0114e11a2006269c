620ca8d6f2d9d0cd47e5571ab3712f61
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.datasetDetailsPanelElements = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
exports.datasetDetailsPanelElements = {
    hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Datasets')],
    anchorRouterLink: ['/datasets'],
    synonyms: [(0, ngx_translate_extract_marker_1.marker)('Manage Datasets')],
    elements: {
        addZvol: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Add Zvol')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Add Volume'), (0, ngx_translate_extract_marker_1.marker)('Create Zvol'), (0, ngx_translate_extract_marker_1.marker)('New Zvol')],
        },
        addDataset: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Add Dataset')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Add Filesystem'), (0, ngx_translate_extract_marker_1.marker)('Create Dataset'), (0, ngx_translate_extract_marker_1.marker)('New Dataset')],
        },
        datasetDetailsCard: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Dataset Details')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Dataset Information')],
        },
        datasetCapacityCard: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Dataset Space Management')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Dataset Capacity Management')],
        },
        datasetDataProtectionCard: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Data Protection')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Dataset Data Protection')],
        },
        datasetZfsEncryptionCard: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('ZFS Encryption')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Dataset ZFS Encryption')],
        },
        datasetRolesCard: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Roles')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Dataset Roles')],
        },
        datasetPermissionsCard: {
            hierarchy: [(0, ngx_translate_extract_marker_1.marker)('Permissions')],
            synonyms: [(0, ngx_translate_extract_marker_1.marker)('Dataset Permissions'), (0, ngx_translate_extract_marker_1.marker)('ACL')],
        },
    },
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3BhZ2VzL2RhdGFzZXRzL2NvbXBvbmVudHMvZGF0YXNldC1kZXRhaWxzLXBhbmVsL2RhdGFzZXQtZGV0YWlscy1wYW5lbC5lbGVtZW50cy50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwwRkFBc0U7QUFHekQsUUFBQSwyQkFBMkIsR0FBRztJQUN6QyxTQUFTLEVBQUUsQ0FBQyxJQUFBLHFDQUFDLEVBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUIsZ0JBQWdCLEVBQUUsQ0FBQyxXQUFXLENBQUM7SUFDL0IsUUFBUSxFQUFFLENBQUMsSUFBQSxxQ0FBQyxFQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDaEMsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFO1lBQ1AsU0FBUyxFQUFFLENBQUMsSUFBQSxxQ0FBQyxFQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzFCLFFBQVEsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxZQUFZLENBQUMsRUFBRSxJQUFBLHFDQUFDLEVBQUMsYUFBYSxDQUFDLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzdEO1FBQ0QsVUFBVSxFQUFFO1lBQ1YsU0FBUyxFQUFFLENBQUMsSUFBQSxxQ0FBQyxFQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQzdCLFFBQVEsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxnQkFBZ0IsQ0FBQyxFQUFFLElBQUEscUNBQUMsRUFBQyxnQkFBZ0IsQ0FBQyxFQUFFLElBQUEscUNBQUMsRUFBQyxhQUFhLENBQUMsQ0FBQztTQUN2RTtRQUNELGtCQUFrQixFQUFFO1lBQ2xCLFNBQVMsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQ2pDLFFBQVEsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxxQkFBcUIsQ0FBQyxDQUFDO1NBQ3JDO1FBQ0QsbUJBQW1CLEVBQUU7WUFDbkIsU0FBUyxFQUFFLENBQUMsSUFBQSxxQ0FBQyxFQUFDLDBCQUEwQixDQUFDLENBQUM7WUFDMUMsUUFBUSxFQUFFLENBQUMsSUFBQSxxQ0FBQyxFQUFDLDZCQUE2QixDQUFDLENBQUM7U0FDN0M7UUFDRCx5QkFBeUIsRUFBRTtZQUN6QixTQUFTLEVBQUUsQ0FBQyxJQUFBLHFDQUFDLEVBQUMsaUJBQWlCLENBQUMsQ0FBQztZQUNqQyxRQUFRLEVBQUUsQ0FBQyxJQUFBLHFDQUFDLEVBQUMseUJBQXlCLENBQUMsQ0FBQztTQUN6QztRQUNELHdCQUF3QixFQUFFO1lBQ3hCLFNBQVMsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBQ2hDLFFBQVEsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyx3QkFBd0IsQ0FBQyxDQUFDO1NBQ3hDO1FBQ0QsZ0JBQWdCLEVBQUU7WUFDaEIsU0FBUyxFQUFFLENBQUMsSUFBQSxxQ0FBQyxFQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3ZCLFFBQVEsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxlQUFlLENBQUMsQ0FBQztTQUMvQjtRQUNELHNCQUFzQixFQUFFO1lBQ3RCLFNBQVMsRUFBRSxDQUFDLElBQUEscUNBQUMsRUFBQyxhQUFhLENBQUMsQ0FBQztZQUM3QixRQUFRLEVBQUUsQ0FBQyxJQUFBLHFDQUFDLEVBQUMscUJBQXFCLENBQUMsRUFBRSxJQUFBLHFDQUFDLEVBQUMsS0FBSyxDQUFDLENBQUM7U0FDL0M7S0FDRjtDQUM0QixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9wYWdlcy9kYXRhc2V0cy9jb21wb25lbnRzL2RhdGFzZXQtZGV0YWlscy1wYW5lbC9kYXRhc2V0LWRldGFpbHMtcGFuZWwuZWxlbWVudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFya2VyIGFzIFQgfSBmcm9tICdAYmllc2JqZXJnL25neC10cmFuc2xhdGUtZXh0cmFjdC1tYXJrZXInO1xuaW1wb3J0IHsgVWlTZWFyY2hhYmxlRWxlbWVudCB9IGZyb20gJ2FwcC9tb2R1bGVzL2dsb2JhbC1zZWFyY2gvaW50ZXJmYWNlcy91aS1zZWFyY2hhYmxlLWVsZW1lbnQuaW50ZXJmYWNlJztcblxuZXhwb3J0IGNvbnN0IGRhdGFzZXREZXRhaWxzUGFuZWxFbGVtZW50cyA9IHtcbiAgaGllcmFyY2h5OiBbVCgnRGF0YXNldHMnKV0sXG4gIGFuY2hvclJvdXRlckxpbms6IFsnL2RhdGFzZXRzJ10sXG4gIHN5bm9ueW1zOiBbVCgnTWFuYWdlIERhdGFzZXRzJyldLFxuICBlbGVtZW50czoge1xuICAgIGFkZFp2b2w6IHtcbiAgICAgIGhpZXJhcmNoeTogW1QoJ0FkZCBadm9sJyldLFxuICAgICAgc3lub255bXM6IFtUKCdBZGQgVm9sdW1lJyksIFQoJ0NyZWF0ZSBadm9sJyksIFQoJ05ldyBadm9sJyldLFxuICAgIH0sXG4gICAgYWRkRGF0YXNldDoge1xuICAgICAgaGllcmFyY2h5OiBbVCgnQWRkIERhdGFzZXQnKV0sXG4gICAgICBzeW5vbnltczogW1QoJ0FkZCBGaWxlc3lzdGVtJyksIFQoJ0NyZWF0ZSBEYXRhc2V0JyksIFQoJ05ldyBEYXRhc2V0JyldLFxuICAgIH0sXG4gICAgZGF0YXNldERldGFpbHNDYXJkOiB7XG4gICAgICBoaWVyYXJjaHk6IFtUKCdEYXRhc2V0IERldGFpbHMnKV0sXG4gICAgICBzeW5vbnltczogW1QoJ0RhdGFzZXQgSW5mb3JtYXRpb24nKV0sXG4gICAgfSxcbiAgICBkYXRhc2V0Q2FwYWNpdHlDYXJkOiB7XG4gICAgICBoaWVyYXJjaHk6IFtUKCdEYXRhc2V0IFNwYWNlIE1hbmFnZW1lbnQnKV0sXG4gICAgICBzeW5vbnltczogW1QoJ0RhdGFzZXQgQ2FwYWNpdHkgTWFuYWdlbWVudCcpXSxcbiAgICB9LFxuICAgIGRhdGFzZXREYXRhUHJvdGVjdGlvbkNhcmQ6IHtcbiAgICAgIGhpZXJhcmNoeTogW1QoJ0RhdGEgUHJvdGVjdGlvbicpXSxcbiAgICAgIHN5bm9ueW1zOiBbVCgnRGF0YXNldCBEYXRhIFByb3RlY3Rpb24nKV0sXG4gICAgfSxcbiAgICBkYXRhc2V0WmZzRW5jcnlwdGlvbkNhcmQ6IHtcbiAgICAgIGhpZXJhcmNoeTogW1QoJ1pGUyBFbmNyeXB0aW9uJyldLFxuICAgICAgc3lub255bXM6IFtUKCdEYXRhc2V0IFpGUyBFbmNyeXB0aW9uJyldLFxuICAgIH0sXG4gICAgZGF0YXNldFJvbGVzQ2FyZDoge1xuICAgICAgaGllcmFyY2h5OiBbVCgnUm9sZXMnKV0sXG4gICAgICBzeW5vbnltczogW1QoJ0RhdGFzZXQgUm9sZXMnKV0sXG4gICAgfSxcbiAgICBkYXRhc2V0UGVybWlzc2lvbnNDYXJkOiB7XG4gICAgICBoaWVyYXJjaHk6IFtUKCdQZXJtaXNzaW9ucycpXSxcbiAgICAgIHN5bm9ueW1zOiBbVCgnRGF0YXNldCBQZXJtaXNzaW9ucycpLCBUKCdBQ0wnKV0sXG4gICAgfSxcbiAgfSxcbn0gc2F0aXNmaWVzIFVpU2VhcmNoYWJsZUVsZW1lbnQ7XG4iXSwidmVyc2lvbiI6M30=