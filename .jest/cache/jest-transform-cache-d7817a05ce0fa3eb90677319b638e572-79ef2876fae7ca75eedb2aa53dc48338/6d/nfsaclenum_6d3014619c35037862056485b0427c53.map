{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/enums/nfs-acl.enum.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/enums/nfs-acl.enum.ts"],"sourcesContent":["import { marker as T } from '@biesbjerg/ngx-translate-extract-marker';\n\nexport enum NfsAclTag {\n  Owner = 'owner@',\n  Group = 'group@',\n  Everyone = 'everyone@',\n  User = 'USER',\n  UserGroup = 'GROUP',\n  Both = 'BOTH', // middleware returns `ID_TYPE_BOTH` when it is not possible to determine whether an AD entity is a user or a group\n}\n\nexport const nfsAclTagLabels = new Map<NfsAclTag, string>([\n  [NfsAclTag.User, T('User')],\n  [NfsAclTag.UserGroup, T('Group')],\n  [NfsAclTag.Owner, T('owner@')],\n  [NfsAclTag.Group, T('group@')],\n  [NfsAclTag.Everyone, T('everyone@')],\n]);\n\nexport const smbAclTagLabels = new Map<NfsAclTag, string>([\n  [NfsAclTag.User, T('User')],\n  [NfsAclTag.UserGroup, T('Group')],\n  [NfsAclTag.Both, T('Unknown')],\n  [NfsAclTag.Everyone, T('everyone@')],\n]);\n\nexport enum NfsAclType {\n  Allow = 'ALLOW',\n  Deny = 'DENY',\n}\n\nexport const nfsAclTypeLabels = new Map<NfsAclType, string>([\n  [NfsAclType.Allow, T('Allow')],\n  [NfsAclType.Deny, T('Deny')],\n]);\n\nexport enum NfsBasicPermission {\n  FullControl = 'FULL_CONTROL',\n  Modify = 'MODIFY',\n  Read = 'READ',\n  Traverse = 'TRAVERSE',\n}\n\nexport const nfsBasicPermissionLabels = new Map<NfsBasicPermission, string>([\n  [NfsBasicPermission.Read, T('Read')],\n  [NfsBasicPermission.Modify, T('Modify')],\n  [NfsBasicPermission.Traverse, T('Traverse')],\n  [NfsBasicPermission.FullControl, T('Full Control')],\n]);\n\nexport enum NfsAdvancedPermission {\n  ReadData = 'READ_DATA',\n  WriteData = 'WRITE_DATA',\n  AppendData = 'APPEND_DATA',\n  ReadNamedAttrs = 'READ_NAMED_ATTRS',\n  WriteNamedAttrs = 'WRITE_NAMED_ATTRS',\n  Execute = 'EXECUTE',\n  DeleteChild = 'DELETE_CHILD',\n  ReadAttributes = 'READ_ATTRIBUTES',\n  WriteAttributes = 'WRITE_ATTRIBUTES',\n  Delete = 'DELETE',\n  ReadAcl = 'READ_ACL',\n  WriteAcl = 'WRITE_ACL',\n  WriteOwner = 'WRITE_OWNER',\n  Synchronize = 'SYNCHRONIZE',\n}\n\nexport const nfsAdvancedPermissionLabels = new Map<NfsAdvancedPermission, string>([\n  [NfsAdvancedPermission.ReadData, T('Read Data')],\n  [NfsAdvancedPermission.WriteData, T('Write Data')],\n  [NfsAdvancedPermission.AppendData, T('Append Data')],\n  [NfsAdvancedPermission.ReadNamedAttrs, T('Read Named Attributes')],\n  [NfsAdvancedPermission.WriteNamedAttrs, T('Write Named Attributes')],\n  [NfsAdvancedPermission.Execute, T('Execute')],\n  [NfsAdvancedPermission.DeleteChild, T('Delete Children')],\n  [NfsAdvancedPermission.ReadAttributes, T('Read Attributes')],\n  [NfsAdvancedPermission.WriteAttributes, T('Write Attributes')],\n  [NfsAdvancedPermission.Delete, T('Delete')],\n  [NfsAdvancedPermission.ReadAcl, T('Read ACL')],\n  [NfsAdvancedPermission.WriteAcl, T('Write ACL')],\n  [NfsAdvancedPermission.WriteOwner, T('Write Owner')],\n  [NfsAdvancedPermission.Synchronize, T('Synchronize')],\n]);\n\nexport enum NfsBasicFlag {\n  Inherit = 'INHERIT',\n  NoInherit = 'NOINHERIT',\n}\n\nexport const nfsBasicFlagLabels = new Map<NfsBasicFlag, string>([\n  [NfsBasicFlag.Inherit, T('Inherit')],\n  [NfsBasicFlag.NoInherit, T('No Inherit')],\n]);\n\nexport enum NfsAdvancedFlag {\n  FileInherit = 'FILE_INHERIT',\n  DirectoryInherit = 'DIRECTORY_INHERIT',\n  NoPropagateInherit = 'NO_PROPAGATE_INHERIT',\n  InheritOnly = 'INHERIT_ONLY',\n  Inherited = 'INHERITED',\n}\n\nexport const nfsAdvancedFlagLabels = new Map<NfsAdvancedFlag, string>([\n  [NfsAdvancedFlag.FileInherit, T('File Inherit')],\n  [NfsAdvancedFlag.DirectoryInherit, T('Directory Inherit')],\n  [NfsAdvancedFlag.NoPropagateInherit, T('No Propagate Inherit')],\n  [NfsAdvancedFlag.InheritOnly, T('Inherit Only')],\n  [NfsAdvancedFlag.Inherited, T('Inherited')],\n]);\n"],"version":3}