{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_toKey.js","mappings":";;;;;AAAA,gEAAqC;AAErC,yDAAyD;AACzD,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;AAErB;;;;;;GAMG;AACH,SAAS,KAAK,CAAC,KAAK;IAClB,IAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,IAAA,qBAAQ,EAAC,KAAK,CAAC,EAAE,CAAC;QAChD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,MAAM,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;IAC1B,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;AACrE,CAAC;AAED,kBAAe,KAAK,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_toKey.js"],"sourcesContent":["import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n"],"version":3}