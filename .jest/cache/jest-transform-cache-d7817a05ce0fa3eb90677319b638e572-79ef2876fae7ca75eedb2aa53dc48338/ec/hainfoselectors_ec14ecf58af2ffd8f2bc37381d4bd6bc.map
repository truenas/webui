{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/ha-info/ha-info.selectors.ts","mappings":";;;AAAA,uCAAoE;AACpE,2FAAiF;AAGpE,QAAA,cAAc,GAAG,QAAQ,CAAC;AAE1B,QAAA,iBAAiB,GAAG,IAAA,6BAAqB,EAAc,sBAAc,CAAC,CAAC;AAEvE,QAAA,cAAc,GAAG,IAAA,sBAAc,EAC1C,yBAAiB,EACjB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAC3B,CAAC;AAEW,QAAA,kBAAkB,GAAG,IAAA,sBAAc,EAC9C,yBAAiB,EACjB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,YAAY,KAAI,KAAK,CACxC,CAAC;AAEW,QAAA,iBAAiB,GAAG,IAAA,sBAAc,EAC7C,sBAAc,EACd,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,KAAI,KAAK,CACjC,CAAC;AAEW,QAAA,sBAAsB,GAAG,IAAA,sBAAc,EAClD,yBAAiB,EACjB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,gBAAgB,KAAI,KAAK,CAC5C,CAAC;AAEW,QAAA,iBAAiB,GAAG,IAAA,sBAAc,EAC7C,yBAAiB,EACjB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACf,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,sDAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACrF,CAAC,CACF,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/ha-info/ha-info.selectors.ts"],"sourcesContent":["import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { failoverAllowedReasons } from 'app/enums/failover-disabled-reason.enum';\nimport { HaInfoState } from 'app/store/ha-info/ha-info.reducer';\n\nexport const haInfoStateKey = 'haInfo';\n\nexport const selectHaInfoState = createFeatureSelector<HaInfoState>(haInfoStateKey);\n\nexport const selectHaStatus = createSelector(\n  selectHaInfoState,\n  (state) => state?.haStatus,\n);\n\nexport const selectIsHaLicensed = createSelector(\n  selectHaInfoState,\n  (state) => state?.isHaLicensed || false,\n);\n\nexport const selectIsHaEnabled = createSelector(\n  selectHaStatus,\n  (state) => state?.hasHa || false,\n);\n\nexport const selectIsUpgradePending = createSelector(\n  selectHaInfoState,\n  (state) => state?.isUpgradePending || false,\n);\n\nexport const selectCanFailover = createSelector(\n  selectHaInfoState,\n  ({ haStatus }) => {\n    if (!haStatus) {\n      return false;\n    }\n\n    if (haStatus.hasHa) {\n      return true;\n    }\n\n    return haStatus.reasons.every((reason) => failoverAllowedReasons.includes(reason));\n  },\n);\n"],"version":3}