{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/page-header/breadcrumb/breadcrumb.component.ts","mappings":";;;;;;;;;AAAA,wCAEuB;AACvB,4CAAoE;AACpE,yDAAqE;AACrE,8CAAsD;AACtD,yCAAmC;AACnC,8CAAwC;AACxC,uEAAmE;AACnE,sFAA4F;AAE5F,mBAAmB;AACnB,MAAM,aAAa,GAAG,CAAC,cAAc,EAAE,mBAAmB,EAAE,SAAS,CAAC,CAAC;AAehE,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IAE9B,YACU,MAAc,EACd,iBAAoC,EACpC,GAAsB;QAFtB,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,QAAG,GAAH,GAAG,CAAmB;IAC5B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEzC,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,IAAI,CACH,IAAA,kBAAM,EAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,YAAY,sBAAa,CAAC,EACjD,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACzC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,cAAc;QACpB,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,IAAA,kBAAM,EAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACnD,MAAM,wBAAwB,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE;YACnE,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;YAChE,IAAI,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBACtC,OAAO,KAAK,CAAC;YACf,CAAC;YACD,OAAO,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,OAAO,wBAAwB,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;YAChD,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;gBACvD,uCAAY,SAAS,KAAE,GAAG,EAAE,IAAI,IAAG;YACrC,CAAC;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;;AArCU,kDAAmB;;;;;;8BAAnB,mBAAmB;IAb/B,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,eAAe;QACzB,gDAA0C;QAE1C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,mBAAU;YACV,8BAAa;YACb,sBAAe;SAChB;KACF,CAAC;GACW,mBAAmB,CAsC/B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/page-header/breadcrumb/breadcrumb.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit,\n} from '@angular/core';\nimport { Router, NavigationEnd, RouterLink } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { uniqBy } from 'lodash-es';\nimport { filter } from 'rxjs/operators';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { RoutePartsService, RoutePart } from 'app/services/route-parts/route-parts.service';\n\n// TODO: Bad. Redo.\nconst noLinksRoutes = ['/credentials', '/reportsdashboard', '/system'];\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    RouterLink,\n    TestDirective,\n    TranslateModule,\n  ],\n})\nexport class BreadcrumbComponent implements OnInit {\n  breadcrumbs: RoutePart[];\n  constructor(\n    private router: Router,\n    private routePartsService: RoutePartsService,\n    private cdr: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit(): void {\n    this.breadcrumbs = this.getBreadcrumbs();\n\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        untilDestroyed(this),\n      ).subscribe(() => {\n        this.breadcrumbs = this.getBreadcrumbs();\n        this.cdr.markForCheck();\n      });\n  }\n\n  private getBreadcrumbs(): RoutePart[] {\n    const sortedRoutes = this.routePartsService.routeParts.sort((a, b) => a.ngUrl.length - b.ngUrl.length);\n    const uniqRoutesList = uniqBy(sortedRoutes, 'url');\n    const validRoutesBeforeCurrent = uniqRoutesList.filter((routePart) => {\n      routePart.ngUrl = routePart.ngUrl.filter((item) => item !== '');\n      if (routePart.url === this.router.url) {\n        return false;\n      }\n      return Boolean(routePart.breadcrumb);\n    });\n    return validRoutesBeforeCurrent.map((routePart) => {\n      if (noLinksRoutes.some((url) => routePart.url === url)) {\n        return { ...routePart, url: null };\n      }\n      return routePart;\n    });\n  }\n}\n"],"version":3}