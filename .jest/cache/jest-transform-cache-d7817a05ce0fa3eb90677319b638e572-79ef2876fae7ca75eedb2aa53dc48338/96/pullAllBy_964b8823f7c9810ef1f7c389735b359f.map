{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/pullAllBy.js","mappings":";;;;;AAAA,0EAA8C;AAC9C,wEAA4C;AAE5C;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ;IACxC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC;QACvD,CAAC,CAAC,IAAA,yBAAW,EAAC,KAAK,EAAE,MAAM,EAAE,IAAA,0BAAY,EAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC,KAAK,CAAC;AACZ,CAAC;AAED,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/pullAllBy.js"],"sourcesContent":["import baseIteratee from './_baseIteratee.js';\nimport basePullAll from './_basePullAll.js';\n\n/**\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\n * invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n *\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n * console.log(array);\n * // => [{ 'x': 2 }]\n */\nfunction pullAllBy(array, values, iteratee) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, baseIteratee(iteratee, 2))\n    : array;\n}\n\nexport default pullAllBy;\n"],"version":3}