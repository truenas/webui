{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.harness.ts","mappings":";;;;;;;;;;;;AAAA,kDAA8F;AAC9F,gEAAwE;AAExE,kFAA8E;AAM9E,MAAa,iBAAkB,SAAQ,0BAAgB;IAAvD;;QAQE,0BAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,4BAAkB,CAAC,CAAC;QAC5D,iBAAY,GAAG,4BAAY,CAAC;IA2B9B,CAAC;IAjCC,MAAM,CAAC,IAAI,CAAC,OAAiC;QAC3C,OAAO,IAAI,0BAAgB,CAAC,iBAAiB,EAAE,OAAO,CAAC;aACpD,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,0BAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IAC1H,CAAC;IAKK,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC;YACxE,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QACnC,CAAC;KAAA;IAEK,QAAQ;;YACZ,OAAO,CAAC,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QAC1D,CAAC;KAAA;IAEK,QAAQ,CAAC,KAAc;;YAC3B,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC9D,IAAI,KAAK,EAAE,CAAC;gBACV,OAAO,kBAAkB,CAAC,KAAK,EAAE,CAAC;YACpC,CAAC;YAED,OAAO,kBAAkB,CAAC,OAAO,EAAE,CAAC;QACtC,CAAC;KAAA;IAEK,UAAU;;YACd,OAAO,CAAC,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;QAC3D,CAAC;KAAA;IAEK,MAAM;;YACV,OAAO,CAAC,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QACvD,CAAC;KAAA;;AAnCH,8CAoCC;AAnCQ,8BAAY,GAAG,aAAa,AAAhB,CAAiB","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.harness.ts"],"sourcesContent":["import { BaseHarnessFilters, ComponentHarness, HarnessPredicate } from '@angular/cdk/testing';\nimport { MatCheckboxHarness } from '@angular/material/checkbox/testing';\nimport { IxFormControlHarness } from 'app/modules/forms/ix-forms/interfaces/ix-form-control-harness.interface';\nimport { getErrorText } from 'app/modules/forms/ix-forms/utils/harness.utils';\n\nexport interface IxCheckboxHarnessFilters extends BaseHarnessFilters {\n  label?: string;\n}\n\nexport class IxCheckboxHarness extends ComponentHarness implements IxFormControlHarness {\n  static hostSelector = 'ix-checkbox';\n\n  static with(options: IxCheckboxHarnessFilters): HarnessPredicate<IxCheckboxHarness> {\n    return new HarnessPredicate(IxCheckboxHarness, options)\n      .addOption('label', options.label, (harness, label) => HarnessPredicate.stringMatches(harness.getLabelText(), label));\n  }\n\n  getMatCheckboxHarness = this.locatorFor(MatCheckboxHarness);\n  getErrorText = getErrorText;\n\n  async getLabelText(): Promise<string> {\n    const label = await (await this.getMatCheckboxHarness()).getLabelText();\n    return label.replace(/ \\*$/, '');\n  }\n\n  async getValue(): Promise<boolean> {\n    return (await this.getMatCheckboxHarness()).isChecked();\n  }\n\n  async setValue(value: boolean): Promise<void> {\n    const matCheckboxHarness = await this.getMatCheckboxHarness();\n    if (value) {\n      return matCheckboxHarness.check();\n    }\n\n    return matCheckboxHarness.uncheck();\n  }\n\n  async isDisabled(): Promise<boolean> {\n    return (await this.getMatCheckboxHarness()).isDisabled();\n  }\n\n  async toggle(): Promise<void> {\n    return (await this.getMatCheckboxHarness()).toggle();\n  }\n}\n"],"version":3}