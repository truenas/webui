3b7d21e3c1e93e08655e601b432028ff
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NewPageBadgeComponent = void 0;
const core_1 = require("@angular/core");
const button_1 = require("@angular/material/button");
const dialog_1 = require("@angular/material/dialog");
const core_2 = require("@ngx-translate/core");
const if_nightly_directive_1 = require("app/directives/if-nightly/if-nightly.directive");
const feedback_dialog_component_1 = require("app/modules/feedback/components/feedback-dialog/feedback-dialog.component");
const test_directive_1 = require("app/modules/test-id/test.directive");
let NewPageBadgeComponent = class NewPageBadgeComponent {
    constructor(matDialog) {
        this.matDialog = matDialog;
    }
    leaveFeedbackPressed() {
        this.matDialog.open(feedback_dialog_component_1.FeedbackDialogComponent);
    }
};
exports.NewPageBadgeComponent = NewPageBadgeComponent;
NewPageBadgeComponent.ctorParameters = () => [
    { type: dialog_1.MatDialog }
];
exports.NewPageBadgeComponent = NewPageBadgeComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-new-page-badge',
        template: require("./new-page-badge.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            if_nightly_directive_1.IfNightlyDirective,
            button_1.MatButton,
            test_directive_1.TestDirective,
            core_2.TranslateModule,
        ],
    })
], NewPageBadgeComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvcGFnZS1oZWFkZXIvaXMtbmV3LWluZGljYXRvci9uZXctcGFnZS1iYWRnZS5jb21wb25lbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsd0NBQW1FO0FBQ25FLHFEQUFxRDtBQUNyRCxxREFBcUQ7QUFDckQsOENBQXNEO0FBQ3RELHlGQUFvRjtBQUNwRix5SEFBb0g7QUFDcEgsdUVBQW1FO0FBZTVELElBQU0scUJBQXFCLEdBQTNCLE1BQU0scUJBQXFCO0lBQ2hDLFlBQW9CLFNBQW9CO1FBQXBCLGNBQVMsR0FBVCxTQUFTLENBQVc7SUFBRyxDQUFDO0lBRTVDLG9CQUFvQjtRQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxtREFBdUIsQ0FBQyxDQUFDO0lBQy9DLENBQUM7O0FBTFUsc0RBQXFCOzs7O2dDQUFyQixxQkFBcUI7SUFiakMsSUFBQSxnQkFBUyxFQUFDO1FBQ1QsUUFBUSxFQUFFLG1CQUFtQjtRQUM3QixvREFBOEM7UUFFOUMsZUFBZSxFQUFFLDhCQUF1QixDQUFDLE1BQU07UUFDL0MsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFO1lBQ1AseUNBQWtCO1lBQ2xCLGtCQUFTO1lBQ1QsOEJBQWE7WUFDYixzQkFBZTtTQUNoQjtLQUNGLENBQUM7R0FDVyxxQkFBcUIsQ0FNakMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvcGFnZS1oZWFkZXIvaXMtbmV3LWluZGljYXRvci9uZXctcGFnZS1iYWRnZS5jb21wb25lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0QnV0dG9uIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcbmltcG9ydCB7IE1hdERpYWxvZyB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IElmTmlnaHRseURpcmVjdGl2ZSB9IGZyb20gJ2FwcC9kaXJlY3RpdmVzL2lmLW5pZ2h0bHkvaWYtbmlnaHRseS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRmVlZGJhY2tEaWFsb2dDb21wb25lbnQgfSBmcm9tICdhcHAvbW9kdWxlcy9mZWVkYmFjay9jb21wb25lbnRzL2ZlZWRiYWNrLWRpYWxvZy9mZWVkYmFjay1kaWFsb2cuY29tcG9uZW50JztcbmltcG9ydCB7IFRlc3REaXJlY3RpdmUgfSBmcm9tICdhcHAvbW9kdWxlcy90ZXN0LWlkL3Rlc3QuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaXgtbmV3LXBhZ2UtYmFkZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vbmV3LXBhZ2UtYmFkZ2UuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9uZXctcGFnZS1iYWRnZS5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIElmTmlnaHRseURpcmVjdGl2ZSxcbiAgICBNYXRCdXR0b24sXG4gICAgVGVzdERpcmVjdGl2ZSxcbiAgICBUcmFuc2xhdGVNb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5ld1BhZ2VCYWRnZUNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWF0RGlhbG9nOiBNYXREaWFsb2cpIHt9XG5cbiAgbGVhdmVGZWVkYmFja1ByZXNzZWQoKTogdm9pZCB7XG4gICAgdGhpcy5tYXREaWFsb2cub3BlbihGZWVkYmFja0RpYWxvZ0NvbXBvbmVudCk7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==