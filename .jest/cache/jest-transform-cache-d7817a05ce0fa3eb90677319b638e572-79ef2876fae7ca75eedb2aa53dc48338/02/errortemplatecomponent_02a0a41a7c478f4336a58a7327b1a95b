676124d5bf84fc83b19474d9a374dccc
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorTemplateComponent = void 0;
const core_1 = require("@angular/core");
const button_1 = require("@angular/material/button");
const dialog_1 = require("@angular/material/dialog");
const until_destroy_1 = require("@ngneat/until-destroy");
const core_2 = require("@ngx-translate/core");
const dialog_service_1 = require("app/modules/dialog/dialog.service");
const ix_icon_component_1 = require("app/modules/ix-icon/ix-icon.component");
const test_directive_1 = require("app/modules/test-id/test.directive");
const download_service_1 = require("app/services/download.service");
const error_handler_service_1 = require("app/services/error-handler.service");
const ws_service_1 = require("app/services/ws.service");
let ErrorTemplateComponent = class ErrorTemplateComponent {
    constructor(ws, download, errorHandler, dialogService) {
        this.ws = ws;
        this.download = download;
        this.errorHandler = errorHandler;
        this.dialogService = dialogService;
        this.isCloseMoreInfo = true;
    }
    toggleOpen() {
        const messageWrapper = this.errorMessageWrapper.nativeElement;
        const content = this.errorMdContent.nativeElement;
        const btPanel = this.errorBtPanel.nativeElement;
        const txtarea = this.errorBtText.nativeElement;
        this.isCloseMoreInfo = !this.isCloseMoreInfo;
        if (!this.isCloseMoreInfo) {
            messageWrapper.setAttribute('style', 'max-height: 63px; overflow: auto');
            btPanel.setAttribute('style', 'width: 750px; max-height: calc(80vh - 240px)');
        }
        else {
            content.removeAttribute('style');
            btPanel.removeAttribute('style');
            messageWrapper.removeAttribute('style');
            txtarea.removeAttribute('style');
        }
    }
    downloadLogs() {
        this.ws.call('core.job_download_logs', [this.logs.id, `${this.logs.id}.log`])
            .pipe(this.errorHandler.catchError(), (0, until_destroy_1.untilDestroyed)(this))
            .subscribe((url) => {
            const mimetype = 'text/plain';
            this.download.streamDownloadFile(url, `${this.logs.id}.log`, mimetype).pipe((0, until_destroy_1.untilDestroyed)(this)).subscribe({
                next: (file) => {
                    this.download.downloadBlob(file, `${this.logs.id}.log`);
                },
                error: (error) => {
                    this.dialogService.error(this.errorHandler.parseHttpError(error));
                },
            });
        });
    }
};
exports.ErrorTemplateComponent = ErrorTemplateComponent;
ErrorTemplateComponent.ctorParameters = () => [
    { type: ws_service_1.WebSocketService },
    { type: download_service_1.DownloadService },
    { type: error_handler_service_1.ErrorHandlerService },
    { type: dialog_service_1.DialogService }
];
ErrorTemplateComponent.propDecorators = {
    errorMessageWrapper: [{ type: core_1.ViewChild, args: ['errorMessageWrapper',] }],
    errorTitle: [{ type: core_1.ViewChild, args: ['errorTitle',] }],
    errorMdContent: [{ type: core_1.ViewChild, args: ['errorMdContent',] }],
    errorBtPanel: [{ type: core_1.ViewChild, args: ['errorBtPanel',] }],
    errorBtText: [{ type: core_1.ViewChild, args: ['errorBtText',] }],
    title: [{ type: core_1.Input }],
    message: [{ type: core_1.Input }],
    backtrace: [{ type: core_1.Input }],
    logs: [{ type: core_1.Input }]
};
exports.ErrorTemplateComponent = ErrorTemplateComponent = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Component)({
        selector: 'ix-error-template',
        template: require("./error-template.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            dialog_1.MatDialogTitle,
            ix_icon_component_1.IxIconComponent,
            button_1.MatButton,
            core_2.TranslateModule,
            test_directive_1.TestDirective,
        ],
    })
], ErrorTemplateComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZGlhbG9nL2NvbXBvbmVudHMvbXVsdGktZXJyb3ItZGlhbG9nL2Vycm9yLXRlbXBsYXRlL2Vycm9yLXRlbXBsYXRlLmNvbXBvbmVudC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQSx3Q0FFdUI7QUFDdkIscURBQXFEO0FBQ3JELHFEQUEwRDtBQUMxRCx5REFBcUU7QUFDckUsOENBQXNEO0FBRXRELHNFQUFrRTtBQUNsRSw2RUFBd0U7QUFDeEUsdUVBQW1FO0FBQ25FLG9FQUFnRTtBQUNoRSw4RUFBeUU7QUFDekUsd0RBQTJEO0FBaUJwRCxJQUFNLHNCQUFzQixHQUE1QixNQUFNLHNCQUFzQjtJQWFqQyxZQUNVLEVBQW9CLEVBQ3BCLFFBQXlCLEVBQ3pCLFlBQWlDLEVBQ2pDLGFBQTRCO1FBSDVCLE9BQUUsR0FBRixFQUFFLENBQWtCO1FBQ3BCLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBQ3pCLGlCQUFZLEdBQVosWUFBWSxDQUFxQjtRQUNqQyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQVB0QyxvQkFBZSxHQUFHLElBQUksQ0FBQztJQVFwQixDQUFDO0lBRUosVUFBVTtRQUNSLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxhQUFhLENBQUM7UUFDOUQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUM7UUFDbEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUM7UUFDaEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUM7UUFFL0MsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUMxQixjQUFjLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxrQ0FBa0MsQ0FBQyxDQUFDO1lBQ3pFLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLDhDQUE4QyxDQUFDLENBQUM7UUFDaEYsQ0FBQzthQUFNLENBQUM7WUFDTixPQUFPLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN4QyxPQUFPLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ25DLENBQUM7SUFDSCxDQUFDO0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLHdCQUF3QixFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDMUUsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBQSw4QkFBYyxFQUFDLElBQUksQ0FBQyxDQUFDO2FBQzFELFNBQVMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ2pCLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQztZQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUEsOEJBQWMsRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztnQkFDMUcsSUFBSSxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7b0JBQ2IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUMxRCxDQUFDO2dCQUNELEtBQUssRUFBRSxDQUFDLEtBQXdCLEVBQUUsRUFBRTtvQkFDbEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDcEUsQ0FBQzthQUNGLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQzs7QUFwRFUsd0RBQXNCOzs7Ozs7OztrQ0FDaEMsZ0JBQVMsU0FBQyxxQkFBcUI7eUJBQy9CLGdCQUFTLFNBQUMsWUFBWTs2QkFDdEIsZ0JBQVMsU0FBQyxnQkFBZ0I7MkJBQzFCLGdCQUFTLFNBQUMsY0FBYzswQkFDeEIsZ0JBQVMsU0FBQyxhQUFhO29CQUV2QixZQUFLO3NCQUNMLFlBQUs7d0JBQ0wsWUFBSzttQkFFTCxZQUFLOztpQ0FYSyxzQkFBc0I7SUFmbEMsSUFBQSw0QkFBWSxHQUFFO0lBQ2QsSUFBQSxnQkFBUyxFQUFDO1FBQ1QsUUFBUSxFQUFFLG1CQUFtQjtRQUM3QixvREFBOEM7UUFFOUMsZUFBZSxFQUFFLDhCQUF1QixDQUFDLE1BQU07UUFDL0MsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFO1lBQ1AsdUJBQWM7WUFDZCxtQ0FBZTtZQUNmLGtCQUFTO1lBQ1Qsc0JBQWU7WUFDZiw4QkFBYTtTQUNkO0tBQ0YsQ0FBQztHQUNXLHNCQUFzQixDQXFEbEMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZGlhbG9nL2NvbXBvbmVudHMvbXVsdGktZXJyb3ItZGlhbG9nL2Vycm9yLXRlbXBsYXRlL2Vycm9yLXRlbXBsYXRlLmNvbXBvbmVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0QnV0dG9uIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcbmltcG9ydCB7IE1hdERpYWxvZ1RpdGxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IFVudGlsRGVzdHJveSwgdW50aWxEZXN0cm95ZWQgfSBmcm9tICdAbmduZWF0L3VudGlsLWRlc3Ryb3knO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBKb2IgfSBmcm9tICdhcHAvaW50ZXJmYWNlcy9qb2IuaW50ZXJmYWNlJztcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UgfSBmcm9tICdhcHAvbW9kdWxlcy9kaWFsb2cvZGlhbG9nLnNlcnZpY2UnO1xuaW1wb3J0IHsgSXhJY29uQ29tcG9uZW50IH0gZnJvbSAnYXBwL21vZHVsZXMvaXgtaWNvbi9peC1pY29uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUZXN0RGlyZWN0aXZlIH0gZnJvbSAnYXBwL21vZHVsZXMvdGVzdC1pZC90ZXN0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEb3dubG9hZFNlcnZpY2UgfSBmcm9tICdhcHAvc2VydmljZXMvZG93bmxvYWQuc2VydmljZSc7XG5pbXBvcnQgeyBFcnJvckhhbmRsZXJTZXJ2aWNlIH0gZnJvbSAnYXBwL3NlcnZpY2VzL2Vycm9yLWhhbmRsZXIuc2VydmljZSc7XG5pbXBvcnQgeyBXZWJTb2NrZXRTZXJ2aWNlIH0gZnJvbSAnYXBwL3NlcnZpY2VzL3dzLnNlcnZpY2UnO1xuXG5AVW50aWxEZXN0cm95KClcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l4LWVycm9yLXRlbXBsYXRlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Vycm9yLXRlbXBsYXRlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZXJyb3ItdGVtcGxhdGUuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBNYXREaWFsb2dUaXRsZSxcbiAgICBJeEljb25Db21wb25lbnQsXG4gICAgTWF0QnV0dG9uLFxuICAgIFRyYW5zbGF0ZU1vZHVsZSxcbiAgICBUZXN0RGlyZWN0aXZlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBFcnJvclRlbXBsYXRlQ29tcG9uZW50IHtcbiAgQFZpZXdDaGlsZCgnZXJyb3JNZXNzYWdlV3JhcHBlcicpIGVycm9yTWVzc2FnZVdyYXBwZXI6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICBAVmlld0NoaWxkKCdlcnJvclRpdGxlJykgZXJyb3JUaXRsZTogRWxlbWVudFJlZjxIVE1MRWxlbWVudD47XG4gIEBWaWV3Q2hpbGQoJ2Vycm9yTWRDb250ZW50JykgZXJyb3JNZENvbnRlbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICBAVmlld0NoaWxkKCdlcnJvckJ0UGFuZWwnKSBlcnJvckJ0UGFuZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICBAVmlld0NoaWxkKCdlcnJvckJ0VGV4dCcpIGVycm9yQnRUZXh0OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PjtcblxuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBtZXNzYWdlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGJhY2t0cmFjZTogc3RyaW5nO1xuICBpc0Nsb3NlTW9yZUluZm8gPSB0cnVlO1xuICBASW5wdXQoKSBsb2dzOiBKb2I7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB3czogV2ViU29ja2V0U2VydmljZSxcbiAgICBwcml2YXRlIGRvd25sb2FkOiBEb3dubG9hZFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBlcnJvckhhbmRsZXI6IEVycm9ySGFuZGxlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBkaWFsb2dTZXJ2aWNlOiBEaWFsb2dTZXJ2aWNlLFxuICApIHt9XG5cbiAgdG9nZ2xlT3BlbigpOiB2b2lkIHtcbiAgICBjb25zdCBtZXNzYWdlV3JhcHBlciA9IHRoaXMuZXJyb3JNZXNzYWdlV3JhcHBlci5uYXRpdmVFbGVtZW50O1xuICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLmVycm9yTWRDb250ZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgY29uc3QgYnRQYW5lbCA9IHRoaXMuZXJyb3JCdFBhbmVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgY29uc3QgdHh0YXJlYSA9IHRoaXMuZXJyb3JCdFRleHQubmF0aXZlRWxlbWVudDtcblxuICAgIHRoaXMuaXNDbG9zZU1vcmVJbmZvID0gIXRoaXMuaXNDbG9zZU1vcmVJbmZvO1xuICAgIGlmICghdGhpcy5pc0Nsb3NlTW9yZUluZm8pIHtcbiAgICAgIG1lc3NhZ2VXcmFwcGVyLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnbWF4LWhlaWdodDogNjNweDsgb3ZlcmZsb3c6IGF1dG8nKTtcbiAgICAgIGJ0UGFuZWwuc2V0QXR0cmlidXRlKCdzdHlsZScsICd3aWR0aDogNzUwcHg7IG1heC1oZWlnaHQ6IGNhbGMoODB2aCAtIDI0MHB4KScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb250ZW50LnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKTtcbiAgICAgIGJ0UGFuZWwucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgICAgbWVzc2FnZVdyYXBwZXIucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgICAgdHh0YXJlYS5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgfVxuICB9XG5cbiAgZG93bmxvYWRMb2dzKCk6IHZvaWQge1xuICAgIHRoaXMud3MuY2FsbCgnY29yZS5qb2JfZG93bmxvYWRfbG9ncycsIFt0aGlzLmxvZ3MuaWQsIGAke3RoaXMubG9ncy5pZH0ubG9nYF0pXG4gICAgICAucGlwZSh0aGlzLmVycm9ySGFuZGxlci5jYXRjaEVycm9yKCksIHVudGlsRGVzdHJveWVkKHRoaXMpKVxuICAgICAgLnN1YnNjcmliZSgodXJsKSA9PiB7XG4gICAgICAgIGNvbnN0IG1pbWV0eXBlID0gJ3RleHQvcGxhaW4nO1xuICAgICAgICB0aGlzLmRvd25sb2FkLnN0cmVhbURvd25sb2FkRmlsZSh1cmwsIGAke3RoaXMubG9ncy5pZH0ubG9nYCwgbWltZXR5cGUpLnBpcGUodW50aWxEZXN0cm95ZWQodGhpcykpLnN1YnNjcmliZSh7XG4gICAgICAgICAgbmV4dDogKGZpbGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZG93bmxvYWQuZG93bmxvYWRCbG9iKGZpbGUsIGAke3RoaXMubG9ncy5pZH0ubG9nYCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBlcnJvcjogKGVycm9yOiBIdHRwRXJyb3JSZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5kaWFsb2dTZXJ2aWNlLmVycm9yKHRoaXMuZXJyb3JIYW5kbGVyLnBhcnNlSHR0cEVycm9yKGVycm9yKSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9