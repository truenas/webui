1eb0d06ec526b740274ec50918e2608b
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockAuthService = void 0;
const core_1 = require("@angular/core");
const rxjs_1 = require("rxjs");
const auth_service_1 = require("app/services/auth/auth.service");
let MockAuthService = class MockAuthService extends auth_service_1.AuthService {
    constructor() {
        super(...arguments);
        this.refreshUser = jest.fn(() => (0, rxjs_1.of)(null));
    }
    setUser(user) {
        this.loggedInUser$.next(user);
    }
    setRoles(roles) {
        const currentUser = this.loggedInUser$.getValue();
        this.loggedInUser$.next(Object.assign(Object.assign({}, currentUser), { privilege: Object.assign(Object.assign({}, currentUser.privilege), { roles: {
                    $set: roles,
                } }) }));
    }
};
exports.MockAuthService = MockAuthService;
exports.MockAuthService = MockAuthService = __decorate([
    (0, core_1.Injectable)()
], MockAuthService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2NvcmUvdGVzdGluZy9jbGFzc2VzL21vY2stYXV0aC5zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQUEyQztBQUMzQywrQkFBMEI7QUFHMUIsaUVBQTZEO0FBR3RELElBQU0sZUFBZSxHQUFyQixNQUFNLGVBQWdCLFNBQVEsMEJBQVc7SUFBekM7O1FBa0JJLGdCQUFXLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFBLFNBQUUsRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFsQkMsT0FBTyxDQUFDLElBQWtCO1FBQ3hCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBYTtRQUNwQixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2xELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxpQ0FDbEIsV0FBVyxLQUNkLFNBQVMsa0NBQ0osV0FBVyxDQUFDLFNBQVMsS0FDeEIsS0FBSyxFQUFFO29CQUNMLElBQUksRUFBRSxLQUFLO2lCQUNaLE9BRUgsQ0FBQztJQUNMLENBQUM7Q0FHRixDQUFBO0FBbkJZLDBDQUFlOzBCQUFmLGVBQWU7SUFEM0IsSUFBQSxpQkFBVSxHQUFFO0dBQ0EsZUFBZSxDQW1CM0IiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2NvcmUvdGVzdGluZy9jbGFzc2VzL21vY2stYXV0aC5zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBSb2xlIH0gZnJvbSAnYXBwL2VudW1zL3JvbGUuZW51bSc7XG5pbXBvcnQgeyBMb2dnZWRJblVzZXIgfSBmcm9tICdhcHAvaW50ZXJmYWNlcy9kcy1jYWNoZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICdhcHAvc2VydmljZXMvYXV0aC9hdXRoLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTW9ja0F1dGhTZXJ2aWNlIGV4dGVuZHMgQXV0aFNlcnZpY2Uge1xuICBzZXRVc2VyKHVzZXI6IExvZ2dlZEluVXNlcik6IHZvaWQge1xuICAgIHRoaXMubG9nZ2VkSW5Vc2VyJC5uZXh0KHVzZXIpO1xuICB9XG5cbiAgc2V0Um9sZXMocm9sZXM6IFJvbGVbXSk6IHZvaWQge1xuICAgIGNvbnN0IGN1cnJlbnRVc2VyID0gdGhpcy5sb2dnZWRJblVzZXIkLmdldFZhbHVlKCk7XG4gICAgdGhpcy5sb2dnZWRJblVzZXIkLm5leHQoe1xuICAgICAgLi4uY3VycmVudFVzZXIsXG4gICAgICBwcml2aWxlZ2U6IHtcbiAgICAgICAgLi4uY3VycmVudFVzZXIucHJpdmlsZWdlLFxuICAgICAgICByb2xlczoge1xuICAgICAgICAgICRzZXQ6IHJvbGVzLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuXG4gIG92ZXJyaWRlIHJlZnJlc2hVc2VyID0gamVzdC5mbigoKSA9PiBvZihudWxsKSk7XG59XG4iXSwidmVyc2lvbiI6M30=