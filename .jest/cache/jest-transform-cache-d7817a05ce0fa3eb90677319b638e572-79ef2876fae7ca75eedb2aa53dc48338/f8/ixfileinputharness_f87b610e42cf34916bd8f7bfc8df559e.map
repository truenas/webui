{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-file-input/ix-file-input.harness.ts","mappings":";;;;;;;;;;;;AAAA,kDAA8F;AAC9F,0DAAyE;AACzE,+BAAyC;AACzC,sGAAiG;AAEjG,kFAA8E;AAM9E,MAAa,kBAAmB,SAAQ,0BAAgB;IAAxD;;QAQE,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACpC,iBAAY,GAAG,4BAAY,CAAC;IAqC9B,CAAC;IA3CC,MAAM,CAAC,IAAI,CAAC,OAAkC;QAC5C,OAAO,IAAI,0BAAgB,CAAC,kBAAkB,EAAE,OAAO,CAAC;aACrD,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,0BAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IAC1H,CAAC;IAKK,cAAc;;YAClB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpC,OAAO,mCAAyB,CAAC,gBAAgB,CAAC,KAAK,CAAqB,CAAC;QAC/E,CAAC;KAAA;IAEK,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,iCAAc,CAAC,EAAE,CAAC;YAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;KAAA;IAEK,QAAQ;;YACZ,iBAAiB;YACjB,OAAO,IAAA,oBAAa,EAAC,IAAA,SAAE,EAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC;KAAA;IAEK,QAAQ,CAAC,KAAa;;YAC1B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAEhD,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;YAClC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE;gBACrC,KAAK,EAAE;oBACL,KAAK;iBACN;gBACD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;KAAA;IAEK,UAAU;;YACd,OAAO,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACzD,CAAC;KAAA;;AA7CH,gDA8CC;AA7CQ,+BAAY,GAAG,eAAe,AAAlB,CAAmB","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-file-input/ix-file-input.harness.ts"],"sourcesContent":["import { BaseHarnessFilters, ComponentHarness, HarnessPredicate } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { lastValueFrom, of } from 'rxjs';\nimport { IxLabelHarness } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.harness';\nimport { IxFormControlHarness } from 'app/modules/forms/ix-forms/interfaces/ix-form-control-harness.interface';\nimport { getErrorText } from 'app/modules/forms/ix-forms/utils/harness.utils';\n\nexport interface IxFileInputHarnessFilters extends BaseHarnessFilters {\n  label: string;\n}\n\nexport class IxFileInputHarness extends ComponentHarness implements IxFormControlHarness {\n  static hostSelector = 'ix-file-input';\n\n  static with(options: IxFileInputHarnessFilters): HarnessPredicate<IxFileInputHarness> {\n    return new HarnessPredicate(IxFileInputHarness, options)\n      .addOption('label', options.label, (harness, label) => HarnessPredicate.stringMatches(harness.getLabelText(), label));\n  }\n\n  getInput = this.locatorFor('input');\n  getErrorText = getErrorText;\n\n  async getNativeInput(): Promise<HTMLInputElement> {\n    const input = await this.getInput();\n    return TestbedHarnessEnvironment.getNativeElement(input) as HTMLInputElement;\n  }\n\n  async getLabelText(): Promise<string> {\n    const label = await this.locatorForOptional(IxLabelHarness)();\n    if (!label) {\n      return '';\n    }\n    return label.getLabel();\n  }\n\n  async getValue(): Promise<File[]> {\n    // Not supported.\n    return lastValueFrom(of([]));\n  }\n\n  async setValue(files: File[]): Promise<void> {\n    const nativeInput = await this.getNativeInput();\n\n    const event = new Event('change');\n    Object.defineProperty(event, 'target', {\n      value: {\n        files,\n      },\n      writable: true,\n    });\n\n    nativeInput.dispatchEvent(event);\n  }\n\n  async isDisabled(): Promise<boolean> {\n    return (await this.getInput()).getProperty('disabled');\n  }\n}\n"],"version":3}