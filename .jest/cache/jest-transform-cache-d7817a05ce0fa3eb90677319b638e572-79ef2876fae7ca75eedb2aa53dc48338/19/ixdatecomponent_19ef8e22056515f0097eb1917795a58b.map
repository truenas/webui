{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/pipes/ix-date/ix-date.component.ts","mappings":";;;;;;;;;AAAA,wCAA0E;AAC1E,uDAAuD;AACvD,8CAAsD;AACtD,6CAA6D;AAC7D,kGAA6F;AAC7F,gEAA4D;AAarD,IAAM,eAAe,GAArB,MAAM,eAAe;IAM1B,IAAI,WAAW;QACb,MAAM,GAAG,GAAG,IAAA,4BAAc,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACtD,OAAO,IAAA,4BAAc,EAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;IACtE,CAAC;IAED,YACU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAZtC,cAAS,GAAW,IAAI,CAAC,cAAc,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;QAcnE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACrD,CAAC;;AAnBU,0CAAe;;;;;mBAEzB,YAAK;;0BAFK,eAAe;IAX3B,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,SAAS;QACnB,6CAAuC;QACvC,UAAU,EAAE,IAAI;QAChB,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,OAAO,EAAE;YACP,oBAAU;YACV,sBAAe;YACf,yCAAkB;SACnB;KACF,CAAC;GACW,eAAe,CAoB3B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/pipes/ix-date/ix-date.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\nimport { FormatDateTimePipe } from 'app/modules/pipes/format-date-time/format-datetime.pipe';\nimport { LocaleService } from 'app/services/locale.service';\n\n@Component({\n  selector: 'ix-date',\n  templateUrl: './ix-date.component.html',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatTooltip,\n    TranslateModule,\n    FormatDateTimePipe,\n  ],\n})\nexport class IxDateComponent {\n  /** Date must be in browser timezone */\n  @Input() date: number | Date;\n  machineTimezone: string;\n  defaultTz: string = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  get machineTime(): Date {\n    const utc = zonedTimeToUtc(this.date, this.defaultTz);\n    return utcToZonedTime(utc, this.machineTimezone);\n  }\n\n  get isTimezoneDifference(): boolean {\n    return this.machineTime < this.date || this.machineTime > this.date;\n  }\n\n  constructor(\n    private localeService: LocaleService,\n  ) {\n    this.machineTimezone = this.localeService.timezone;\n  }\n}\n"],"version":3}