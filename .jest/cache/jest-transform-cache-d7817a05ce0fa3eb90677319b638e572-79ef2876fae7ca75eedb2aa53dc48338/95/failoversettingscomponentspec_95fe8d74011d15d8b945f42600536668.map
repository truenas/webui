{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/failover-settings/failover-settings.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/failover-settings/failover-settings.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { MatCheckboxHarness } from '@angular/material/checkbox/testing';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { of } from 'rxjs';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockCall, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { helptextSystemFailover } from 'app/helptext/system/failover';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxFormHarness } from 'app/modules/forms/ix-forms/testing/ix-form.harness';\nimport { SearchInput1Component } from 'app/modules/forms/search-input1/search-input1.component';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { FailoverSettingsComponent } from 'app/pages/system/failover-settings/failover-settings.component';\nimport { WebSocketConnectionService } from 'app/services/websocket-connection.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ndescribe('FailoverComponent', () => {\n  let spectator: Spectator<FailoverSettingsComponent>;\n  let loader: HarnessLoader;\n  let rootLoader: HarnessLoader;\n  let form: IxFormHarness;\n  const createComponent = createComponentFactory({\n    component: FailoverSettingsComponent,\n    imports: [\n      ReactiveFormsModule,\n      SearchInput1Component,\n    ],\n    providers: [\n      mockAuth(),\n      mockWebSocket([\n        mockCall('failover.update'),\n        mockCall('failover.sync_to_peer'),\n        mockCall('failover.sync_from_peer'),\n        mockCall('failover.config', {\n          id: 3,\n          master: true,\n          disabled: false,\n          timeout: 0,\n        }),\n      ]),\n      mockProvider(SnackbarService),\n      mockProvider(WebSocketConnectionService, {\n        isConnected$: of(true),\n      }),\n    ],\n  });\n\n  beforeEach(async () => {\n    spectator = createComponent();\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n    rootLoader = TestbedHarnessEnvironment.documentRootLoader(spectator.fixture);\n    form = await loader.getHarness(IxFormHarness);\n    jest.spyOn(spectator.inject(DialogService), 'confirm');\n  });\n\n  it('loads and shows current failover settings', async () => {\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('failover.config');\n    expect(await form.getValues()).toEqual({\n      'Disable Failover': false,\n      'Default TrueNAS controller': true,\n      'Network Timeout Before Initiating Failover': '0',\n    });\n  });\n\n  it('updates failover settings when form is submitted', async () => {\n    await form.fillForm({\n      'Network Timeout Before Initiating Failover': 20,\n    });\n\n    const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save' }));\n    await saveButton.click();\n\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('failover.update', [{\n      disabled: false,\n      master: true,\n      timeout: 20,\n    }]);\n  });\n\n  it('syncs to peer when Sync To Peer is pressed and confirmed', async () => {\n    const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Sync To Peer' }));\n    await saveButton.click();\n\n    const rebootCheckbox = await rootLoader.getHarness(MatCheckboxHarness.with({ label: 'Restart standby TrueNAS controller' }));\n    await rebootCheckbox.check();\n    const confirmCheckbox = await rootLoader.getHarness(MatCheckboxHarness.with({ label: 'Confirm' }));\n    await confirmCheckbox.check();\n\n    const proceedButton = await rootLoader.getHarness(MatButtonHarness.with({ text: 'Proceed' }));\n    await proceedButton.click();\n\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('failover.sync_to_peer', [{ reboot: true }]);\n    expect(spectator.inject(SnackbarService).success).toHaveBeenCalledWith(\n      helptextSystemFailover.confirm_dialogs.sync_to_message,\n    );\n  });\n\n  it('syncs from peer when Sync From Peer is pressed and confirmed', async () => {\n    const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Sync From Peer' }));\n    await saveButton.click();\n\n    const confirmCheckbox = await rootLoader.getHarness(MatCheckboxHarness.with({ label: 'Confirm' }));\n    await confirmCheckbox.check();\n\n    const proceedButton = await rootLoader.getHarness(MatButtonHarness.with({ text: 'Proceed' }));\n    await proceedButton.click();\n\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('failover.sync_from_peer');\n    expect(spectator.inject(SnackbarService).success).toHaveBeenCalledWith(\n      helptextSystemFailover.confirm_dialogs.sync_from_message,\n    );\n  });\n\n  it(`warns when Default TrueNAS controller checkbox is ticked off\n    and changes Save button to Save And Failover`, async () => {\n    await form.fillForm({\n      'Disable Failover': true,\n      'Default TrueNAS controller': false,\n    });\n\n    expect(spectator.inject(DialogService).confirm).toHaveBeenCalledWith(\n      expect.objectContaining({\n        title: helptextSystemFailover.master_dialog_title,\n        message: helptextSystemFailover.master_dialog_warning,\n      }),\n    );\n\n    const confirmCheckbox = await rootLoader.getHarness(MatCheckboxHarness.with({ label: 'Confirm' }));\n    await confirmCheckbox.check();\n\n    const proceedButton = await rootLoader.getHarness(MatButtonHarness.with({ text: 'Continue' }));\n    await proceedButton.click();\n\n    const saveButton = await loader.getHarness(MatButtonHarness.with({ text: 'Save And Failover' }));\n    expect(saveButton).toExist();\n  });\n});\n"],"version":3}