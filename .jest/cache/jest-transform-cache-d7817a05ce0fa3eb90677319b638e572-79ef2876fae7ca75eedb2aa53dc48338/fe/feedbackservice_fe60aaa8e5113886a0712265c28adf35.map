{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/feedback/services/feedback.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/feedback/services/feedback.service.ts"],"sourcesContent":["import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { Store, select } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from 'environments/environment';\nimport html2canvas, { Options } from 'html2canvas';\nimport {\n  Observable, combineLatest, filter, first, map, of, switchMap, forkJoin, throwError, EMPTY,\n} from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { TicketType } from 'app/enums/file-ticket.enum';\nimport { JobState } from 'app/enums/job-state.enum';\nimport { WINDOW } from 'app/helpers/window.helper';\nimport { helptextSystemSupport } from 'app/helptext/system/support';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { FileReviewComponent } from 'app/modules/feedback/components/file-review/file-review.component';\nimport { FileTicketComponent } from 'app/modules/feedback/components/file-ticket/file-ticket.component';\nimport { FileTicketLicensedComponent } from 'app/modules/feedback/components/file-ticket-licensed/file-ticket-licensed.component';\nimport {\n  AddReview, AttachmentAddedResponse, FeedbackEnvironment, ReviewAddedResponse,\n} from 'app/modules/feedback/interfaces/feedback.interface';\nimport {\n  CreateNewTicket,\n  NewTicketResponse,\n  SimilarIssue,\n} from 'app/modules/feedback/interfaces/file-ticket.interface';\nimport { SnackbarComponent } from 'app/modules/snackbar/components/snackbar/snackbar.component';\nimport { SentryService } from 'app/services/sentry.service';\nimport { SystemGeneralService } from 'app/services/system-general.service';\nimport { UploadService } from 'app/services/upload.service';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { AppState } from 'app/store';\nimport { SystemInfoState } from 'app/store/system-info/system-info.reducer';\nimport { selectSystemInfoState, waitForSystemInfo } from 'app/store/system-info/system-info.selectors';\n\ntype ReviewData = FileReviewComponent['form']['value'];\ntype TicketData = FileTicketComponent['form']['value'];\ntype TicketLicensedData = FileTicketLicensedComponent['form']['value'];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeedbackService {\n  private readonly hostname = 'https://feedback.ui.truenas.com';\n  private isFeedbackAllowed: boolean;\n\n  constructor(\n    private httpClient: HttpClient,\n    private ws: WebSocketService,\n    private store$: Store<AppState>,\n    private systemGeneralService: SystemGeneralService,\n    private sentryService: SentryService,\n    private fileUpload: UploadService,\n    private matSnackBar: MatSnackBar,\n    private translate: TranslateService,\n    private dialogService: DialogService,\n    @Inject(WINDOW) private window: Window,\n  ) {}\n\n  createReview(data: ReviewData): Observable<unknown> {\n    return this.prepareReview(data).pipe(\n      switchMap((review) => this.addReview(review)),\n      switchMap((response) => {\n        if (!response.success) {\n          return throwError(() => new Error(\n            this.translate.instant('An error occurred while sending the review. Please try again later.'),\n          ));\n        }\n\n        return of(response);\n      }),\n      switchMap((reviewAdded) => {\n        return this.addReviewAttachmentsIfNeeded(reviewAdded.review_id, data).pipe(\n          catchError(() => {\n            // Silently fail if attachments were not uploaded.\n            return EMPTY;\n          }),\n        );\n      }),\n    );\n  }\n\n  createTicket(token: string, type: TicketType, data: TicketData): Observable<NewTicketResponse> {\n    return this.prepareTicket(token, type, data).pipe(\n      switchMap((ticket) => this.addTicket(ticket)),\n      switchMap((createdTicket) => {\n        return this.addTicketAttachmentsIfNeeded(\n          createdTicket.ticket,\n          data,\n          token,\n        ).pipe(switchMap(() => of(createdTicket)));\n      }),\n    );\n  }\n\n  createTicketLicensed(data: TicketLicensedData): Observable<NewTicketResponse> {\n    return this.prepareTicketLicensed(data).pipe(\n      switchMap((ticket) => this.addTicket(ticket)),\n      switchMap((createdTicket) => {\n        return this.addTicketAttachmentsIfNeeded(\n          createdTicket.ticket,\n          data,\n        ).pipe(switchMap(() => of(createdTicket)));\n      }),\n    );\n  }\n\n  takeScreenshot(filename = `${Date.now()}.png`, type = 'image/png', options?: Partial<Options>): Observable<File> {\n    return new Observable((observer) => {\n      html2canvas(document.body, {\n        allowTaint: true,\n        useCORS: true,\n        imageTimeout: 0,\n        ignoreElements: (element) => element.classList.contains('cdk-overlay-container'),\n        ...options,\n      }).then((canvas) => {\n        canvas.toBlob((blob) => {\n          const file = new File([blob], filename, { type });\n          observer.next(file);\n          observer.complete();\n        }, type);\n      }).catch((error) => {\n        observer.error(error);\n      });\n    });\n  }\n\n  checkIfReviewAllowed(): Observable<boolean> {\n    if (this.isFeedbackAllowed !== undefined) {\n      return of(this.isFeedbackAllowed);\n    }\n    return combineLatest([\n      this.store$.pipe(waitForSystemInfo),\n      this.systemGeneralService.getProductType$,\n    ]).pipe(\n      first(),\n      switchMap(([systemInfo, productType]) => {\n        const params = new HttpParams()\n          .set('version', systemInfo.version)\n          .set('product_type', productType);\n\n        return this.httpClient\n          .get<{ value: boolean }>(`${this.hostname}/api/collect-blacklist/check/`, { params })\n          .pipe(\n            map((response) => {\n              this.isFeedbackAllowed = !response.value;\n              return !response.value;\n            }),\n            catchError(() => {\n              this.isFeedbackAllowed = false;\n              return of(false);\n            }),\n          );\n      }),\n    );\n  }\n\n  getSimilarIssues(query: string): Observable<SimilarIssue[]> {\n    return this.ws.call('support.similar_issues', [query]);\n  }\n\n  addDebugInfoToMessage(message: string): Observable<string> {\n    return this.sentryService.sessionId$.pipe(\n      take(1),\n      map((sessionId) => {\n        const sessionText = `Session ID: ${sessionId}`;\n        return [message, sessionText].join('\\n\\n');\n      }),\n    );\n  }\n\n  showTicketSuccessMsg(ticketUrl: string): MatSnackBarRef<SnackbarComponent> {\n    return this.matSnackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        message: this.translate.instant('Thank you. Ticket was submitted succesfully.'),\n        icon: 'check',\n        iconCssColor: 'var(--green)',\n        button: {\n          title: this.translate.instant('Open ticket'),\n          action: () => this.window.open(ticketUrl, '_blank'),\n        },\n      },\n      duration: 10000,\n    });\n  }\n\n  showFeedbackSuccessMsg(): MatSnackBarRef<SnackbarComponent> {\n    return this.matSnackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        message: this.translate.instant(\n          'Thank you for sharing your feedback with us! Your insights are valuable in helping us improve our product.',\n        ),\n        icon: 'check',\n        iconCssColor: 'var(--green)',\n      },\n    });\n  }\n\n  private addReview(body: AddReview): Observable<ReviewAddedResponse> {\n    return this.httpClient.post<ReviewAddedResponse>(`${this.hostname}/api/reviews/add/`, body);\n  }\n\n  private prepareReview(data: ReviewData): Observable<AddReview> {\n    return this.getSystemInfo().pipe(\n      map(([{ systemInfo, isIxHardware }, systemHostId]) => {\n        return {\n          host_u_id: systemHostId,\n          rating: data.rating,\n          message: data.message,\n          page: this.window.location.pathname,\n          user_agent: this.window.navigator.userAgent,\n          environment: environment.production ? FeedbackEnvironment.Production : FeedbackEnvironment.Development,\n          release: systemInfo.version,\n          product_type: this.systemGeneralService.getProductType(),\n          product_model: systemInfo.system_product && isIxHardware ? systemInfo.system_product : 'Generic',\n          extra: {},\n        };\n      }),\n    );\n  }\n\n  private addReviewAttachmentsIfNeeded(reviewId: number, data: ReviewData): Observable<unknown> {\n    const operations = [];\n\n    if (data.take_screenshot) {\n      operations.push(\n        this.takeScreenshot().pipe(\n          switchMap((file) => this.addReviewAttachment(reviewId, file)),\n        ),\n      );\n    }\n\n    if (data.attach_images && data.images?.length) {\n      operations.push(\n        ...data.images.map((image) => this.addReviewAttachment(reviewId, image)),\n      );\n    }\n\n    if (!operations.length) {\n      return of(undefined);\n    }\n\n    return forkJoin(operations);\n  }\n\n  private addReviewAttachment(reviewId: number, image: File): Observable<AttachmentAddedResponse> {\n    const formData = new FormData();\n    formData.append('image', image);\n\n    return this.httpClient.post<AttachmentAddedResponse>(\n      `${this.hostname}/api/reviews/${reviewId}/add-attachment/`,\n      formData,\n    );\n  }\n\n  private getSystemInfo(): Observable<[SystemInfoState, string]> {\n    return forkJoin([\n      this.store$.pipe(\n        select(selectSystemInfoState),\n        filter((systemInfoState) => Boolean(systemInfoState.systemInfo)),\n        take(1),\n      ),\n      this.ws.call('system.host_id'),\n    ]);\n  }\n\n  private addTicket(ticket: CreateNewTicket): Observable<NewTicketResponse> {\n    return this.ws.job('support.new_ticket', [ticket]).pipe(\n      filter((job) => job.state === JobState.Success),\n      map((job) => job.result),\n    );\n  }\n\n  private prepareTicket(token: string, type: TicketType, data: TicketData): Observable<CreateNewTicket> {\n    return this.addDebugInfoToMessage(data.message).pipe(\n      map((body) => ({\n        body,\n        token,\n        attach_debug: data.attach_debug,\n        type,\n        title: data.title,\n      })),\n    );\n  }\n\n  private prepareTicketLicensed(data: TicketLicensedData): Observable<CreateNewTicket> {\n    return this.addDebugInfoToMessage(data.message).pipe(\n      map((body) => ({\n        body,\n        name: data.name,\n        email: data.email,\n        phone: data.phone,\n        cc: data.cc,\n        environment: data.environment,\n        criticality: data.criticality,\n        category: data.category,\n        title: data.title,\n        attach_debug: data.attach_debug,\n      })),\n    );\n  }\n\n  private addTicketAttachmentsIfNeeded(\n    ticketId: number,\n    data: TicketData,\n    token?: string,\n  ): Observable<void> {\n    const takeScreenshot = data.take_screenshot;\n    const images = data.images;\n\n    // Make requests and map to boolean for successful uploads.\n    const requests = images.map((attachment) => {\n      return this.addTicketAttachment({ ticketId, attachment, token });\n    });\n\n    if (takeScreenshot) {\n      const takeScreenshotRequest$ = this.takeScreenshot().pipe(\n        switchMap((screenshot) => this.addTicketAttachment({ ticketId, attachment: screenshot, token })),\n      );\n      requests.push(takeScreenshotRequest$);\n    }\n\n    if (requests.length === 0) {\n      return of(undefined);\n    }\n\n    // TODO: Check what happens if more than 20 attachments are uploaded at the same time.\n    return forkJoin(requests).pipe(\n      switchMap((results) => {\n        const wereAllImagesUploaded = results.every(Boolean);\n        if (wereAllImagesUploaded) {\n          return of(undefined);\n        }\n\n        return throwError(() => new Error('Not all images were uploaded.'));\n      }),\n      catchError(() => {\n        // Do not fail if attachments were not uploaded.\n        this.dialogService.error({\n          title: this.translate.instant(helptextSystemSupport.attachmentsFailed.title),\n          message: this.translate.instant(helptextSystemSupport.attachmentsFailed.message),\n        });\n\n        return of(undefined);\n      }),\n    );\n  }\n\n  private addTicketAttachment({\n    ticketId,\n    attachment,\n    token,\n  }: {\n    ticketId: number;\n    attachment: File;\n    token?: string;\n  }): Observable<boolean> {\n    return this.fileUpload.upload({\n      file: attachment,\n      method: 'support.attach_ticket',\n      params: [{\n        token,\n        ticket: ticketId,\n        filename: attachment.name,\n      }],\n    }).pipe(\n      filter((event) => event instanceof HttpResponse),\n      take(1),\n      map(() => true),\n      catchError((error: unknown) => {\n        console.error(error);\n        return of(false);\n      }),\n    );\n  }\n}\n"],"version":3}