96a905de13cd5c72f168ef51f0d0ef8d
module.exports="@if (label || tooltip) {\n  <ix-label\n    [label]=\"label\"\n    [tooltip]=\"tooltip\"\n    [required]=\"required\"\n    [ixTestOverride]=\"controlDirective.name\"\n  ></ix-label>\n}\n\n<div\n  class=\"input-container\"\n  [class.disabled]=\"isDisabled\"\n  [class.readonly]=\"readonly\"\n>\n  @if (prefixIcon) {\n    <span class=\"prefix-icon\">\n      <ix-icon [name]=\"prefixIcon\"></ix-icon>\n    </span>\n  }\n  <input\n    #ixInput\n    #trigger=\"matAutocompleteTrigger\"\n    matInput\n    [class.prefix-padding]=\"prefixIcon\"\n    [class.password-field]=\"isPasswordField()\"\n    [class.has-reset-input-icon]=\"shouldShowResetInput()\"\n    [required]=\"required\"\n    [readonly]=\"readonly\"\n    [disabled]=\"isDisabled\"\n    [type]=\"getType()\"\n    [value]=\"formatted\"\n    [autocomplete]=\"autocomplete\"\n    [maxLength]=\"maxLength\"\n    [matAutocomplete]=\"auto\"\n    [placeholder]=\"placeholder\"\n    [ixTest]=\"controlDirective.name\"\n    [attr.aria-label]=\"label\"\n    (input)=\"input(ixInput)\"\n    (focus)=\"focus(ixInput)\"\n    (blur)=\"blurred()\"\n  />\n\n  @if (shouldShowResetInput()) {\n    <span class=\"reset-input\">\n      <ix-icon name=\"mdi-close-circle\" (click)=\"resetInput(ixInput)\"></ix-icon>\n    </span>\n  }\n\n  @if (type === 'password') {\n    <button\n      mat-icon-button\n      type=\"button\"\n      class=\"toggle_pw\"\n      [ixTest]=\"['toggle-password', controlDirective.name]\"\n      [attr.aria-label]=\"showPassword ? ('Hide Password' | translate) : ('Show Password' | translate)\"\n      (click)=\"onPasswordToggled()\"\n      (keydown.enter)=\"$event.stopPropagation()\"\n    >\n      @if (showPassword) {\n        <ix-icon\n          name=\"visibility\"\n          [matTooltip]=\"'Hide' | translate\"\n        ></ix-icon>\n      } @else {\n        <ix-icon\n          name=\"visibility_off\"\n          [matTooltip]=\"'Show' | translate\">\n        </ix-icon>\n      }\n    </button>\n  }\n\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"optionSelected($event.option.value)\">\n    @if (filteredOptions?.length) {\n      @for (option of filteredOptions; track option) {\n        <mat-option\n          class=\"option\"\n          [value]=\"option\"\n          [ixTest]=\"[controlDirective.name, option.value]\"\n        >\n          {{ option.label | translate }}\n        </mat-option>\n      }\n    }\n  </mat-autocomplete>\n</div>\n\n@if (invalid) {\n  <div>\n    <mat-error>\n      <div [innerHTML]=\"invalidMessage()\"></div>\n    </mat-error>\n  </div>\n}\n\n<ix-errors [control]=\"controlDirective.control\" [label]=\"label\"></ix-errors>\n\n@if (hint) {\n  <mat-hint>{{ hint }}</mat-hint>\n}\n"