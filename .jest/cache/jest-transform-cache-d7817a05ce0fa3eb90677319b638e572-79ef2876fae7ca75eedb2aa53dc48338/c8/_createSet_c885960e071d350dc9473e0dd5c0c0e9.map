{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_createSet.js","mappings":";;;;;AAAA,wDAA4B;AAC5B,wDAA6B;AAC7B,sEAA0C;AAE1C,yDAAyD;AACzD,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;AAErB;;;;;;GAMG;AACH,IAAI,SAAS,GAAG,CAAC,CAAC,iBAAG,IAAI,CAAC,CAAC,GAAG,IAAA,wBAAU,EAAC,IAAI,iBAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAI,CAAC,CAAC,CAAC,UAAS,MAAM;IAChG,OAAO,IAAI,iBAAG,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_createSet.js"],"sourcesContent":["import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n"],"version":3}