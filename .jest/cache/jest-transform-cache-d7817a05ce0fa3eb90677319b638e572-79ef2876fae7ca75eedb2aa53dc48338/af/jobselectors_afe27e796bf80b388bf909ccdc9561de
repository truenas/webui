68b4370a6ee1f13d25f2daa8993da021
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectUpdateJobForPassiveNode = exports.selectUpdateJobForActiveNode = exports.selectUpdateJob = exports.selectJobsPanelSlice = exports.selectWaitingJobsCount = exports.selectFailedJobsCount = exports.selectRunningJobsCount = exports.selectWaitingJobs = exports.selectFailedJobs = exports.selectRunningJobs = exports.selectIsJobPanelOpen = exports.selectJob = exports.selectAllNonTransientJobs = exports.selectJobs = exports.selectJobState = exports.jobStateKey = void 0;
const store_1 = require("@ngrx/store");
const job_state_enum_1 = require("app/enums/job-state.enum");
const job_reducer_1 = require("app/modules/jobs/store/job.reducer");
exports.jobStateKey = 'jobs';
exports.selectJobState = (0, store_1.createFeatureSelector)(exports.jobStateKey);
const { selectAll } = job_reducer_1.adapter.getSelectors();
exports.selectJobs = (0, store_1.createSelector)(exports.selectJobState, selectAll);
exports.selectAllNonTransientJobs = (0, store_1.createSelector)(exports.selectJobs, (jobs) => jobs.filter((job) => !job.transient));
/**
 * Simply selects a job.
 * By default, observable will not complete when job completes, nor will it throw on job failure.
 *
 * If you need this behaviour, add extra `observeJob()` operator after `select()`.
 */
const selectJob = (id) => (0, store_1.createSelector)(exports.selectJobs, (jobs) => jobs.find((job) => job.id === id));
exports.selectJob = selectJob;
exports.selectIsJobPanelOpen = (0, store_1.createSelector)(exports.selectJobState, (state) => state.isPanelOpen);
exports.selectRunningJobs = (0, store_1.createSelector)(exports.selectAllNonTransientJobs, (jobs) => jobs.filter((job) => job.state === job_state_enum_1.JobState.Running));
exports.selectFailedJobs = (0, store_1.createSelector)(exports.selectAllNonTransientJobs, (jobs) => jobs.filter((job) => job.state === job_state_enum_1.JobState.Failed));
exports.selectWaitingJobs = (0, store_1.createSelector)(exports.selectAllNonTransientJobs, (jobs) => jobs.filter((job) => job.state === job_state_enum_1.JobState.Waiting));
exports.selectRunningJobsCount = (0, store_1.createSelector)(exports.selectRunningJobs, (jobs) => jobs.length);
exports.selectFailedJobsCount = (0, store_1.createSelector)(exports.selectFailedJobs, (jobs) => jobs.length);
exports.selectWaitingJobsCount = (0, store_1.createSelector)(exports.selectWaitingJobs, (jobs) => jobs.length);
exports.selectJobsPanelSlice = (0, store_1.createSelector)(exports.selectRunningJobs, exports.selectWaitingJobs, exports.selectFailedJobs, (runningJobs, waitingJobs, failedJobs) => [...runningJobs, ...waitingJobs, ...failedJobs]);
exports.selectUpdateJob = (0, store_1.createSelector)(exports.selectRunningJobs, (jobs) => jobs.filter((job) => job.method === 'update.update' || job.method === 'failover.upgrade'));
exports.selectUpdateJobForActiveNode = (0, store_1.createSelector)(exports.selectRunningJobs, (jobs) => jobs.find((job) => job.method === 'update.update'));
exports.selectUpdateJobForPassiveNode = (0, store_1.createSelector)(exports.selectRunningJobs, (jobs) => jobs.find((job) => job.method === 'failover.upgrade'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvam9icy9zdG9yZS9qb2Iuc2VsZWN0b3JzLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLHVDQUFzRjtBQUN0Riw2REFBb0Q7QUFFcEQsb0VBQXdFO0FBRTNELFFBQUEsV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUNyQixRQUFBLGNBQWMsR0FBRyxJQUFBLDZCQUFxQixFQUFZLG1CQUFXLENBQUMsQ0FBQztBQU01RSxNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcscUJBQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUVoQyxRQUFBLFVBQVUsR0FBRyxJQUFBLHNCQUFjLEVBQ3RDLHNCQUFjLEVBQ2QsU0FBUyxDQUNWLENBQUM7QUFFVyxRQUFBLHlCQUF5QixHQUFHLElBQUEsc0JBQWMsRUFDckQsa0JBQVUsRUFDVixDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQy9DLENBQUM7QUFFRjs7Ozs7R0FLRztBQUNJLE1BQU0sU0FBUyxHQUFHLENBQUMsRUFBVSxFQUFpQyxFQUFFLENBQUMsSUFBQSxzQkFBYyxFQUNwRixrQkFBVSxFQUNWLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUM1QyxDQUFDO0FBSFcsUUFBQSxTQUFTLGFBR3BCO0FBRVcsUUFBQSxvQkFBb0IsR0FBRyxJQUFBLHNCQUFjLEVBQ2hELHNCQUFjLEVBQ2QsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQzdCLENBQUM7QUFFVyxRQUFBLGlCQUFpQixHQUFHLElBQUEsc0JBQWMsRUFDN0MsaUNBQXlCLEVBQ3pCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxLQUFLLHlCQUFRLENBQUMsT0FBTyxDQUFDLENBQy9ELENBQUM7QUFFVyxRQUFBLGdCQUFnQixHQUFHLElBQUEsc0JBQWMsRUFDNUMsaUNBQXlCLEVBQ3pCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxLQUFLLHlCQUFRLENBQUMsTUFBTSxDQUFDLENBQzlELENBQUM7QUFFVyxRQUFBLGlCQUFpQixHQUFHLElBQUEsc0JBQWMsRUFDN0MsaUNBQXlCLEVBQ3pCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxLQUFLLHlCQUFRLENBQUMsT0FBTyxDQUFDLENBQy9ELENBQUM7QUFFVyxRQUFBLHNCQUFzQixHQUFHLElBQUEsc0JBQWMsRUFDbEQseUJBQWlCLEVBQ2pCLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUN0QixDQUFDO0FBRVcsUUFBQSxxQkFBcUIsR0FBRyxJQUFBLHNCQUFjLEVBQ2pELHdCQUFnQixFQUNoQixDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FDdEIsQ0FBQztBQUVXLFFBQUEsc0JBQXNCLEdBQUcsSUFBQSxzQkFBYyxFQUNsRCx5QkFBaUIsRUFDakIsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQ3RCLENBQUM7QUFFVyxRQUFBLG9CQUFvQixHQUFHLElBQUEsc0JBQWMsRUFDaEQseUJBQWlCLEVBQ2pCLHlCQUFpQixFQUNqQix3QkFBZ0IsRUFDaEIsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLFdBQVcsRUFBRSxHQUFHLFdBQVcsRUFBRSxHQUFHLFVBQVUsQ0FBQyxDQUMxRixDQUFDO0FBRVcsUUFBQSxlQUFlLEdBQUcsSUFBQSxzQkFBYyxFQUMzQyx5QkFBaUIsRUFDakIsQ0FBQyxJQUFXLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEtBQUssZUFBZSxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssa0JBQWtCLENBQUMsQ0FDM0csQ0FBQztBQUVXLFFBQUEsNEJBQTRCLEdBQUcsSUFBQSxzQkFBYyxFQUN4RCx5QkFBaUIsRUFDakIsQ0FBQyxJQUFXLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLENBQ3BFLENBQUM7QUFFVyxRQUFBLDZCQUE2QixHQUFHLElBQUEsc0JBQWMsRUFDekQseUJBQWlCLEVBQ2pCLENBQUMsSUFBVyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxLQUFLLGtCQUFrQixDQUFDLENBQ3ZFLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvam9icy9zdG9yZS9qb2Iuc2VsZWN0b3JzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUZlYXR1cmVTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3IsIE1lbW9pemVkU2VsZWN0b3IgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBKb2JTdGF0ZSB9IGZyb20gJ2FwcC9lbnVtcy9qb2Itc3RhdGUuZW51bSc7XG5pbXBvcnQgeyBKb2IgfSBmcm9tICdhcHAvaW50ZXJmYWNlcy9qb2IuaW50ZXJmYWNlJztcbmltcG9ydCB7IGFkYXB0ZXIsIEpvYnNTdGF0ZSB9IGZyb20gJ2FwcC9tb2R1bGVzL2pvYnMvc3RvcmUvam9iLnJlZHVjZXInO1xuXG5leHBvcnQgY29uc3Qgam9iU3RhdGVLZXkgPSAnam9icyc7XG5leHBvcnQgY29uc3Qgc2VsZWN0Sm9iU3RhdGUgPSBjcmVhdGVGZWF0dXJlU2VsZWN0b3I8Sm9ic1N0YXRlPihqb2JTdGF0ZUtleSk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSm9iU2xpY2Uge1xuICBbam9iU3RhdGVLZXldOiBKb2JzU3RhdGU7XG59XG5cbmNvbnN0IHsgc2VsZWN0QWxsIH0gPSBhZGFwdGVyLmdldFNlbGVjdG9ycygpO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0Sm9icyA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RKb2JTdGF0ZSxcbiAgc2VsZWN0QWxsLFxuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdEFsbE5vblRyYW5zaWVudEpvYnMgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0Sm9icyxcbiAgKGpvYnMpID0+IGpvYnMuZmlsdGVyKChqb2IpID0+ICFqb2IudHJhbnNpZW50KSxcbik7XG5cbi8qKlxuICogU2ltcGx5IHNlbGVjdHMgYSBqb2IuXG4gKiBCeSBkZWZhdWx0LCBvYnNlcnZhYmxlIHdpbGwgbm90IGNvbXBsZXRlIHdoZW4gam9iIGNvbXBsZXRlcywgbm9yIHdpbGwgaXQgdGhyb3cgb24gam9iIGZhaWx1cmUuXG4gKlxuICogSWYgeW91IG5lZWQgdGhpcyBiZWhhdmlvdXIsIGFkZCBleHRyYSBgb2JzZXJ2ZUpvYigpYCBvcGVyYXRvciBhZnRlciBgc2VsZWN0KClgLlxuICovXG5leHBvcnQgY29uc3Qgc2VsZWN0Sm9iID0gKGlkOiBudW1iZXIpOiBNZW1vaXplZFNlbGVjdG9yPG9iamVjdCwgSm9iPiA9PiBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0Sm9icyxcbiAgKGpvYnMpID0+IGpvYnMuZmluZCgoam9iKSA9PiBqb2IuaWQgPT09IGlkKSxcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RJc0pvYlBhbmVsT3BlbiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RKb2JTdGF0ZSxcbiAgKHN0YXRlKSA9PiBzdGF0ZS5pc1BhbmVsT3Blbixcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RSdW5uaW5nSm9icyA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RBbGxOb25UcmFuc2llbnRKb2JzLFxuICAoam9icykgPT4gam9icy5maWx0ZXIoKGpvYikgPT4gam9iLnN0YXRlID09PSBKb2JTdGF0ZS5SdW5uaW5nKSxcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RGYWlsZWRKb2JzID0gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdEFsbE5vblRyYW5zaWVudEpvYnMsXG4gIChqb2JzKSA9PiBqb2JzLmZpbHRlcigoam9iKSA9PiBqb2Iuc3RhdGUgPT09IEpvYlN0YXRlLkZhaWxlZCksXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0V2FpdGluZ0pvYnMgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0QWxsTm9uVHJhbnNpZW50Sm9icyxcbiAgKGpvYnMpID0+IGpvYnMuZmlsdGVyKChqb2IpID0+IGpvYi5zdGF0ZSA9PT0gSm9iU3RhdGUuV2FpdGluZyksXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0UnVubmluZ0pvYnNDb3VudCA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RSdW5uaW5nSm9icyxcbiAgKGpvYnMpID0+IGpvYnMubGVuZ3RoLFxuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdEZhaWxlZEpvYnNDb3VudCA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RGYWlsZWRKb2JzLFxuICAoam9icykgPT4gam9icy5sZW5ndGgsXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0V2FpdGluZ0pvYnNDb3VudCA9IGNyZWF0ZVNlbGVjdG9yKFxuICBzZWxlY3RXYWl0aW5nSm9icyxcbiAgKGpvYnMpID0+IGpvYnMubGVuZ3RoLFxuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdEpvYnNQYW5lbFNsaWNlID0gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFJ1bm5pbmdKb2JzLFxuICBzZWxlY3RXYWl0aW5nSm9icyxcbiAgc2VsZWN0RmFpbGVkSm9icyxcbiAgKHJ1bm5pbmdKb2JzLCB3YWl0aW5nSm9icywgZmFpbGVkSm9icykgPT4gWy4uLnJ1bm5pbmdKb2JzLCAuLi53YWl0aW5nSm9icywgLi4uZmFpbGVkSm9ic10sXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0VXBkYXRlSm9iID0gY3JlYXRlU2VsZWN0b3IoXG4gIHNlbGVjdFJ1bm5pbmdKb2JzLFxuICAoam9iczogSm9iW10pID0+IGpvYnMuZmlsdGVyKChqb2IpID0+IGpvYi5tZXRob2QgPT09ICd1cGRhdGUudXBkYXRlJyB8fCBqb2IubWV0aG9kID09PSAnZmFpbG92ZXIudXBncmFkZScpLFxuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdFVwZGF0ZUpvYkZvckFjdGl2ZU5vZGUgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0UnVubmluZ0pvYnMsXG4gIChqb2JzOiBKb2JbXSkgPT4gam9icy5maW5kKChqb2IpID0+IGpvYi5tZXRob2QgPT09ICd1cGRhdGUudXBkYXRlJyksXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0VXBkYXRlSm9iRm9yUGFzc2l2ZU5vZGUgPSBjcmVhdGVTZWxlY3RvcihcbiAgc2VsZWN0UnVubmluZ0pvYnMsXG4gIChqb2JzOiBKb2JbXSkgPT4gam9icy5maW5kKChqb2IpID0+IGpvYi5tZXRob2QgPT09ICdmYWlsb3Zlci51cGdyYWRlJyksXG4pO1xuIl0sInZlcnNpb24iOjN9