{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/empty/empty.component.ts","mappings":";;;;;;;;;AAAA,wCAA0E;AAC1E,qDAA2D;AAC3D,yEAA8E;AAC9E,8CAAsD;AACtD,qGAAgG;AAChG,+DAAsD;AAGtD,2EAA8E;AAC9E,6EAAwE;AACxE,uEAAmE;AAEnE,gCAAgC;AAgBzB,IAAM,cAAc,GAApB,MAAM,cAAc;IAIzB,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,2BAAS,CAAC,OAAO,CAAC;IAC9C,CAAC;IAED,OAAO;QACL,IAAI,IAAI,GAAG,IAAA,6BAAU,EAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC;aAAM,CAAC;YACN,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACvB,KAAK,2BAAS,CAAC,OAAO;oBACpB,IAAI,GAAG,IAAA,6BAAU,EAAC,iBAAiB,CAAC,CAAC;oBACrC,MAAM;gBACR,KAAK,2BAAS,CAAC,QAAQ;oBACrB,IAAI,GAAG,IAAA,6BAAU,EAAC,YAAY,CAAC,CAAC;oBAChC,MAAM;gBACR,KAAK,2BAAS,CAAC,UAAU;oBACvB,IAAI,GAAG,IAAA,6BAAU,EAAC,sBAAsB,CAAC,CAAC;oBAC1C,MAAM;gBACR,KAAK,2BAAS,CAAC,MAAM;oBACnB,IAAI,GAAG,IAAA,6BAAU,EAAC,mBAAmB,CAAC,CAAC;oBACvC,MAAM;gBACR,KAAK,2BAAS,CAAC,eAAe;oBAC5B,IAAI,GAAG,IAAA,6BAAU,EAAC,kBAAkB,CAAC,CAAC;oBACtC,MAAM;YACV,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;AAtCU,wCAAc;;mBACxB,YAAK;4BACL,YAAK;;yBAFK,cAAc;IAf1B,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,UAAU;QACpB,2CAAqC;QAErC,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,wBAAe;YACf,sBAAe;YACf,2CAAwB;YACxB,mCAAe;YACf,iDAAsB;YACtB,8BAAa;SACd;KACF,CAAC;GACW,cAAc,CAuC1B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/empty/empty.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { EmptyType } from 'app/enums/empty-type.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { EmptyConfig } from 'app/interfaces/empty-config.interface';\nimport { iconMarker, MarkedIcon } from 'app/modules/ix-icon/icon-marker.util';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n// TODO: Similar to ix-empty-row\n@Component({\n  selector: 'ix-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    TranslateModule,\n    MatProgressSpinnerModule,\n    IxIconComponent,\n    RequiresRolesDirective,\n    TestDirective,\n  ],\n})\nexport class EmptyComponent {\n  @Input() conf: EmptyConfig;\n  @Input() requiredRoles: Role[];\n\n  doAction(): void {\n    if (this.conf.button.action) {\n      this.conf.button.action();\n    }\n  }\n\n  get isLoading(): boolean {\n    return this.conf.type === EmptyType.Loading;\n  }\n\n  getIcon(): MarkedIcon {\n    let icon = iconMarker('ix-truenas-logo');\n    if (this.conf.icon) {\n      icon = this.conf.icon;\n    } else {\n      switch (this.conf.type) {\n        case EmptyType.Loading:\n          icon = iconMarker('ix-truenas-logo');\n          break;\n        case EmptyType.FirstUse:\n          icon = iconMarker('mdi-rocket');\n          break;\n        case EmptyType.NoPageData:\n          icon = iconMarker('mdi-format-list-text');\n          break;\n        case EmptyType.Errors:\n          icon = iconMarker('mdi-alert-octagon');\n          break;\n        case EmptyType.NoSearchResults:\n          icon = iconMarker('mdi-magnify-scan');\n          break;\n      }\n    }\n    return icon;\n  }\n}\n"],"version":3}