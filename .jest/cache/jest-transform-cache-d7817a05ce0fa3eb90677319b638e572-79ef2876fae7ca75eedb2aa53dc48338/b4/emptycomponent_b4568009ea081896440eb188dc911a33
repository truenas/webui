149d688ec7d395255b6e0bef855d0afc
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmptyComponent = void 0;
const core_1 = require("@angular/core");
const button_1 = require("@angular/material/button");
const progress_spinner_1 = require("@angular/material/progress-spinner");
const core_2 = require("@ngx-translate/core");
const requires_roles_directive_1 = require("app/directives/requires-roles/requires-roles.directive");
const empty_type_enum_1 = require("app/enums/empty-type.enum");
const icon_marker_util_1 = require("app/modules/ix-icon/icon-marker.util");
const ix_icon_component_1 = require("app/modules/ix-icon/ix-icon.component");
const test_directive_1 = require("app/modules/test-id/test.directive");
// TODO: Similar to ix-empty-row
let EmptyComponent = class EmptyComponent {
    doAction() {
        if (this.conf.button.action) {
            this.conf.button.action();
        }
    }
    get isLoading() {
        return this.conf.type === empty_type_enum_1.EmptyType.Loading;
    }
    getIcon() {
        let icon = (0, icon_marker_util_1.iconMarker)('ix-truenas-logo');
        if (this.conf.icon) {
            icon = this.conf.icon;
        }
        else {
            switch (this.conf.type) {
                case empty_type_enum_1.EmptyType.Loading:
                    icon = (0, icon_marker_util_1.iconMarker)('ix-truenas-logo');
                    break;
                case empty_type_enum_1.EmptyType.FirstUse:
                    icon = (0, icon_marker_util_1.iconMarker)('mdi-rocket');
                    break;
                case empty_type_enum_1.EmptyType.NoPageData:
                    icon = (0, icon_marker_util_1.iconMarker)('mdi-format-list-text');
                    break;
                case empty_type_enum_1.EmptyType.Errors:
                    icon = (0, icon_marker_util_1.iconMarker)('mdi-alert-octagon');
                    break;
                case empty_type_enum_1.EmptyType.NoSearchResults:
                    icon = (0, icon_marker_util_1.iconMarker)('mdi-magnify-scan');
                    break;
            }
        }
        return icon;
    }
};
exports.EmptyComponent = EmptyComponent;
EmptyComponent.propDecorators = {
    conf: [{ type: core_1.Input }],
    requiredRoles: [{ type: core_1.Input }]
};
exports.EmptyComponent = EmptyComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-empty',
        template: require("./empty.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            button_1.MatButtonModule,
            core_2.TranslateModule,
            progress_spinner_1.MatProgressSpinnerModule,
            ix_icon_component_1.IxIconComponent,
            requires_roles_directive_1.RequiresRolesDirective,
            test_directive_1.TestDirective,
        ],
    })
], EmptyComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZW1wdHkvZW1wdHkuY29tcG9uZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQUEwRTtBQUMxRSxxREFBMkQ7QUFDM0QseUVBQThFO0FBQzlFLDhDQUFzRDtBQUN0RCxxR0FBZ0c7QUFDaEcsK0RBQXNEO0FBR3RELDJFQUE4RTtBQUM5RSw2RUFBd0U7QUFDeEUsdUVBQW1FO0FBRW5FLGdDQUFnQztBQWdCekIsSUFBTSxjQUFjLEdBQXBCLE1BQU0sY0FBYztJQUl6QixRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUM1QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM1QixDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssMkJBQVMsQ0FBQyxPQUFPLENBQUM7SUFDOUMsQ0FBQztJQUVELE9BQU87UUFDTCxJQUFJLElBQUksR0FBRyxJQUFBLDZCQUFVLEVBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUN6QyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDbkIsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3hCLENBQUM7YUFBTSxDQUFDO1lBQ04sUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUN2QixLQUFLLDJCQUFTLENBQUMsT0FBTztvQkFDcEIsSUFBSSxHQUFHLElBQUEsNkJBQVUsRUFBQyxpQkFBaUIsQ0FBQyxDQUFDO29CQUNyQyxNQUFNO2dCQUNSLEtBQUssMkJBQVMsQ0FBQyxRQUFRO29CQUNyQixJQUFJLEdBQUcsSUFBQSw2QkFBVSxFQUFDLFlBQVksQ0FBQyxDQUFDO29CQUNoQyxNQUFNO2dCQUNSLEtBQUssMkJBQVMsQ0FBQyxVQUFVO29CQUN2QixJQUFJLEdBQUcsSUFBQSw2QkFBVSxFQUFDLHNCQUFzQixDQUFDLENBQUM7b0JBQzFDLE1BQU07Z0JBQ1IsS0FBSywyQkFBUyxDQUFDLE1BQU07b0JBQ25CLElBQUksR0FBRyxJQUFBLDZCQUFVLEVBQUMsbUJBQW1CLENBQUMsQ0FBQztvQkFDdkMsTUFBTTtnQkFDUixLQUFLLDJCQUFTLENBQUMsZUFBZTtvQkFDNUIsSUFBSSxHQUFHLElBQUEsNkJBQVUsRUFBQyxrQkFBa0IsQ0FBQyxDQUFDO29CQUN0QyxNQUFNO1lBQ1YsQ0FBQztRQUNILENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7O0FBdENVLHdDQUFjOzttQkFDeEIsWUFBSzs0QkFDTCxZQUFLOzt5QkFGSyxjQUFjO0lBZjFCLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSxVQUFVO1FBQ3BCLDJDQUFxQztRQUVyQyxlQUFlLEVBQUUsOEJBQXVCLENBQUMsTUFBTTtRQUMvQyxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUU7WUFDUCx3QkFBZTtZQUNmLHNCQUFlO1lBQ2YsMkNBQXdCO1lBQ3hCLG1DQUFlO1lBQ2YsaURBQXNCO1lBQ3RCLDhCQUFhO1NBQ2Q7S0FDRixDQUFDO0dBQ1csY0FBYyxDQXVDMUIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvZW1wdHkvZW1wdHkuY29tcG9uZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRCdXR0b25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xuaW1wb3J0IHsgTWF0UHJvZ3Jlc3NTcGlubmVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lcic7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IFJlcXVpcmVzUm9sZXNEaXJlY3RpdmUgfSBmcm9tICdhcHAvZGlyZWN0aXZlcy9yZXF1aXJlcy1yb2xlcy9yZXF1aXJlcy1yb2xlcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRW1wdHlUeXBlIH0gZnJvbSAnYXBwL2VudW1zL2VtcHR5LXR5cGUuZW51bSc7XG5pbXBvcnQgeyBSb2xlIH0gZnJvbSAnYXBwL2VudW1zL3JvbGUuZW51bSc7XG5pbXBvcnQgeyBFbXB0eUNvbmZpZyB9IGZyb20gJ2FwcC9pbnRlcmZhY2VzL2VtcHR5LWNvbmZpZy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgaWNvbk1hcmtlciwgTWFya2VkSWNvbiB9IGZyb20gJ2FwcC9tb2R1bGVzL2l4LWljb24vaWNvbi1tYXJrZXIudXRpbCc7XG5pbXBvcnQgeyBJeEljb25Db21wb25lbnQgfSBmcm9tICdhcHAvbW9kdWxlcy9peC1pY29uL2l4LWljb24uY29tcG9uZW50JztcbmltcG9ydCB7IFRlc3REaXJlY3RpdmUgfSBmcm9tICdhcHAvbW9kdWxlcy90ZXN0LWlkL3Rlc3QuZGlyZWN0aXZlJztcblxuLy8gVE9ETzogU2ltaWxhciB0byBpeC1lbXB0eS1yb3dcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l4LWVtcHR5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2VtcHR5LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZW1wdHkuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBNYXRCdXR0b25Nb2R1bGUsXG4gICAgVHJhbnNsYXRlTW9kdWxlLFxuICAgIE1hdFByb2dyZXNzU3Bpbm5lck1vZHVsZSxcbiAgICBJeEljb25Db21wb25lbnQsXG4gICAgUmVxdWlyZXNSb2xlc0RpcmVjdGl2ZSxcbiAgICBUZXN0RGlyZWN0aXZlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBFbXB0eUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGNvbmY6IEVtcHR5Q29uZmlnO1xuICBASW5wdXQoKSByZXF1aXJlZFJvbGVzOiBSb2xlW107XG5cbiAgZG9BY3Rpb24oKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY29uZi5idXR0b24uYWN0aW9uKSB7XG4gICAgICB0aGlzLmNvbmYuYnV0dG9uLmFjdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBpc0xvYWRpbmcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY29uZi50eXBlID09PSBFbXB0eVR5cGUuTG9hZGluZztcbiAgfVxuXG4gIGdldEljb24oKTogTWFya2VkSWNvbiB7XG4gICAgbGV0IGljb24gPSBpY29uTWFya2VyKCdpeC10cnVlbmFzLWxvZ28nKTtcbiAgICBpZiAodGhpcy5jb25mLmljb24pIHtcbiAgICAgIGljb24gPSB0aGlzLmNvbmYuaWNvbjtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpdGNoICh0aGlzLmNvbmYudHlwZSkge1xuICAgICAgICBjYXNlIEVtcHR5VHlwZS5Mb2FkaW5nOlxuICAgICAgICAgIGljb24gPSBpY29uTWFya2VyKCdpeC10cnVlbmFzLWxvZ28nKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBFbXB0eVR5cGUuRmlyc3RVc2U6XG4gICAgICAgICAgaWNvbiA9IGljb25NYXJrZXIoJ21kaS1yb2NrZXQnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBFbXB0eVR5cGUuTm9QYWdlRGF0YTpcbiAgICAgICAgICBpY29uID0gaWNvbk1hcmtlcignbWRpLWZvcm1hdC1saXN0LXRleHQnKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBFbXB0eVR5cGUuRXJyb3JzOlxuICAgICAgICAgIGljb24gPSBpY29uTWFya2VyKCdtZGktYWxlcnQtb2N0YWdvbicpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIEVtcHR5VHlwZS5Ob1NlYXJjaFJlc3VsdHM6XG4gICAgICAgICAgaWNvbiA9IGljb25NYXJrZXIoJ21kaS1tYWduaWZ5LXNjYW4nKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGljb247XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==