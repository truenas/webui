{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/dialog/components/confirm-dialog/confirm-dialog.component.ts","mappings":";;;;;;;;;AAAA,sDAAuD;AACvD,wCAGuB;AACvB,0CAAkE;AAClE,qDAAqD;AACrD,yDAA4E;AAC5E,qDAEkC;AAClC,8CAAwE;AACxE,sEAAyI;AACzI,sHAAiH;AACjH,uEAAmE;AAsB5D,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IAajC,YACU,SAA+C,EAC/C,SAA2B,EACV,OAA4C;QAF7D,cAAS,GAAT,SAAS,CAAsC;QAC/C,cAAS,GAAT,SAAS,CAAkB;QAZrC,oBAAe,GAAG,KAAK,CAAC;QACxB,+BAA0B,GAAG,KAAK,CAAC;QAElB,mBAAc,GAAG;YAChC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC;YAC9C,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC5C,YAAY,EAAE,KAAK;YACnB,wBAAwB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;SAC1C,CAAC;QAOlB,IAAI,CAAC,OAAO,mCAAQ,IAAI,CAAC,cAAc,GAAK,OAAO,CAAE,CAAC;QACtD,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,OAAO,CAAC,UAAU,CAAC;QACnD,CAAC;QAED,IAAI,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAC9B,4EAA4E;YAC5E,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;QACrC,CAAC;IACH,CAAC;IAED,YAAY,CAAC,IAAuB;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;IACtC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YAC/B,OAAO,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC7D,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB;YAC3C,CAAC,CAAC;gBACA,SAAS,EAAE,KAAK;gBAChB,iBAAiB,EAAE,IAAI,CAAC,0BAA0B;aACd;YACtC,CAAC,CAAC,KAAK,CAAC;QAEV,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB;YAC3C,CAAC,CAAC;gBACA,SAAS,EAAE,IAAI;gBACf,iBAAiB,EAAE,IAAI,CAAC,0BAA0B;aACd;YACtC,CAAC,CAAC,IAAI,CAAC;QAET,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;;AA5DU,wDAAsB;;;;yFAgB9B,aAAM,SAAC,wBAAe;;iCAhBd,sBAAsB;IApBlC,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,oDAA8C;QAE9C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,uBAAc;YACd,yBAAa;YACb,yBAAgB;YAChB,sBAAW;YACX,2BAAmB;YACnB,mBAAW;YACX,6CAAoB;YACpB,yBAAgB;YAChB,kBAAS;YACT,sBAAe;YACf,8BAAa;SACd;KACF,CAAC;GACW,sBAAsB,CA6DlC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/dialog/components/confirm-dialog/confirm-dialog.component.ts"],"sourcesContent":["import { CdkScrollable } from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  Component, Inject,\n} from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCheckboxChange, MatCheckbox } from '@angular/material/checkbox';\nimport {\n  MAT_DIALOG_DATA, MatDialogRef, MatDialogTitle, MatDialogContent, MatDialogActions,\n} from '@angular/material/dialog';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { ConfirmOptions, ConfirmOptionsWithSecondaryCheckbox, DialogWithSecondaryCheckboxResult } from 'app/interfaces/dialog.interface';\nimport { FormActionsComponent } from 'app/modules/forms/ix-forms/components/form-actions/form-actions.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@Component({\n  selector: 'ix-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    CdkScrollable,\n    MatDialogContent,\n    MatCheckbox,\n    ReactiveFormsModule,\n    FormsModule,\n    FormActionsComponent,\n    MatDialogActions,\n    MatButton,\n    TranslateModule,\n    TestDirective,\n  ],\n})\nexport class ConfirmDialogComponent {\n  options: ConfirmOptionsWithSecondaryCheckbox;\n\n  isSubmitEnabled = false;\n  isSecondaryCheckboxChecked = false;\n\n  private readonly defaultOptions = {\n    buttonText: this.translate.instant('Continue'),\n    cancelText: this.translate.instant('Cancel'),\n    hideCheckbox: false,\n    confirmationCheckboxText: this.translate.instant('Confirm'),\n  } as ConfirmOptions;\n\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    private translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) options: ConfirmOptionsWithSecondaryCheckbox,\n  ) {\n    this.options = { ...this.defaultOptions, ...options };\n    if (options.hideCancel) {\n      this.dialogRef.disableClose = options.hideCancel;\n    }\n\n    if (options.secondaryCheckbox) {\n      // Don't allow user to close via backdrop to ensure that object is returned.\n      this.dialogRef.disableClose = true;\n    }\n  }\n\n  toggleSubmit(data: MatCheckboxChange): void {\n    this.isSubmitEnabled = data.checked;\n  }\n\n  isDisabled(): boolean {\n    if (!this.options.hideCheckbox) {\n      return !this.isSubmitEnabled && !this.options.hideCheckbox;\n    }\n    return false;\n  }\n\n  onCancel(): void {\n    const result = this.options.secondaryCheckbox\n      ? {\n        confirmed: false,\n        secondaryCheckbox: this.isSecondaryCheckboxChecked,\n      } as DialogWithSecondaryCheckboxResult\n      : false;\n\n    this.dialogRef.close(result);\n  }\n\n  onSubmit(): void {\n    const result = this.options.secondaryCheckbox\n      ? {\n        confirmed: true,\n        secondaryCheckbox: this.isSecondaryCheckboxChecked,\n      } as DialogWithSecondaryCheckboxResult\n      : true;\n\n    this.dialogRef.close(result);\n  }\n}\n"],"version":3}