{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_shortOut.js","mappings":";;AAAA,qFAAqF;AACrF,IAAI,SAAS,GAAG,GAAG,EACf,QAAQ,GAAG,EAAE,CAAC;AAElB,wFAAwF;AACxF,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AAEzB;;;;;;;;GAQG;AACH,SAAS,QAAQ,CAAC,IAAI;IACpB,IAAI,KAAK,GAAG,CAAC,EACT,UAAU,GAAG,CAAC,CAAC;IAEnB,OAAO;QACL,IAAI,KAAK,GAAG,SAAS,EAAE,EACnB,SAAS,GAAG,QAAQ,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC;QAEhD,UAAU,GAAG,KAAK,CAAC;QACnB,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;YAClB,IAAI,EAAE,KAAK,IAAI,SAAS,EAAE,CAAC;gBACzB,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;aAAM,CAAC;YACN,KAAK,GAAG,CAAC,CAAC;QACZ,CAAC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAC1C,CAAC,CAAC;AACJ,CAAC;AAED,kBAAe,QAAQ,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_shortOut.js"],"sourcesContent":["/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n"],"version":3}