{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/layout/topbar/power-menu/power-menu.component.spec.ts","mappings":";;;;;;;;;;;AACA,0DAAyE;AACzE,4DAAgE;AAChE,4CAAyC;AACzC,iDAAyF;AACzF,+BAA0B;AAC1B,sEAAkE;AAClE,oGAA+F;AAC/F,iEAA6D;AAE7D,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,SAAwC,CAAC;IAC7C,IAAI,MAAqB,CAAC;IAC1B,IAAI,IAAoB,CAAC;IACzB,MAAM,eAAe,GAAG,IAAA,6BAAsB,EAAC;QAC7C,SAAS,EAAE,yCAAkB;QAC7B,SAAS,EAAE;YACT,IAAA,mBAAY,EAAC,0BAAW,EAAE;gBACxB,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,IAAI,CAAC,CAAC;aACjC,CAAC;YACF,IAAA,mBAAY,EAAC,8BAAa,EAAE;gBAC1B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,IAAI,CAAC,CAAC;aACjC,CAAC;YACF,IAAA,mBAAY,EAAC,eAAM,CAAC;SACrB;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAS,EAAE;QACpB,SAAS,GAAG,eAAe,EAAE,CAAC;QAC9B,MAAM,GAAG,mCAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC7D,IAAI,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,wBAAc,CAAC,CAAC;QAC/C,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,iEAAiE,EAAE,GAAS,EAAE;QAC/E,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAC1D,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAEzB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,8BAAa,CAAC,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAC3F,OAAO,EAAE,qBAAqB;SAC/B,CAAC,CAAC,CAAC;QACJ,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,eAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1H,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,GAAS,EAAE;QAClF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QAC7D,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAE1B,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,8BAAa,CAAC,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAC3F,OAAO,EAAE,uBAAuB;SACjC,CAAC,CAAC,CAAC;QACJ,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,eAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,wBAAwB,CAAC,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3H,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/layout/topbar/power-menu/power-menu.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { MatMenuHarness } from '@angular/material/menu/testing';\nimport { Router } from '@angular/router';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { of } from 'rxjs';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { PowerMenuComponent } from 'app/modules/layout/topbar/power-menu/power-menu.component';\nimport { AuthService } from 'app/services/auth/auth.service';\n\ndescribe('PowerMenuComponent', () => {\n  let spectator: Spectator<PowerMenuComponent>;\n  let loader: HarnessLoader;\n  let menu: MatMenuHarness;\n  const createComponent = createComponentFactory({\n    component: PowerMenuComponent,\n    providers: [\n      mockProvider(AuthService, {\n        hasRole: jest.fn(() => of(true)),\n      }),\n      mockProvider(DialogService, {\n        confirm: jest.fn(() => of(true)),\n      }),\n      mockProvider(Router),\n    ],\n  });\n\n  beforeEach(async () => {\n    spectator = createComponent();\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n    menu = await loader.getHarness(MatMenuHarness);\n    await menu.open();\n  });\n\n  it('has a Restart menu item that restarts system after confirmation', async () => {\n    const restart = await menu.getItems({ text: /Restart$/ });\n    await restart[0].click();\n\n    expect(spectator.inject(DialogService).confirm).toHaveBeenCalledWith(expect.objectContaining({\n      message: 'Restart the system?',\n    }));\n    expect(spectator.inject(Router).navigate).toHaveBeenCalledWith(['/system-tasks/restart'], { skipLocationChange: true });\n  });\n\n  it('has a Shutdown menu item that shuts down system after confirmation', async () => {\n    const shutdown = await menu.getItems({ text: /Shut Down$/ });\n    await shutdown[0].click();\n\n    expect(spectator.inject(DialogService).confirm).toHaveBeenCalledWith(expect.objectContaining({\n      message: 'Shut down the system?',\n    }));\n    expect(spectator.inject(Router).navigate).toHaveBeenCalledWith(['/system-tasks/shutdown'], { skipLocationChange: true });\n  });\n});\n"],"version":3}