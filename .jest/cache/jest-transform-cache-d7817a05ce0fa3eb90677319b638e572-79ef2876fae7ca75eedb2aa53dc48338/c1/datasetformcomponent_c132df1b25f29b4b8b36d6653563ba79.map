{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-form/dataset-form.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-form/dataset-form.component.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit, ViewChild,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  forkJoin, Observable, of, switchMap, map, combineLatest, filter, catchError,\n} from 'rxjs';\nimport { DatasetPreset } from 'app/enums/dataset.enum';\nimport { mntPath } from 'app/enums/mnt-path.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { ServiceName } from 'app/enums/service-name.enum';\nimport { helptextDatasetForm } from 'app/helptext/storage/volumes/datasets/dataset-form';\nimport { Dataset, DatasetCreate, DatasetUpdate } from 'app/interfaces/dataset.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport {\n  EncryptionSectionComponent,\n} from 'app/pages/datasets/components/dataset-form/sections/encryption-section/encryption-section.component';\nimport {\n  NameAndOptionsSectionComponent,\n} from 'app/pages/datasets/components/dataset-form/sections/name-and-options-section/name-and-options-section.component';\nimport {\n  OtherOptionsSectionComponent,\n} from 'app/pages/datasets/components/dataset-form/sections/other-options-section/other-options-section.component';\nimport {\n  QuotasSectionComponent,\n} from 'app/pages/datasets/components/dataset-form/sections/quotas-section/quotas-section.component';\nimport { DatasetFormService } from 'app/pages/datasets/components/dataset-form/utils/dataset-form.service';\nimport { getDatasetLabel } from 'app/pages/datasets/utils/dataset.utils';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { AppState } from 'app/store';\nimport { checkIfServiceIsEnabled } from 'app/store/services/services.actions';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-dataset-form',\n  templateUrl: './dataset-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatasetFormComponent implements OnInit, AfterViewInit {\n  @ViewChild(NameAndOptionsSectionComponent) nameAndOptionsSection: NameAndOptionsSectionComponent;\n  @ViewChild(EncryptionSectionComponent) encryptionSection: EncryptionSectionComponent;\n  @ViewChild(QuotasSectionComponent) quotasSection: QuotasSectionComponent;\n  @ViewChild(OtherOptionsSectionComponent) otherOptionsSection: OtherOptionsSectionComponent;\n\n  readonly requiredRoles = [Role.DatasetWrite];\n\n  isNameAndOptionsValid = true;\n  isQuotaValid = true;\n  isEncryptionValid = true;\n  isOtherOptionsValid = true;\n\n  isLoading = false;\n  isAdvancedMode = false;\n  datasetPreset = DatasetPreset.Generic;\n\n  form = new FormGroup({});\n\n  parentDataset: Dataset;\n  existingDataset: Dataset;\n\n  get areSubFormsValid(): boolean {\n    return this.isNameAndOptionsValid && this.isQuotaValid && this.isEncryptionValid && this.isNameAndOptionsValid;\n  }\n\n  get isNew(): boolean {\n    return !this.existingDataset;\n  }\n\n  get createSections(): [\n    NameAndOptionsSectionComponent,\n    EncryptionSectionComponent,\n    OtherOptionsSectionComponent,\n    QuotasSectionComponent?,\n  ] {\n    const sections: [\n      NameAndOptionsSectionComponent,\n      EncryptionSectionComponent,\n      OtherOptionsSectionComponent,\n      QuotasSectionComponent?,\n    ] = [\n      this.nameAndOptionsSection,\n      this.encryptionSection,\n      this.otherOptionsSection,\n    ];\n\n    if (this.isAdvancedMode) {\n      sections.push(this.quotasSection);\n    }\n\n    return sections;\n  }\n\n  get updateSections(): [NameAndOptionsSectionComponent, OtherOptionsSectionComponent] {\n    return [\n      this.nameAndOptionsSection,\n      this.otherOptionsSection,\n    ];\n  }\n\n  constructor(\n    private ws: WebSocketService,\n    private cdr: ChangeDetectorRef,\n    private dialog: DialogService,\n    private datasetFormService: DatasetFormService,\n    private router: Router,\n    private errorHandler: ErrorHandlerService,\n    private snackbar: SnackbarService,\n    private translate: TranslateService,\n    private slideInRef: IxSlideInRef<DatasetFormComponent>,\n    private store$: Store<AppState>,\n    @Inject(SLIDE_IN_DATA) private slideInData: { datasetId: string; isNew?: boolean },\n  ) {}\n\n  ngOnInit(): void {\n    if (this.slideInData?.datasetId && !this.slideInData?.isNew) {\n      this.setForEdit();\n    }\n    if (this.slideInData?.datasetId && this.slideInData?.isNew) {\n      this.setForNew();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.nameAndOptionsSection.form.controls.share_type.valueChanges\n      .pipe(untilDestroyed(this)).subscribe((datasetPreset) => {\n        this.datasetPreset = datasetPreset;\n      });\n  }\n\n  setForNew(): void {\n    this.isLoading = true;\n    this.cdr.markForCheck();\n\n    this.datasetFormService.checkAndWarnForLengthAndDepth(this.slideInData.datasetId).pipe(\n      filter(Boolean),\n      switchMap(() => this.datasetFormService.loadDataset(this.slideInData.datasetId)),\n      untilDestroyed(this),\n    ).subscribe({\n      next: (dataset) => {\n        this.parentDataset = dataset;\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.dialog.error(this.errorHandler.parseError(error));\n      },\n    });\n  }\n\n  setForEdit(): void {\n    const requests = [\n      this.datasetFormService.loadDataset(this.slideInData.datasetId),\n    ];\n\n    const parentId = this.slideInData.datasetId.split('/').slice(0, -1).join('/');\n    if (parentId) {\n      requests.push(this.datasetFormService.loadDataset(parentId));\n    }\n\n    this.isLoading = true;\n    this.cdr.markForCheck();\n\n    forkJoin(requests).pipe(untilDestroyed(this)).subscribe({\n      next: ([existingDataset, parent]) => {\n        this.existingDataset = existingDataset;\n        this.parentDataset = parent;\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.dialog.error(this.errorHandler.parseError(error));\n      },\n    });\n  }\n\n  toggleAdvancedMode(): void {\n    this.isAdvancedMode = !this.isAdvancedMode;\n    this.cdr.markForCheck();\n  }\n\n  onSwitchToAdvanced(): void {\n    this.isAdvancedMode = true;\n  }\n\n  onSubmit(): void {\n    this.isLoading = true;\n    this.cdr.markForCheck();\n\n    const payload = this.preparePayload();\n    const request$ = this.isNew\n      ? this.ws.call('pool.dataset.create', [payload as DatasetCreate])\n      : this.ws.call('pool.dataset.update', [this.existingDataset.id, payload as DatasetUpdate]);\n\n    request$.pipe(\n      switchMap((dataset) => this.createSmb(dataset)),\n      switchMap((dataset) => this.createNfs(dataset)),\n      switchMap((dataset) => {\n        return this.checkForAclOnParent().pipe(\n          switchMap((isAcl) => combineLatest([of(dataset), isAcl ? this.aclDialog() : of(false)])),\n        );\n      }),\n      untilDestroyed(this),\n    ).subscribe({\n      next: ([createdDataset, shouldGoToEditor]) => {\n        const datasetPresetFormValue = this.nameAndOptionsSection.datasetPresetForm.value;\n        if (this.nameAndOptionsSection.canCreateSmb && datasetPresetFormValue.create_smb) {\n          this.store$.dispatch(checkIfServiceIsEnabled({ serviceName: ServiceName.Cifs }));\n        }\n        if (this.nameAndOptionsSection.canCreateNfs && datasetPresetFormValue.create_nfs) {\n          this.store$.dispatch(checkIfServiceIsEnabled({ serviceName: ServiceName.Nfs }));\n        }\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.slideInRef.close(createdDataset);\n        if (shouldGoToEditor) {\n          this.router.navigate(['/', 'datasets', 'acl', 'edit'], {\n            queryParams: { path: createdDataset.mountpoint },\n          });\n        } else {\n          this.snackbar.success(\n            this.isNew\n              ? this.translate.instant('Switched to new dataset «{name}».', { name: getDatasetLabel(createdDataset) })\n              : this.translate.instant('Dataset «{name}» updated.', { name: getDatasetLabel(createdDataset) }),\n          );\n        }\n      },\n      error: (error) => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.dialog.error(this.errorHandler.parseError(error));\n      },\n    });\n  }\n\n  private preparePayload(): DatasetCreate | DatasetUpdate {\n    const sections: { getPayload: () => Partial<DatasetCreate> | Partial<DatasetUpdate> }[] = this.isNew\n      ? this.createSections\n      : this.updateSections;\n\n    return sections.reduce((payload, section) => {\n      return { ...payload, ...section.getPayload() } as DatasetCreate | DatasetUpdate;\n    }, {} as DatasetCreate | DatasetUpdate);\n  }\n\n  private checkForAclOnParent(): Observable<boolean> {\n    if (!this.parentDataset) {\n      return of(false);\n    }\n\n    const parentPath = `/mnt/${this.parentDataset.id}`;\n    return this.ws.call('filesystem.acl_is_trivial', [parentPath]).pipe(map((isTrivial) => !isTrivial));\n  }\n\n  private aclDialog(): Observable<boolean> {\n    return this.dialog.confirm({\n      title: helptextDatasetForm.afterSubmitDialog.title,\n      message: helptextDatasetForm.afterSubmitDialog.message,\n      hideCheckbox: true,\n      buttonText: helptextDatasetForm.afterSubmitDialog.actionBtn,\n      cancelText: helptextDatasetForm.afterSubmitDialog.cancelBtn,\n    });\n  }\n\n  private createSmb(dataset: Dataset): Observable<Dataset> {\n    const datasetPresetFormValue = this.nameAndOptionsSection.datasetPresetForm.value;\n    if (!this.isNew || !datasetPresetFormValue.create_smb || !this.nameAndOptionsSection.canCreateSmb) {\n      return of(dataset);\n    }\n    return this.ws.call('sharing.smb.create', [{\n      name: datasetPresetFormValue.smb_name,\n      path: `${mntPath}/${dataset.id}`,\n    }]).pipe(\n      switchMap(() => of(dataset)),\n      catchError((error) => this.rollBack(dataset, error)),\n    );\n  }\n\n  private createNfs(dataset: Dataset): Observable<Dataset> {\n    const datasetPresetFormValue = this.nameAndOptionsSection.datasetPresetForm.value;\n    if (!this.isNew || !datasetPresetFormValue.create_nfs || !this.nameAndOptionsSection.canCreateNfs) {\n      return of(dataset);\n    }\n    return this.ws.call('sharing.nfs.create', [{\n      path: `${mntPath}/${dataset.id}`,\n    }]).pipe(\n      switchMap(() => of(dataset)),\n      catchError((error) => this.rollBack(dataset, error)),\n    );\n  }\n\n  private rollBack(dataset: Dataset, error: unknown): Observable<Dataset> {\n    return this.ws.call('pool.dataset.delete', [dataset.id, { recursive: true, force: true }]).pipe(\n      switchMap(() => {\n        throw error;\n      }),\n    );\n  }\n}\n"],"version":3}