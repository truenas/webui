{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/services/update.service.ts","mappings":";;;;;;;;;AAAA,wCAA2C;AAC3C,yDAAqE;AACrE,+BAEc;AAGd,wDAA2D;AAMpD,IAAM,aAAa,GAAnB,MAAM,aAAa;IAWxB,YACU,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;QAX9B,sBAAiB,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QACxD,sBAAiB,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QACjD,WAAM,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QAC7C,wBAAmB,GAAG,IAAI,sBAAe,CAAS,SAAS,CAAC,CAAC;QAC7D,cAAS,GAAG,IAAI,sBAAe,CAAY,EAAE,CAAC,CAAC;QAC/C,YAAO,GAAG,IAAI,sBAAe,CAAqB,SAAS,CAAC,CAAC;QAC7D,qBAAgB,GAAG,IAAI,sBAAe,CAAS,EAAE,CAAC,CAAC;QACnD,eAAU,GAAG,IAAI,sBAAe,CAAS,EAAE,CAAC,CAAC;IAI1C,CAAC;IAEJ,cAAc;QACZ,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,IAAA,8BAAc,EAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YAClF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;AArBU,sCAAa;;;;wBAAb,aAAa;IAJzB,IAAA,4BAAY,GAAE;IACd,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,aAAa,CAsBzB","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/update/services/update.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport {\n  BehaviorSubject,\n} from 'rxjs';\nimport { SystemUpdateStatus } from 'app/enums/system-update.enum';\nimport { Package } from 'app/pages/system/update/interfaces/package.interface';\nimport { WebSocketService } from 'app/services/ws.service';\n\n@UntilDestroy()\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateService {\n  updatesAvailable$ = new BehaviorSubject<boolean>(false);\n  updateDownloaded$ = new BehaviorSubject<boolean>(false);\n  isLoading$ = new BehaviorSubject<boolean>(false);\n  error$ = new BehaviorSubject<boolean>(false);\n  generalUpdateError$ = new BehaviorSubject<string>(undefined);\n  packages$ = new BehaviorSubject<Package[]>([]);\n  status$ = new BehaviorSubject<SystemUpdateStatus>(undefined);\n  releaseNotesUrl$ = new BehaviorSubject<string>('');\n  changeLog$ = new BehaviorSubject<string>('');\n\n  constructor(\n    private ws: WebSocketService,\n  ) {}\n\n  pendingUpdates(): void {\n    this.ws.call('update.get_pending').pipe(untilDestroyed(this)).subscribe((pending) => {\n      if (pending.length !== 0) {\n        this.updateDownloaded$.next(true);\n      }\n    });\n  }\n}\n"],"version":3}