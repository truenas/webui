9bc8a6e5c5b3c14cc4300f954f77c19c
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxCellCheckboxComponent = void 0;
exports.checkboxColumn = checkboxColumn;
const core_1 = require("@angular/core");
const checkbox_1 = require("@angular/material/checkbox");
const core_2 = require("@ngx-translate/core");
const ix_header_cell_checkbox_component_1 = require("app/modules/ix-table/components/ix-table-head/head-cells/ix-header-cell-checkbox/ix-header-cell-checkbox.component");
const column_component_class_1 = require("app/modules/ix-table/interfaces/column-component.class");
const test_directive_1 = require("app/modules/test-id/test.directive");
let IxCellCheckboxComponent = class IxCellCheckboxComponent extends column_component_class_1.ColumnComponent {
    get checked() {
        return this.value;
    }
    onCheckboxChange(event) {
        this.onRowCheck(this.row(), event.checked);
    }
};
exports.IxCellCheckboxComponent = IxCellCheckboxComponent;
exports.IxCellCheckboxComponent = IxCellCheckboxComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-cell-checkbox',
        template: require("./ix-cell-checkbox.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            checkbox_1.MatCheckbox,
            core_2.TranslateModule,
            test_directive_1.TestDirective,
        ],
    })
], IxCellCheckboxComponent);
function checkboxColumn(options) {
    return Object.assign({ type: IxCellCheckboxComponent, headerType: ix_header_cell_checkbox_component_1.IxHeaderCellCheckboxComponent }, options);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvY29tcG9uZW50cy9peC10YWJsZS1ib2R5L2NlbGxzL2l4LWNlbGwtY2hlY2tib3gvaXgtY2VsbC1jaGVja2JveC5jb21wb25lbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBOEJBLHdDQUlDO0FBbENELHdDQUFtRTtBQUNuRSx5REFBNEU7QUFDNUUsOENBQXNEO0FBQ3RELDBLQUFtSztBQUNuSyxtR0FBaUc7QUFDakcsdUVBQW1FO0FBYTVELElBQU0sdUJBQXVCLEdBQTdCLE1BQU0sdUJBQTJCLFNBQVEsd0NBQWtCO0lBR2hFLElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLEtBQWdCLENBQUM7SUFDL0IsQ0FBQztJQUVELGdCQUFnQixDQUFDLEtBQXdCO1FBQ3ZDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDO0NBQ0YsQ0FBQTtBQVZZLDBEQUF1QjtrQ0FBdkIsdUJBQXVCO0lBWG5DLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSxrQkFBa0I7UUFDNUIsc0RBQWdEO1FBQ2hELGVBQWUsRUFBRSw4QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLE9BQU8sRUFBRTtZQUNQLHNCQUFXO1lBQ1gsc0JBQWU7WUFDZiw4QkFBYTtTQUNkO0tBQ0YsQ0FBQztHQUNXLHVCQUF1QixDQVVuQztBQUVELFNBQWdCLGNBQWMsQ0FDNUIsT0FBK0U7SUFFL0UsdUJBQVMsSUFBSSxFQUFFLHVCQUF1QixFQUFFLFVBQVUsRUFBRSxpRUFBNkIsSUFBSyxPQUFPLEVBQUc7QUFDbEcsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvbW9kdWxlcy9peC10YWJsZS9jb21wb25lbnRzL2l4LXRhYmxlLWJvZHkvY2VsbHMvaXgtY2VsbC1jaGVja2JveC9peC1jZWxsLWNoZWNrYm94LmNvbXBvbmVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRDaGVja2JveENoYW5nZSwgTWF0Q2hlY2tib3ggfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jaGVja2JveCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IEl4SGVhZGVyQ2VsbENoZWNrYm94Q29tcG9uZW50IH0gZnJvbSAnYXBwL21vZHVsZXMvaXgtdGFibGUvY29tcG9uZW50cy9peC10YWJsZS1oZWFkL2hlYWQtY2VsbHMvaXgtaGVhZGVyLWNlbGwtY2hlY2tib3gvaXgtaGVhZGVyLWNlbGwtY2hlY2tib3guY29tcG9uZW50JztcbmltcG9ydCB7IENvbHVtbkNvbXBvbmVudCwgQ29sdW1uIH0gZnJvbSAnYXBwL21vZHVsZXMvaXgtdGFibGUvaW50ZXJmYWNlcy9jb2x1bW4tY29tcG9uZW50LmNsYXNzJztcbmltcG9ydCB7IFRlc3REaXJlY3RpdmUgfSBmcm9tICdhcHAvbW9kdWxlcy90ZXN0LWlkL3Rlc3QuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaXgtY2VsbC1jaGVja2JveCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9peC1jZWxsLWNoZWNrYm94LmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBNYXRDaGVja2JveCxcbiAgICBUcmFuc2xhdGVNb2R1bGUsXG4gICAgVGVzdERpcmVjdGl2ZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgSXhDZWxsQ2hlY2tib3hDb21wb25lbnQ8VD4gZXh0ZW5kcyBDb2x1bW5Db21wb25lbnQ8VD4ge1xuICBvblJvd0NoZWNrOiAocm93OiBULCBjaGVja2VkOiBib29sZWFuKSA9PiB2b2lkO1xuXG4gIGdldCBjaGVja2VkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnZhbHVlIGFzIGJvb2xlYW47XG4gIH1cblxuICBvbkNoZWNrYm94Q2hhbmdlKGV2ZW50OiBNYXRDaGVja2JveENoYW5nZSk6IHZvaWQge1xuICAgIHRoaXMub25Sb3dDaGVjayh0aGlzLnJvdygpLCBldmVudC5jaGVja2VkKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tib3hDb2x1bW48VD4oXG4gIG9wdGlvbnM6IFBhcnRpYWw8SXhDZWxsQ2hlY2tib3hDb21wb25lbnQ8VD4gfCBJeEhlYWRlckNlbGxDaGVja2JveENvbXBvbmVudDxUPj4sXG4pOiBDb2x1bW48VCwgSXhDZWxsQ2hlY2tib3hDb21wb25lbnQ8VD4gfCBJeEhlYWRlckNlbGxDaGVja2JveENvbXBvbmVudDxUPj4ge1xuICByZXR1cm4geyB0eXBlOiBJeENlbGxDaGVja2JveENvbXBvbmVudCwgaGVhZGVyVHlwZTogSXhIZWFkZXJDZWxsQ2hlY2tib3hDb21wb25lbnQsIC4uLm9wdGlvbnMgfTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==