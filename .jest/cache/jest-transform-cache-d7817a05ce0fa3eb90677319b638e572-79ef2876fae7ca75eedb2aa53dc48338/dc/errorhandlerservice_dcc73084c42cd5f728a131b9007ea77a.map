{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/error-handler.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/error-handler.service.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as Sentry from '@sentry/angular';\nimport {\n  catchError, EMPTY, MonoTypeOperatorFunction, Observable,\n} from 'rxjs';\nimport { sentryCustomExceptionExtraction } from 'app/helpers/error-parser.helper';\nimport { isWebSocketError } from 'app/helpers/websocket.helper';\nimport { ErrorReport } from 'app/interfaces/error-report.interface';\nimport { Job } from 'app/interfaces/job.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  private dialogService: DialogService;\n  private translateService: TranslateService;\n  get translate(): TranslateService {\n    if (!this.translateService) {\n      this.translateService = this.injector.get(TranslateService);\n    }\n    return this.translateService;\n  }\n\n  get dialog(): DialogService {\n    if (!this.dialogService) {\n      this.dialogService = this.injector.get(DialogService);\n    }\n    return this.dialogService;\n  }\n\n  constructor(private injector: Injector) { }\n\n  handleError(error: unknown): void {\n    console.error(error);\n    const parsedError = this.parseError(error);\n    if (parsedError) {\n      error = parsedError;\n    }\n\n    if (!this.shouldLogToSentry(error)) {\n      return;\n    }\n\n    this.logToSentry(error);\n  }\n\n  parseError(error: unknown): ErrorReport | ErrorReport[] {\n    if (this.isWebSocketError(error)) {\n      return this.parseWsError(error);\n    }\n    if (this.isJobError(error)) {\n      return this.parseJobError(error);\n    }\n    if (this.isHttpError(error)) {\n      return this.parseHttpError(error);\n    }\n    if (error instanceof Error) {\n      return {\n        title: this.translate?.instant('Error') || 'Error',\n        message: error.message,\n      };\n    }\n\n    return null;\n  }\n\n  logToSentry(error: unknown): void {\n    Sentry.captureException(sentryCustomExceptionExtraction(error));\n  }\n\n  isWebSocketError(error: unknown): error is WebSocketError {\n    return isWebSocketError(error);\n  }\n\n  isJobError(obj: unknown): obj is Job {\n    return typeof obj === 'object'\n      && ('state' in obj\n        && 'error' in obj\n        && 'exception' in obj\n        && 'exc_info' in obj);\n  }\n\n  isHttpError(obj: unknown): obj is HttpErrorResponse {\n    return obj instanceof HttpErrorResponse;\n  }\n\n  catchError<T>(): MonoTypeOperatorFunction<T> {\n    return (source$: Observable<T>) => {\n      return source$.pipe(\n        catchError((error: unknown) => {\n          this.showErrorModal(error);\n          return EMPTY;\n        }),\n      );\n    };\n  }\n\n  showErrorModal(error: unknown): void {\n    this.dialog.error(this.parseError(error));\n  }\n\n  private parseWsError(error: WebSocketError): ErrorReport {\n    return {\n      title: error.type || error.trace?.class || this.translate.instant('Error'),\n      message: error.reason || error?.error?.toString(),\n      backtrace: error.trace?.formatted || '',\n    };\n  }\n\n  private parseJobError(failedJob: Job): ErrorReport | ErrorReport[] {\n    const errorJob = { ...failedJob };\n    if (errorJob.exc_info?.extra) {\n      errorJob.extra = errorJob.exc_info.extra as Record<string, unknown>;\n    }\n\n    if (errorJob.extra && Array.isArray(errorJob.extra)) {\n      return this.parseJobWithArrayExtra(errorJob);\n    }\n\n    return {\n      title: errorJob.state,\n      message: errorJob.error,\n      backtrace: errorJob.logs_excerpt || errorJob.exception,\n    };\n  }\n\n  private parseJobWithArrayExtra(errorJob: Job): ErrorReport[] {\n    const errors: ErrorReport[] = [];\n    (errorJob.extra as unknown as unknown[]).forEach((extraItem: [string, unknown]) => {\n      const field = extraItem[0].split('.')[1];\n      const extractedError = extraItem[1] as string | WebSocketError | Job;\n\n      const parsedError = this.parseJobExtractedError(errorJob, extractedError);\n\n      if (Array.isArray(parsedError)) {\n        for (const err of parsedError) {\n          if (err.title === (this.translate?.instant('Error') || 'Error')) {\n            err.title = err.title + ': ' + field;\n          } else {\n            err.title = field + ': ' + err.title;\n          }\n          errors.push(err);\n        }\n      } else {\n        if (parsedError.title === (this.translate?.instant('Error') || 'Error')) {\n          parsedError.title = parsedError.title + ': ' + field;\n        } else {\n          parsedError.title = field + ': ' + parsedError.title;\n        }\n        errors.push(parsedError);\n      }\n    });\n    return errors;\n  }\n\n  private parseJobExtractedError(\n    errorJob: Job,\n    extractedError: string | WebSocketError | Job,\n  ): ErrorReport | ErrorReport[] {\n    let parsedError: ErrorReport | ErrorReport[];\n    if (this.isWebSocketError(extractedError)) {\n      parsedError = this.parseWsError(extractedError);\n    } else if (this.isJobError(extractedError)) {\n      parsedError = this.parseJobError(extractedError);\n    } else if (typeof extractedError === 'string') {\n      parsedError = {\n        title: (this.translate?.instant('Error') || 'Error'),\n        message: extractedError,\n        backtrace: errorJob.logs_path || errorJob.exception,\n      };\n    }\n    return parsedError;\n  }\n\n  private parseHttpErrorObject(error: HttpErrorResponse): ErrorReport[] {\n    const errors: ErrorReport[] = [];\n    Object.keys(error.error as Record<string, string | string[]>).forEach((fieldKey) => {\n      const errorEntity = (error.error as Record<string, string | string[]>)[fieldKey];\n      if (typeof errorEntity === 'string') {\n        errors.push({\n          title: this.translate?.instant('Error') || 'Error',\n          message: errorEntity,\n        });\n      } else {\n        errorEntity.forEach((item: string) => {\n          errors.push({\n            title: this.translate?.instant('Error') || 'Error',\n            message: item,\n          });\n        });\n      }\n    });\n    return errors;\n  }\n\n  parseHttpError(error: HttpErrorResponse): ErrorReport | ErrorReport[] {\n    console.error(error);\n    switch (error.status) {\n      case 401:\n      case 403:\n      case 404: {\n        return {\n          title: error.statusText,\n          message: error.message,\n        };\n      }\n      case 409: {\n        return this.parseHttpErrorObject(error);\n      }\n      case 400: {\n        if (typeof error.error === 'object') {\n          return this.parseHttpErrorObject(error);\n        }\n        return {\n          title: this.translate?.instant('Error ({code})', { code: error.status })\n            || `Error (${error.status})`,\n          message: String(error.error),\n        };\n      }\n      case 500: {\n        const errorMessage = (error.error as Record<string, string>)?.error_message;\n        if (errorMessage) {\n          return {\n            title: this.translate?.instant('Error ({code})', { code: error.status })\n              || `Error (${error.status})`,\n            message: errorMessage,\n          };\n        }\n        return {\n          title: this.translate?.instant('Error ({code})', { code: error.status })\n            || `Error (${error.status})`,\n          message: this.translate?.instant('Server error: {error}', { error: error.message || error.error })\n            || `Server error: ${error.message || error.error}`,\n        };\n      }\n      default: {\n        return {\n          title: this.translate?.instant('Error ({code})', { code: error.status })\n            || `Error (${error.status})`,\n          message: error.message || this.translate?.instant('Fatal error! Check logs.') || 'Fatal error! Check logs.',\n        };\n      }\n    }\n  }\n\n  private shouldLogToSentry(error: unknown): boolean {\n    if (error instanceof CloseEvent) {\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"version":3}