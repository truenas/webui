{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-icon/icon-error-handler.service.ts","mappings":";;;;;;;;;AAAA,wCAAyD;AACzD,0DAAuD;AAEvD;;GAEG;AAII,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAClC,YACU,kBAAgC;QAAhC,uBAAkB,GAAlB,kBAAkB,CAAc;IACvC,CAAC;IAEJ,WAAW,CAAC,KAAc;QACxB,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,yBAAW,CAAC,UAAU,EAAE,CAAC;YACzG,KAAK,CAAC,OAAO,IAAI,sFAAsF,CAAC;QAC1G,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;;AAXU,0DAAuB;;;;kCAAvB,uBAAuB;IAHnC,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,uBAAuB,CAYnC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-icon/icon-error-handler.service.ts"],"sourcesContent":["import { ErrorHandler, Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\n\n/**\n * Special service to augment error message when an icon is not found.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconErrorHandlerService {\n  constructor(\n    private normalErrorHandler: ErrorHandler,\n  ) {}\n\n  handleError(error: unknown): void {\n    if (error instanceof Error && error.message.includes('Error retrieving icon') && !environment.production) {\n      error.message += '. Check spelling and re-run build or use `yarn icons` to include icon in the sprite.';\n    }\n\n    this.normalErrorHandler.handleError(error);\n  }\n}\n"],"version":3}