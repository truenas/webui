{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@ngrx/effects/fesm2022/ngrx-effects.mjs"],
  "sourcesContent": ["import * as i1 from 'rxjs';\nimport { merge, Observable, Subject, defer } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, Optional, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER } from '@angular/core';\nimport * as i3 from '@ngrx/store';\nimport { ScannedActionsSubject, createAction, ROOT_STORE_PROVIDER, FEATURE_STATE_PROVIDER, Store } from '@ngrx/store';\n\nconst DEFAULT_EFFECT_CONFIG = {\n    dispatch: true,\n    functional: false,\n    useEffectsErrorHandler: true,\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n *\n * Creates an effect from a source and an `EffectConfig`.\n *\n * @param source A function which returns an observable or observable factory.\n * @param config A `EffectConfig` to configure the effect. By default,\n * `dispatch` is true, `functional` is false, and `useEffectsErrorHandler` is\n * true.\n * @returns If `EffectConfig`#`functional` is true, returns the source function.\n * Else, returns the source function result. When `EffectConfig`#`dispatch` is\n * true, the source function result needs to be `Observable<Action>`.\n *\n * @usageNotes\n *\n * ### Class Effects\n *\n * ```ts\n * @Injectable()\n * export class FeatureEffects {\n *   // mapping to a different action\n *   readonly effect1$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionOne),\n *       map(() => FeatureActions.actionTwo())\n *     )\n *   );\n *\n *   // non-dispatching effect\n *   readonly effect2$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionTwo),\n *       tap(() => console.log('Action Two Dispatched'))\n *     ),\n *     { dispatch: false } // FeatureActions.actionTwo is not dispatched\n *   );\n *\n *   constructor(private readonly actions$: Actions) {}\n * }\n * ```\n *\n * ### Functional Effects\n *\n * ```ts\n * // mapping to a different action\n * export const loadUsers = createEffect(\n *   (actions$ = inject(Actions), usersService = inject(UsersService)) => {\n *     return actions$.pipe(\n *       ofType(UsersPageActions.opened),\n *       exhaustMap(() => {\n *         return usersService.getAll().pipe(\n *           map((users) => UsersApiActions.usersLoadedSuccess({ users })),\n *           catchError((error) =>\n *             of(UsersApiActions.usersLoadedFailure({ error }))\n *           )\n *         );\n *       })\n *     );\n *   },\n *   { functional: true }\n * );\n *\n * // non-dispatching functional effect\n * export const logDispatchedActions = createEffect(\n *   () => inject(Actions).pipe(tap(console.log)),\n *   { functional: true, dispatch: false }\n * );\n * ```\n */\nfunction createEffect(source, config = {}) {\n    const effect = config.functional ? source : source();\n    const value = {\n        ...DEFAULT_EFFECT_CONFIG,\n        ...config, // Overrides any defaults if values are provided\n    };\n    Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n        value,\n    });\n    return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n    const propertyNames = Object.getOwnPropertyNames(instance);\n    const metadata = propertyNames\n        .filter((propertyName) => {\n        if (instance[propertyName] &&\n            instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n            // If the property type has overridden `hasOwnProperty` we need to ensure\n            // that the metadata is valid (containing a `dispatch` property)\n            // https://github.com/ngrx/platform/issues/2975\n            const property = instance[propertyName];\n            return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n        }\n        return false;\n    })\n        .map((propertyName) => {\n        const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n        return {\n            propertyName,\n            ...metaData,\n        };\n    });\n    return metadata;\n}\n\nfunction getEffectsMetadata(instance) {\n    return getSourceMetadata(instance).reduce((acc, { propertyName, dispatch, useEffectsErrorHandler }) => {\n        acc[propertyName] = { dispatch, useEffectsErrorHandler };\n        return acc;\n    }, {});\n}\nfunction getSourceMetadata(instance) {\n    return getCreateEffectMetadata(instance);\n}\n\nfunction getSourceForInstance(instance) {\n    return Object.getPrototypeOf(instance);\n}\nfunction isClassInstance(obj) {\n    return (!!obj.constructor &&\n        obj.constructor.name !== 'Object' &&\n        obj.constructor.name !== 'Function');\n}\nfunction isClass(classOrRecord) {\n    return typeof classOrRecord === 'function';\n}\nfunction getClasses(classesAndRecords) {\n    return classesAndRecords.filter(isClass);\n}\nfunction isToken(tokenOrRecord) {\n    return tokenOrRecord instanceof InjectionToken || isClass(tokenOrRecord);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n    const source = getSourceForInstance(sourceInstance);\n    const isClassBasedEffect = !!source && source.constructor.name !== 'Object';\n    const sourceName = isClassBasedEffect ? source.constructor.name : null;\n    const observables$ = getSourceMetadata(sourceInstance).map(({ propertyName, dispatch, useEffectsErrorHandler, }) => {\n        const observable$ = typeof sourceInstance[propertyName] === 'function'\n            ? sourceInstance[propertyName]()\n            : sourceInstance[propertyName];\n        const effectAction$ = useEffectsErrorHandler\n            ? effectsErrorHandler(observable$, globalErrorHandler)\n            : observable$;\n        if (dispatch === false) {\n            return effectAction$.pipe(ignoreElements());\n        }\n        const materialized$ = effectAction$.pipe(materialize());\n        return materialized$.pipe(map((notification) => ({\n            effect: sourceInstance[propertyName],\n            notification,\n            propertyName,\n            sourceName,\n            sourceInstance,\n        })));\n    });\n    return merge(...observables$);\n}\n\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n    return observable$.pipe(catchError((error) => {\n        if (errorHandler)\n            errorHandler.handleError(error);\n        if (retryAttemptLeft <= 1) {\n            return observable$; // last attempt\n        }\n        // Return observable that produces this particular effect\n        return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n    }));\n}\n\nclass Actions extends Observable {\n    constructor(source) {\n        super();\n        if (source) {\n            this.source = source;\n        }\n    }\n    lift(operator) {\n        const observable = new Actions();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Actions, deps: [{ token: ScannedActionsSubject }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Actions, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: Actions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Observable, decorators: [{\n                    type: Inject,\n                    args: [ScannedActionsSubject]\n                }] }] });\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n *\n * @usageNotes\n *\n * Filter the Actions stream on the \"customers page loaded\" action\n *\n * ```ts\n * import { ofType } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  ofType(fromCustomers.pageLoaded)\n * )\n * ```\n */\nfunction ofType(...allowedTypes) {\n    return filter((action) => allowedTypes.some((typeOrActionCreator) => {\n        if (typeof typeOrActionCreator === 'string') {\n            // Comparing the string to type\n            return typeOrActionCreator === action.type;\n        }\n        // We are filtering by ActionCreator\n        return typeOrActionCreator.type === action.type;\n    }));\n}\n\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst _ROOT_EFFECTS_INSTANCES = new InjectionToken('@ngrx/effects Internal Root Effects Instances');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst _FEATURE_EFFECTS_INSTANCE_GROUPS = new InjectionToken('@ngrx/effects Internal Feature Effects Instance Groups');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler', { providedIn: 'root', factory: () => defaultEffectsErrorHandler });\n\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\n\nfunction reportInvalidActions(output, reporter) {\n    if (output.notification.kind === 'N') {\n        const action = output.notification.value;\n        const isInvalidAction = !isAction(action);\n        if (isInvalidAction) {\n            reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n        }\n    }\n}\nfunction isAction(action) {\n    return (typeof action !== 'function' &&\n        action &&\n        action.type &&\n        typeof action.type === 'string');\n}\nfunction getEffectName({ propertyName, sourceInstance, sourceName, }) {\n    const isMethod = typeof sourceInstance[propertyName] === 'function';\n    const isClassBasedEffect = !!sourceName;\n    return isClassBasedEffect\n        ? `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"`\n        : `\"${String(propertyName)}()\"`;\n}\nfunction stringify(action) {\n    try {\n        return JSON.stringify(action);\n    }\n    catch {\n        return action;\n    }\n}\n\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n    return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n    return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n    return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n    return (instance &&\n        functionName in instance &&\n        typeof instance[functionName] === 'function');\n}\n\nclass EffectSources extends Subject {\n    constructor(errorHandler, effectsErrorHandler) {\n        super();\n        this.errorHandler = errorHandler;\n        this.effectsErrorHandler = effectsErrorHandler;\n    }\n    addEffects(effectSourceInstance) {\n        this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n    toActions() {\n        return this.pipe(groupBy((effectsInstance) => isClassInstance(effectsInstance)\n            ? getSourceForInstance(effectsInstance)\n            : effectsInstance), mergeMap((source$) => {\n            return source$.pipe(groupBy(effectsInstance));\n        }), mergeMap((source$) => {\n            const effect$ = source$.pipe(exhaustMap((sourceInstance) => {\n                return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n            }), map((output) => {\n                reportInvalidActions(output, this.errorHandler);\n                return output.notification;\n            }), filter((notification) => notification.kind === 'N' && notification.value != null), dematerialize());\n            // start the stream with an INIT action\n            // do this only for the first Effect instance\n            const init$ = source$.pipe(take(1), filter(isOnInitEffects), map((instance) => instance.ngrxOnInitEffects()));\n            return merge(effect$, init$);\n        }));\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectSources, deps: [{ token: i0.ErrorHandler }, { token: EFFECTS_ERROR_HANDLER }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectSources, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectSources, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EFFECTS_ERROR_HANDLER]\n                }] }] });\nfunction effectsInstance(sourceInstance) {\n    if (isOnIdentifyEffects(sourceInstance)) {\n        return sourceInstance.ngrxOnIdentifyEffects();\n    }\n    return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n    return (sourceInstance) => {\n        const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n        if (isOnRunEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n        }\n        return mergedEffects$;\n    };\n}\n\nclass EffectsRunner {\n    get isStarted() {\n        return !!this.effectsSubscription;\n    }\n    constructor(effectSources, store) {\n        this.effectSources = effectSources;\n        this.store = store;\n        this.effectsSubscription = null;\n    }\n    start() {\n        if (!this.effectsSubscription) {\n            this.effectsSubscription = this.effectSources\n                .toActions()\n                .subscribe(this.store);\n        }\n    }\n    ngOnDestroy() {\n        if (this.effectsSubscription) {\n            this.effectsSubscription.unsubscribe();\n            this.effectsSubscription = null;\n        }\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRunner, deps: [{ token: EffectSources }, { token: i3.Store }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRunner, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRunner, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: EffectSources }, { type: i3.Store }] });\n\nclass EffectsRootModule {\n    constructor(sources, runner, store, rootEffectsInstances, storeRootModule, storeFeatureModule, guard) {\n        this.sources = sources;\n        runner.start();\n        for (const effectsInstance of rootEffectsInstances) {\n            sources.addEffects(effectsInstance);\n        }\n        store.dispatch({ type: ROOT_EFFECTS_INIT });\n    }\n    addEffects(effectsInstance) {\n        this.sources.addEffects(effectsInstance);\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRootModule, deps: [{ token: EffectSources }, { token: EffectsRunner }, { token: i3.Store }, { token: _ROOT_EFFECTS_INSTANCES }, { token: i3.StoreRootModule, optional: true }, { token: i3.StoreFeatureModule, optional: true }, { token: _ROOT_EFFECTS_GUARD, optional: true }], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRootModule }); }\n    /** @nocollapse */ static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRootModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: () => [{ type: EffectSources }, { type: EffectsRunner }, { type: i3.Store }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_ROOT_EFFECTS_INSTANCES]\n                }] }, { type: i3.StoreRootModule, decorators: [{\n                    type: Optional\n                }] }, { type: i3.StoreFeatureModule, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_EFFECTS_GUARD]\n                }] }] });\n\nclass EffectsFeatureModule {\n    constructor(effectsRootModule, effectsInstanceGroups, storeRootModule, storeFeatureModule) {\n        const effectsInstances = effectsInstanceGroups.flat();\n        for (const effectsInstance of effectsInstances) {\n            effectsRootModule.addEffects(effectsInstance);\n        }\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsFeatureModule, deps: [{ token: EffectsRootModule }, { token: _FEATURE_EFFECTS_INSTANCE_GROUPS }, { token: i3.StoreRootModule, optional: true }, { token: i3.StoreFeatureModule, optional: true }], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsFeatureModule }); }\n    /** @nocollapse */ static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsFeatureModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: () => [{ type: EffectsRootModule }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_FEATURE_EFFECTS_INSTANCE_GROUPS]\n                }] }, { type: i3.StoreRootModule, decorators: [{\n                    type: Optional\n                }] }, { type: i3.StoreFeatureModule, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass EffectsModule {\n    static forFeature(...featureEffects) {\n        const effects = featureEffects.flat();\n        const effectsClasses = getClasses(effects);\n        return {\n            ngModule: EffectsFeatureModule,\n            providers: [\n                effectsClasses,\n                {\n                    provide: _FEATURE_EFFECTS,\n                    multi: true,\n                    useValue: effects,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: _FEATURE_EFFECTS_INSTANCE_GROUPS,\n                    multi: true,\n                    useFactory: createEffectsInstances,\n                    deps: [_FEATURE_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    static forRoot(...rootEffects) {\n        const effects = rootEffects.flat();\n        const effectsClasses = getClasses(effects);\n        return {\n            ngModule: EffectsRootModule,\n            providers: [\n                effectsClasses,\n                {\n                    provide: _ROOT_EFFECTS,\n                    useValue: [effects],\n                },\n                {\n                    provide: _ROOT_EFFECTS_GUARD,\n                    useFactory: _provideForRootGuard,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: _ROOT_EFFECTS_INSTANCES,\n                    useFactory: createEffectsInstances,\n                    deps: [_ROOT_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    /** @nocollapse */ static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsModule }); }\n    /** @nocollapse */ static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: EffectsModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\nfunction createEffectsInstances(effectsGroups, userProvidedEffectsGroups) {\n    const effects = [];\n    for (const effectsGroup of effectsGroups) {\n        effects.push(...effectsGroup);\n    }\n    for (const userProvidedEffectsGroup of userProvidedEffectsGroups) {\n        effects.push(...userProvidedEffectsGroup);\n    }\n    return effects.map((effectsTokenOrRecord) => isToken(effectsTokenOrRecord)\n        ? inject(effectsTokenOrRecord)\n        : effectsTokenOrRecord);\n}\nfunction _provideForRootGuard() {\n    const runner = inject(EffectsRunner, { optional: true, skipSelf: true });\n    const rootEffects = inject(_ROOT_EFFECTS, { self: true });\n    // check whether any effects are actually passed\n    const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n    if (hasEffects && runner) {\n        throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\n/**\n * Wraps project fn with error handling making it safe to use in Effects.\n * Takes either a config with named properties that represent different possible\n * callbacks or project/error callbacks that are required.\n */\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n    const { project, error, complete, operator, unsubscribe } = typeof configOrProject === 'function'\n        ? {\n            project: configOrProject,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            error: errorFn,\n            operator: concatMap,\n            complete: undefined,\n            unsubscribe: undefined,\n        }\n        : { ...configOrProject, operator: configOrProject.operator || concatMap };\n    return (source) => defer(() => {\n        const subject = new Subject();\n        return merge(source.pipe(operator((input, index) => defer(() => {\n            let completed = false;\n            let errored = false;\n            let projectedCount = 0;\n            return project(input, index).pipe(materialize(), map((notification) => {\n                switch (notification.kind) {\n                    case 'E':\n                        errored = true;\n                        return {\n                            kind: 'N',\n                            value: error(notification.error, input),\n                        };\n                    case 'C':\n                        completed = true;\n                        return complete\n                            ? {\n                                kind: 'N',\n                                value: complete(projectedCount, input),\n                            }\n                            : undefined;\n                    default:\n                        ++projectedCount;\n                        return notification;\n                }\n            }), filter((n) => n != null), dematerialize(), finalize(() => {\n                if (!completed && !errored && unsubscribe) {\n                    subject.next(unsubscribe(projectedCount, input));\n                }\n            }));\n        }))), subject);\n    });\n}\n\n/**\n * @usageNotes\n *\n * ### Providing effects at the root level\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideEffects(RouterEffects)],\n * });\n * ```\n *\n * ### Providing effects at the feature level\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideEffects(BooksApiEffects)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideEffects(...effects) {\n    const effectsClassesAndRecords = effects.flat();\n    const effectsClasses = getClasses(effectsClassesAndRecords);\n    return makeEnvironmentProviders([\n        effectsClasses,\n        {\n            provide: ENVIRONMENT_INITIALIZER,\n            multi: true,\n            useValue: () => {\n                inject(ROOT_STORE_PROVIDER);\n                inject(FEATURE_STATE_PROVIDER, { optional: true });\n                const effectsRunner = inject(EffectsRunner);\n                const effectSources = inject(EffectSources);\n                const shouldInitEffects = !effectsRunner.isStarted;\n                if (shouldInitEffects) {\n                    effectsRunner.start();\n                }\n                for (const effectsClassOrRecord of effectsClassesAndRecords) {\n                    const effectsInstance = isClass(effectsClassOrRecord)\n                        ? inject(effectsClassOrRecord)\n                        : effectsClassOrRecord;\n                    effectSources.addEffects(effectsInstance);\n                }\n                if (shouldInitEffects) {\n                    const store = inject(Store);\n                    store.dispatch(rootEffectsInit());\n                }\n            },\n        },\n    ]);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, provideEffects, rootEffectsInit };\n//# sourceMappingURL=ngrx-effects.mjs.map\n"],
  "mappings": "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",
  "names": ["effectsInstance"]
}
