000a705943122792bb561c01ffc1caf6
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileTicketComponent = void 0;
const scrolling_1 = require("@angular/cdk/scrolling");
const core_1 = require("@angular/core");
const forms_1 = require("@angular/forms");
const dialog_1 = require("@angular/material/dialog");
const until_destroy_1 = require("@ngneat/until-destroy");
const core_2 = require("@ngx-translate/core");
const rxjs_1 = require("rxjs");
const bytes_constant_1 = require("app/constants/bytes.constant");
const file_ticket_enum_1 = require("app/enums/file-ticket.enum");
const support_1 = require("app/helptext/system/support");
const oauth_button_interface_1 = require("app/modules/buttons/oauth-button/interfaces/oauth-button.interface");
const oauth_button_module_1 = require("app/modules/buttons/oauth-button/oauth-button.module");
const similar_issues_component_1 = require("app/modules/feedback/components/similar-issues/similar-issues.component");
const feedback_interface_1 = require("app/modules/feedback/interfaces/feedback.interface");
const feedback_service_1 = require("app/modules/feedback/services/feedback.service");
const form_actions_component_1 = require("app/modules/forms/ix-forms/components/form-actions/form-actions.component");
const ix_checkbox_component_1 = require("app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component");
const ix_file_input_component_1 = require("app/modules/forms/ix-forms/components/ix-file-input/ix-file-input.component");
const ix_input_component_1 = require("app/modules/forms/ix-forms/components/ix-input/ix-input.component");
const ix_textarea_component_1 = require("app/modules/forms/ix-forms/components/ix-textarea/ix-textarea.component");
const form_error_handler_service_1 = require("app/modules/forms/ix-forms/services/form-error-handler.service");
const image_validator_service_1 = require("app/modules/forms/ix-forms/validators/image-validator/image-validator.service");
const ws_service_1 = require("app/services/ws.service");
const i0 = __importStar(require("@angular/core"));
let FileTicketComponent = class FileTicketComponent {
    get ticketType() {
        return this.type === feedback_interface_1.FeedbackType.Bug ? file_ticket_enum_1.TicketType.Bug : file_ticket_enum_1.TicketType.Suggestion;
    }
    constructor(formBuilder, feedbackService, imageValidator, formErrorHandler, ws) {
        this.formBuilder = formBuilder;
        this.feedbackService = feedbackService;
        this.imageValidator = imageValidator;
        this.formErrorHandler = formErrorHandler;
        this.ws = ws;
        this.isLoadingChange = (0, core_1.output)();
        this.form = this.formBuilder.group({
            title: ['', [forms_1.Validators.maxLength(200)]],
            message: ['', [forms_1.Validators.maxLength(20000)]],
            images: [[], []],
            attach_debug: [true],
            attach_images: [false],
            take_screenshot: [true],
        });
        this.OauthButtonType = oauth_button_interface_1.OauthButtonType;
        this.oauthUrl = 'https://support-proxy.ixsystems.com/oauth/initiate?origin=';
        this.messagePlaceholder = support_1.helptextSystemSupport.bug.message.placeholder;
        this.acceptedFiles = file_ticket_enum_1.ticketAcceptedFiles;
        this.tooltips = {
            title: support_1.helptextSystemSupport.title.tooltip,
            attach_debug: support_1.helptextSystemSupport.attach_debug.tooltip,
        };
        this.getSystemFileSizeLimit();
    }
    onSubmit(token) {
        this.isLoadingChange.emit(true);
        this.feedbackService.createTicket(token, this.ticketType, this.form.value).pipe((0, rxjs_1.finalize)(() => this.isLoadingChange.emit(false)), (0, until_destroy_1.untilDestroyed)(this)).subscribe({
            next: (createdTicket) => this.onSuccess(createdTicket.url),
            error: (error) => this.formErrorHandler.handleWsFormError(error, this.form),
        });
    }
    onSuccess(ticketUrl) {
        this.feedbackService.showTicketSuccessMsg(ticketUrl);
        this.dialogRef.close();
    }
    getSystemFileSizeLimit() {
        this.ws.call('support.attach_ticket_max_size').pipe((0, until_destroy_1.untilDestroyed)(this)).subscribe((size) => {
            this.form.controls.images.addAsyncValidators(this.imageValidator.getImagesValidator(size * bytes_constant_1.MiB));
            this.form.controls.images.updateValueAndValidity();
        });
    }
};
exports.FileTicketComponent = FileTicketComponent;
FileTicketComponent.ctorParameters = () => [
    { type: forms_1.FormBuilder },
    { type: feedback_service_1.FeedbackService },
    { type: image_validator_service_1.ImageValidatorService },
    { type: form_error_handler_service_1.FormErrorHandlerService },
    { type: ws_service_1.WebSocketService }
];
FileTicketComponent.propDecorators = {
    type: [{ type: core_1.Input }],
    dialogRef: [{ type: core_1.Input }],
    isLoading: [{ type: core_1.Input }],
    isLoadingChange: [{ type: i0.Output, args: ["isLoadingChange",] }]
};
exports.FileTicketComponent = FileTicketComponent = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Component)({
        selector: 'ix-file-ticket',
        template: require("./file-ticket.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            scrolling_1.CdkScrollable,
            dialog_1.MatDialogContent,
            forms_1.ReactiveFormsModule,
            ix_input_component_1.IxInputComponent,
            similar_issues_component_1.SimilarIssuesComponent,
            ix_textarea_component_1.IxTextareaComponent,
            ix_checkbox_component_1.IxCheckboxComponent,
            ix_file_input_component_1.IxFileInputComponent,
            dialog_1.MatDialogActions,
            form_actions_component_1.FormActionsComponent,
            oauth_button_module_1.OauthButtonModule,
            core_2.TranslateModule,
        ],
    })
], FileTicketComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,