{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/forEach.js","mappings":";;;;;AAAA,oEAAwC;AACxC,kEAAsC;AACtC,0EAA8C;AAC9C,8DAAmC;AAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,SAAS,OAAO,CAAC,UAAU,EAAE,QAAQ;IACnC,IAAI,IAAI,GAAG,IAAA,oBAAO,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC,uBAAS,CAAC,CAAC,CAAC,sBAAQ,CAAC;IACtD,OAAO,IAAI,CAAC,UAAU,EAAE,IAAA,0BAAY,EAAC,QAAQ,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/forEach.js"],"sourcesContent":["import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n"],"version":3}