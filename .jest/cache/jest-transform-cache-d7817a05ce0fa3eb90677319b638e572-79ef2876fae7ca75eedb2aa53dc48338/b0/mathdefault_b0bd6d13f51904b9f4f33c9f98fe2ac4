e7c09bcda3fb6025e53733ab7579bd38
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const add_js_1 = __importDefault(require("./add.js"));
const ceil_js_1 = __importDefault(require("./ceil.js"));
const divide_js_1 = __importDefault(require("./divide.js"));
const floor_js_1 = __importDefault(require("./floor.js"));
const max_js_1 = __importDefault(require("./max.js"));
const maxBy_js_1 = __importDefault(require("./maxBy.js"));
const mean_js_1 = __importDefault(require("./mean.js"));
const meanBy_js_1 = __importDefault(require("./meanBy.js"));
const min_js_1 = __importDefault(require("./min.js"));
const minBy_js_1 = __importDefault(require("./minBy.js"));
const multiply_js_1 = __importDefault(require("./multiply.js"));
const round_js_1 = __importDefault(require("./round.js"));
const subtract_js_1 = __importDefault(require("./subtract.js"));
const sum_js_1 = __importDefault(require("./sum.js"));
const sumBy_js_1 = __importDefault(require("./sumBy.js"));
exports.default = {
    add: add_js_1.default, ceil: ceil_js_1.default, divide: divide_js_1.default, floor: floor_js_1.default, max: max_js_1.default,
    maxBy: maxBy_js_1.default, mean: mean_js_1.default, meanBy: meanBy_js_1.default, min: min_js_1.default, minBy: minBy_js_1.default,
    multiply: multiply_js_1.default, round: round_js_1.default, subtract: subtract_js_1.default, sum: sum_js_1.default, sumBy: sumBy_js_1.default
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL21hdGguZGVmYXVsdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNEQUEyQjtBQUMzQix3REFBNkI7QUFDN0IsNERBQWlDO0FBQ2pDLDBEQUErQjtBQUMvQixzREFBMkI7QUFDM0IsMERBQStCO0FBQy9CLHdEQUE2QjtBQUM3Qiw0REFBaUM7QUFDakMsc0RBQTJCO0FBQzNCLDBEQUErQjtBQUMvQixnRUFBcUM7QUFDckMsMERBQStCO0FBQy9CLGdFQUFxQztBQUNyQyxzREFBMkI7QUFDM0IsMERBQStCO0FBRS9CLGtCQUFlO0lBQ2IsR0FBRyxFQUFILGdCQUFHLEVBQUUsSUFBSSxFQUFKLGlCQUFJLEVBQUUsTUFBTSxFQUFOLG1CQUFNLEVBQUUsS0FBSyxFQUFMLGtCQUFLLEVBQUUsR0FBRyxFQUFILGdCQUFHO0lBQzdCLEtBQUssRUFBTCxrQkFBSyxFQUFFLElBQUksRUFBSixpQkFBSSxFQUFFLE1BQU0sRUFBTixtQkFBTSxFQUFFLEdBQUcsRUFBSCxnQkFBRyxFQUFFLEtBQUssRUFBTCxrQkFBSztJQUMvQixRQUFRLEVBQVIscUJBQVEsRUFBRSxLQUFLLEVBQUwsa0JBQUssRUFBRSxRQUFRLEVBQVIscUJBQVEsRUFBRSxHQUFHLEVBQUgsZ0JBQUcsRUFBRSxLQUFLLEVBQUwsa0JBQUs7Q0FDdEMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvbWF0aC5kZWZhdWx0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhZGQgZnJvbSAnLi9hZGQuanMnO1xuaW1wb3J0IGNlaWwgZnJvbSAnLi9jZWlsLmpzJztcbmltcG9ydCBkaXZpZGUgZnJvbSAnLi9kaXZpZGUuanMnO1xuaW1wb3J0IGZsb29yIGZyb20gJy4vZmxvb3IuanMnO1xuaW1wb3J0IG1heCBmcm9tICcuL21heC5qcyc7XG5pbXBvcnQgbWF4QnkgZnJvbSAnLi9tYXhCeS5qcyc7XG5pbXBvcnQgbWVhbiBmcm9tICcuL21lYW4uanMnO1xuaW1wb3J0IG1lYW5CeSBmcm9tICcuL21lYW5CeS5qcyc7XG5pbXBvcnQgbWluIGZyb20gJy4vbWluLmpzJztcbmltcG9ydCBtaW5CeSBmcm9tICcuL21pbkJ5LmpzJztcbmltcG9ydCBtdWx0aXBseSBmcm9tICcuL211bHRpcGx5LmpzJztcbmltcG9ydCByb3VuZCBmcm9tICcuL3JvdW5kLmpzJztcbmltcG9ydCBzdWJ0cmFjdCBmcm9tICcuL3N1YnRyYWN0LmpzJztcbmltcG9ydCBzdW0gZnJvbSAnLi9zdW0uanMnO1xuaW1wb3J0IHN1bUJ5IGZyb20gJy4vc3VtQnkuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFkZCwgY2VpbCwgZGl2aWRlLCBmbG9vciwgbWF4LFxuICBtYXhCeSwgbWVhbiwgbWVhbkJ5LCBtaW4sIG1pbkJ5LFxuICBtdWx0aXBseSwgcm91bmQsIHN1YnRyYWN0LCBzdW0sIHN1bUJ5XG59O1xuIl0sInZlcnNpb24iOjN9