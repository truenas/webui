{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/ngx-skeleton-loader/fesm2020/ngx-skeleton-loader.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\n\nclass NgxSkeletonLoaderComponent {\n    constructor(config) {\n        const { appearance = 'line', animation = 'progress', theme = null, loadingText = 'Loading...', count = 1, ariaLabel = 'loading', } = config || {};\n        this.appearance = appearance;\n        this.animation = animation;\n        this.theme = theme;\n        this.loadingText = loadingText;\n        this.count = count;\n        this.items = [];\n        this.ariaLabel = ariaLabel;\n    }\n    ngOnInit() {\n        start('NgxSkeletonLoader:Rendered');\n        start('NgxSkeletonLoader:Loaded');\n        this.validateInputValues();\n    }\n    validateInputValues() {\n        // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n        if (!/^\\d+$/.test(`${this.count}`)) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n            }\n            this.count = 1;\n        }\n        this.items.length = this.count;\n        const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n        if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n            }\n            this.animation = 'progress';\n        }\n        if (['circle', 'line', ''].indexOf(String(this.appearance)) === -1) {\n            // Shows error message only in Development\n            if (isDevMode()) {\n                console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or empty string. Forcing default to \"''\".`);\n            }\n            this.appearance = '';\n        }\n    }\n    ngOnChanges(changes) {\n        // Avoiding multiple calls for the same input in case there's no changes in the fields\n        // Checking if the fields that require validation are available and if they were changed\n        // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n        if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n            return;\n        }\n        this.validateInputValues();\n    }\n    ngAfterViewInit() {\n        end('NgxSkeletonLoader:Rendered');\n    }\n    ngOnDestroy() {\n        end('NgxSkeletonLoader:Loaded');\n    }\n}\n/** @nocollapse */ /** @nocollapse */ NgxSkeletonLoaderComponent.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxSkeletonLoaderComponent, deps: [{ token: NGX_SKELETON_LOADER_CONFIG, optional: true }], target: i0.\u0275\u0275FactoryTarget.Component });\n/** @nocollapse */ /** @nocollapse */ NgxSkeletonLoaderComponent.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgxSkeletonLoaderComponent, selector: \"ngx-skeleton-loader\", inputs: { count: \"count\", loadingText: \"loadingText\", appearance: \"appearance\", animation: \"animation\", ariaLabel: \"ariaLabel\", theme: \"theme\" }, usesOnChanges: true, ngImport: i0, template: \"<span\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n    circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n</span>\\n\", styles: [\".loader{box-sizing:border-box;overflow:hidden;position:relative;background:#eff1f6 no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader:after,.loader:before{box-sizing:border-box}.loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress,.loader.progress-dark{transform:translate(0)}.loader.progress:after,.loader.progress:before,.loader.progress-dark:after,.loader.progress-dark:before{box-sizing:border-box}.loader.progress:before,.loader.progress-dark:before{-webkit-animation:progress 2s ease-in-out infinite;animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse{-webkit-animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;-webkit-animation-delay:.5s;animation-delay:.5s}@media (prefers-reduced-motion: reduce){.loader.pulse,.loader.progress-dark,.loader.progress{-webkit-animation:none;animation:none}.loader.progress,.loader.progress-dark{background-image:none}}@-webkit-keyframes progress{0%{transform:translate(-200px)}to{transform:translate(calc(200px + 100vw))}}@keyframes progress{0%{transform:translate(-200px)}to{transform:translate(calc(200px + 100vw))}}@-webkit-keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxSkeletonLoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-skeleton-loader', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span\\n  *ngFor=\\\"let item of items\\\"\\n  class=\\\"loader\\\"\\n  [attr.aria-label]=\\\"ariaLabel\\\"\\n  aria-busy=\\\"true\\\"\\n  aria-valuemin=\\\"0\\\"\\n  aria-valuemax=\\\"100\\\"\\n  [attr.aria-valuetext]=\\\"loadingText\\\"\\n  role=\\\"progressbar\\\"\\n  tabindex=\\\"0\\\"\\n  [ngClass]=\\\"{\\n    circle: appearance === 'circle',\\n    progress: animation === 'progress',\\n    'progress-dark': animation === 'progress-dark',\\n    pulse: animation === 'pulse'\\n  }\\\"\\n  [ngStyle]=\\\"theme\\\"\\n>\\n</span>\\n\", styles: [\".loader{box-sizing:border-box;overflow:hidden;position:relative;background:#eff1f6 no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader:after,.loader:before{box-sizing:border-box}.loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress,.loader.progress-dark{transform:translate(0)}.loader.progress:after,.loader.progress:before,.loader.progress-dark:after,.loader.progress-dark:before{box-sizing:border-box}.loader.progress:before,.loader.progress-dark:before{-webkit-animation:progress 2s ease-in-out infinite;animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.loader.progress:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse{-webkit-animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;-webkit-animation-delay:.5s;animation-delay:.5s}@media (prefers-reduced-motion: reduce){.loader.pulse,.loader.progress-dark,.loader.progress{-webkit-animation:none;animation:none}.loader.progress,.loader.progress-dark{background-image:none}}@-webkit-keyframes progress{0%{transform:translate(-200px)}to{transform:translate(calc(200px + 100vw))}}@keyframes progress{0%{transform:translate(-200px)}to{transform:translate(calc(200px + 100vw))}}@-webkit-keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_SKELETON_LOADER_CONFIG]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { count: [{\n                type: Input\n            }], loadingText: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }] } });\n\nclass NgxSkeletonLoaderModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxSkeletonLoaderModule,\n            providers: [{ provide: NGX_SKELETON_LOADER_CONFIG, useValue: config }],\n        };\n    }\n}\n/** @nocollapse */ /** @nocollapse */ NgxSkeletonLoaderModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxSkeletonLoaderModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ NgxSkeletonLoaderModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxSkeletonLoaderModule, declarations: [NgxSkeletonLoaderComponent], imports: [CommonModule], exports: [NgxSkeletonLoaderComponent] });\n/** @nocollapse */ /** @nocollapse */ NgxSkeletonLoaderModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxSkeletonLoaderModule, imports: [[CommonModule]] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgxSkeletonLoaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxSkeletonLoaderComponent],\n                    imports: [CommonModule],\n                    exports: [NgxSkeletonLoaderComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n//# sourceMappingURL=ngx-skeleton-loader.mjs.map\n"],
  "mappings": "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",
  "names": []
}
