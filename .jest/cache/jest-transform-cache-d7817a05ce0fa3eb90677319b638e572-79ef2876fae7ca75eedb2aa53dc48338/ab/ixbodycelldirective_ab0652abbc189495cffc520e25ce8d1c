9a5c5ca049ce5f246397eeed578ec9b2
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxTableBodyCellDirective = void 0;
const core_1 = require("@angular/core");
const ix_cell_text_component_1 = require("app/modules/ix-table/components/ix-table-body/cells/ix-cell-text/ix-cell-text.component");
let IxTableBodyCellDirective = class IxTableBodyCellDirective {
    constructor(viewContainer, cdr) {
        this.viewContainer = viewContainer;
        this.cdr = cdr;
    }
    ngAfterViewInit() {
        this.createComponent();
    }
    ngOnChanges() {
        if (!this.componentRef) {
            return;
        }
        this.setComponentProps();
    }
    createComponent() {
        if (!this.column.type) {
            this.column.type = ix_cell_text_component_1.IxCellTextComponent;
        }
        this.viewContainer.clear();
        this.componentRef = this.viewContainer.createComponent(this.column.type);
        this.setComponentProps();
    }
    setComponentProps() {
        this.componentRef.instance.setRow(this.row);
        Object.keys(this.column).forEach((key) => {
            this.componentRef.instance[key] = this.column[key];
        });
        this.cdr.detectChanges();
    }
    static ngTemplateContextGuard(dir, ctx) {
        return true;
    }
};
exports.IxTableBodyCellDirective = IxTableBodyCellDirective;
IxTableBodyCellDirective.ctorParameters = () => [
    { type: core_1.ViewContainerRef },
    { type: core_1.ChangeDetectorRef }
];
IxTableBodyCellDirective.propDecorators = {
    row: [{ type: core_1.Input }],
    column: [{ type: core_1.Input }]
};
exports.IxTableBodyCellDirective = IxTableBodyCellDirective = __decorate([
    (0, core_1.Directive)({
        selector: '[ix-body-cell]',
        standalone: true,
    })
], IxTableBodyCellDirective);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvZGlyZWN0aXZlcy9peC1ib2R5LWNlbGwuZGlyZWN0aXZlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQU91QjtBQUN2QixvSUFBOEg7QUFPdkgsSUFBTSx3QkFBd0IsR0FBOUIsTUFBTSx3QkFBd0I7SUFNbkMsWUFDVSxhQUErQixFQUMvQixHQUFzQjtRQUR0QixrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7UUFDL0IsUUFBRyxHQUFILEdBQUcsQ0FBbUI7SUFDN0IsQ0FBQztJQUVKLGVBQWU7UUFDYixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3ZCLE9BQU87UUFDVCxDQUFDO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyw0Q0FBbUIsQ0FBQztRQUN6QyxDQUFDO1FBQ0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUNwRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDakIsQ0FBQztRQUVGLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTyxpQkFBaUI7UUFDdkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM1QyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFrQixFQUFFLEVBQUU7WUFDdEQsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQVUsQ0FBQztRQUM5RCxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxzQkFBc0IsQ0FDM0IsR0FBZ0MsRUFDaEMsR0FBWTtRQUVaLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7QUFoRFUsNERBQXdCOzs7Ozs7a0JBQ2xDLFlBQUs7cUJBQ0wsWUFBSzs7bUNBRkssd0JBQXdCO0lBSnBDLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUIsVUFBVSxFQUFFLElBQUk7S0FDakIsQ0FBQztHQUNXLHdCQUF3QixDQWlEcEMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvZGlyZWN0aXZlcy9peC1ib2R5LWNlbGwuZGlyZWN0aXZlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnRSZWYsXG4gIERpcmVjdGl2ZSxcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgVmlld0NvbnRhaW5lclJlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJeENlbGxUZXh0Q29tcG9uZW50IH0gZnJvbSAnYXBwL21vZHVsZXMvaXgtdGFibGUvY29tcG9uZW50cy9peC10YWJsZS1ib2R5L2NlbGxzL2l4LWNlbGwtdGV4dC9peC1jZWxsLXRleHQuY29tcG9uZW50JztcbmltcG9ydCB7IENvbHVtbiwgQ29sdW1uQ29tcG9uZW50LCBDb2x1bW5LZXlzIH0gZnJvbSAnYXBwL21vZHVsZXMvaXgtdGFibGUvaW50ZXJmYWNlcy9jb2x1bW4tY29tcG9uZW50LmNsYXNzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2l4LWJvZHktY2VsbF0nLFxuICBzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBJeFRhYmxlQm9keUNlbGxEaXJlY3RpdmU8VD4gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSByb3c6IFQ7XG4gIEBJbnB1dCgpIGNvbHVtbjogQ29sdW1uPFQsIENvbHVtbkNvbXBvbmVudDxUPj47XG5cbiAgcHJpdmF0ZSBjb21wb25lbnRSZWY6IENvbXBvbmVudFJlZjxDb2x1bW5Db21wb25lbnQ8VD4+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZixcbiAgICBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICkge31cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5jcmVhdGVDb21wb25lbnQoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5jb21wb25lbnRSZWYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5zZXRDb21wb25lbnRQcm9wcygpO1xuICB9XG5cbiAgY3JlYXRlQ29tcG9uZW50KCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5jb2x1bW4udHlwZSkge1xuICAgICAgdGhpcy5jb2x1bW4udHlwZSA9IEl4Q2VsbFRleHRDb21wb25lbnQ7XG4gICAgfVxuICAgIHRoaXMudmlld0NvbnRhaW5lci5jbGVhcigpO1xuICAgIHRoaXMuY29tcG9uZW50UmVmID0gdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUNvbXBvbmVudChcbiAgICAgIHRoaXMuY29sdW1uLnR5cGUsXG4gICAgKTtcblxuICAgIHRoaXMuc2V0Q29tcG9uZW50UHJvcHMoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0Q29tcG9uZW50UHJvcHMoKTogdm9pZCB7XG4gICAgdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2Uuc2V0Um93KHRoaXMucm93KTtcbiAgICBPYmplY3Qua2V5cyh0aGlzLmNvbHVtbikuZm9yRWFjaCgoa2V5OiBDb2x1bW5LZXlzPFQ+KSA9PiB7XG4gICAgICB0aGlzLmNvbXBvbmVudFJlZi5pbnN0YW5jZVtrZXldID0gdGhpcy5jb2x1bW5ba2V5XSBhcyBuZXZlcjtcbiAgICB9KTtcblxuICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIHN0YXRpYyBuZ1RlbXBsYXRlQ29udGV4dEd1YXJkPFQ+KFxuICAgIGRpcjogSXhUYWJsZUJvZHlDZWxsRGlyZWN0aXZlPFQ+LFxuICAgIGN0eDogdW5rbm93bixcbiAgKTogY3R4IGlzIHsgJGltcGxpY2l0OiBUOyBpbmRleDogbnVtYmVyIH0ge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=