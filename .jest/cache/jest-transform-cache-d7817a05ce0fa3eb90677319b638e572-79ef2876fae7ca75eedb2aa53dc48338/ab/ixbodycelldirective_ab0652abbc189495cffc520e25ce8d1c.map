{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/directives/ix-body-cell.directive.ts","mappings":";;;;;;;;;AAAA,wCAOuB;AACvB,oIAA8H;AAOvH,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IAMnC,YACU,aAA+B,EAC/B,GAAsB;QADtB,kBAAa,GAAb,aAAa,CAAkB;QAC/B,QAAG,GAAH,GAAG,CAAmB;IAC7B,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,OAAO;QACT,CAAC;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,4CAAmB,CAAC;QACzC,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CACpD,IAAI,CAAC,MAAM,CAAC,IAAI,CACjB,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAkB,EAAE,EAAE;YACtD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAU,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,sBAAsB,CAC3B,GAAgC,EAChC,GAAY;QAEZ,OAAO,IAAI,CAAC;IACd,CAAC;;AAhDU,4DAAwB;;;;;;kBAClC,YAAK;qBACL,YAAK;;mCAFK,wBAAwB;IAJpC,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,UAAU,EAAE,IAAI;KACjB,CAAC;GACW,wBAAwB,CAiDpC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/directives/ix-body-cell.directive.ts"],"sourcesContent":["import {\n  AfterViewInit, ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport { IxCellTextComponent } from 'app/modules/ix-table/components/ix-table-body/cells/ix-cell-text/ix-cell-text.component';\nimport { Column, ColumnComponent, ColumnKeys } from 'app/modules/ix-table/interfaces/column-component.class';\n\n@Directive({\n  selector: '[ix-body-cell]',\n  standalone: true,\n})\nexport class IxTableBodyCellDirective<T> implements AfterViewInit, OnChanges {\n  @Input() row: T;\n  @Input() column: Column<T, ColumnComponent<T>>;\n\n  private componentRef: ComponentRef<ColumnComponent<T>>;\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.createComponent();\n  }\n\n  ngOnChanges(): void {\n    if (!this.componentRef) {\n      return;\n    }\n    this.setComponentProps();\n  }\n\n  createComponent(): void {\n    if (!this.column.type) {\n      this.column.type = IxCellTextComponent;\n    }\n    this.viewContainer.clear();\n    this.componentRef = this.viewContainer.createComponent(\n      this.column.type,\n    );\n\n    this.setComponentProps();\n  }\n\n  private setComponentProps(): void {\n    this.componentRef.instance.setRow(this.row);\n    Object.keys(this.column).forEach((key: ColumnKeys<T>) => {\n      this.componentRef.instance[key] = this.column[key] as never;\n    });\n\n    this.cdr.detectChanges();\n  }\n\n  static ngTemplateContextGuard<T>(\n    dir: IxTableBodyCellDirective<T>,\n    ctx: unknown,\n  ): ctx is { $implicit: T; index: number } {\n    return true;\n  }\n}\n"],"version":3}