{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/trimEnd.js","mappings":";;;;;AAAA,0EAA8C;AAC9C,oEAAwC;AACxC,4EAAgD;AAChD,4EAAgD;AAChD,gEAAqC;AACrC,gFAAoD;AAEpD;;;;;;;;;;;;;;;;;;GAkBG;AACH,SAAS,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK;IACnC,MAAM,GAAG,IAAA,qBAAQ,EAAC,MAAM,CAAC,CAAC;IAC1B,IAAI,MAAM,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,EAAE,CAAC;QAC7C,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAA,6BAAe,EAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,GAAG,IAAA,0BAAY,EAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC9C,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,IAAI,UAAU,GAAG,IAAA,2BAAa,EAAC,MAAM,CAAC,EAClC,GAAG,GAAG,IAAA,2BAAa,EAAC,UAAU,EAAE,IAAA,2BAAa,EAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IAE9D,OAAO,IAAA,uBAAS,EAAC,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChD,CAAC;AAED,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/trimEnd.js"],"sourcesContent":["import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport charsEndIndex from './_charsEndIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\nimport trimmedEndIndex from './_trimmedEndIndex.js';\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimEnd(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.slice(0, trimmedEndIndex(string) + 1);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n  return castSlice(strSymbols, 0, end).join('');\n}\n\nexport default trimEnd;\n"],"version":3}