{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/trimStart.js","mappings":";;;;;AAAA,0EAA8C;AAC9C,oEAAwC;AACxC,gFAAoD;AACpD,4EAAgD;AAChD,gEAAqC;AAErC,wCAAwC;AACxC,IAAI,WAAW,GAAG,MAAM,CAAC;AAEzB;;;;;;;;;;;;;;;;;;GAkBG;AACH,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK;IACrC,MAAM,GAAG,IAAA,qBAAQ,EAAC,MAAM,CAAC,CAAC;IAC1B,IAAI,MAAM,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,EAAE,CAAC;QAC7C,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC;IACD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,GAAG,IAAA,0BAAY,EAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC9C,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,IAAI,UAAU,GAAG,IAAA,2BAAa,EAAC,MAAM,CAAC,EAClC,KAAK,GAAG,IAAA,6BAAe,EAAC,UAAU,EAAE,IAAA,2BAAa,EAAC,KAAK,CAAC,CAAC,CAAC;IAE9D,OAAO,IAAA,uBAAS,EAAC,UAAU,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,CAAC;AAED,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/trimStart.js"],"sourcesContent":["import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport charsStartIndex from './_charsStartIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nexport default trimStart;\n"],"version":3}