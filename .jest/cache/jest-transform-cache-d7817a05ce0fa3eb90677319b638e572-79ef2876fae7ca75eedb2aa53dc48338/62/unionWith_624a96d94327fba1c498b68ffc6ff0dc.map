{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/unionWith.js","mappings":";;;;;AAAA,wEAA4C;AAC5C,kEAAsC;AACtC,kEAAsC;AACtC,kFAAuD;AACvD,wDAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,IAAI,SAAS,GAAG,IAAA,sBAAQ,EAAC,UAAS,MAAM;IACtC,IAAI,UAAU,GAAG,IAAA,iBAAI,EAAC,MAAM,CAAC,CAAC;IAC9B,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;IACtE,OAAO,IAAA,sBAAQ,EAAC,IAAA,yBAAW,EAAC,MAAM,EAAE,CAAC,EAAE,8BAAiB,EAAE,IAAI,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAC1F,CAAC,CAAC,CAAC;AAEH,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/unionWith.js"],"sourcesContent":["import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nexport default unionWith;\n"],"version":3}