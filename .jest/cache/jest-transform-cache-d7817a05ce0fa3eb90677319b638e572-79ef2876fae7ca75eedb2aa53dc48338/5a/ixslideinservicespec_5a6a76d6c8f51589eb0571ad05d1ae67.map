{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/ix-slide-in.service.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/ix-slide-in.service.spec.ts"],"sourcesContent":["import { A11yModule } from '@angular/cdk/a11y';\nimport { Location } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, Component, ElementRef, Inject,\n} from '@angular/core';\nimport { fakeAsync, tick } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport {\n  createServiceFactory, mockProvider, SpectatorService, createComponentFactory, Spectator,\n} from '@ngneat/spectator/jest';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { IxSlideInComponent } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.component';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { DiskFormComponent } from 'app/pages/storage/modules/disks/components/disk-form/disk-form.component';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\n\n/** Simple component for testing IxSlideInComponent */\n@Component({\n  selector: 'ix-test',\n  template: '<h1>{{text}}</h1>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nclass TestComponent {\n  text: string;\n  constructor(\n    public slideInRef: IxSlideInRef<DiskFormComponent, string>,\n    @Inject(SLIDE_IN_DATA) private value: string,\n  ) {\n    this.text = value;\n  }\n  close(): void {\n    this.slideInRef.close();\n  }\n}\n\ndescribe('IxSlideInService', () => {\n  let spectator: SpectatorService<IxSlideInService>;\n  let service: IxSlideInService;\n  let spectatorComponent: Spectator<IxSlideInComponent>;\n\n  const createService = createServiceFactory({\n    service: IxSlideInService,\n    providers: [\n      Location,\n      Router,\n    ],\n  });\n  const createComponent = createComponentFactory({\n    component: IxSlideInComponent,\n    providers: [\n      mockProvider(ElementRef),\n      IxSlideInService,\n    ],\n    imports: [\n      A11yModule,\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createService();\n    service = spectator.service;\n    spectatorComponent = createComponent({\n      props: { id: 'ix-slide-in-form' },\n    });\n  });\n\n  describe('slideInService', () => {\n    it('the \\'open\\' method should return instance of IxSlideInRef', () => {\n      jest.spyOn(service.slideInComponent, 'openSlideIn');\n\n      const instanceRef = service.open(TestComponent, { wide: true, data: 'Component created dynamically' });\n\n      expect(service.slideInComponent.openSlideIn).toHaveBeenCalledWith(TestComponent, { wide: true, data: 'Component created dynamically' });\n      expect(instanceRef).toBeInstanceOf(IxSlideInRef);\n    });\n\n    it('should be call \\'closeAll\\' method after route navigation', async () => {\n      jest.spyOn(service, 'closeAll');\n      service.open(TestComponent);\n\n      await spectator.inject(Router).navigate(['/']);\n\n      expect(service.closeAll).toHaveBeenCalled();\n    });\n\n    it('should be call \\'closeAll\\' method after changing URL using location service', fakeAsync(() => {\n      const location = spectator.inject(Location);\n      location.go('/');\n      jest.spyOn(service, 'closeAll');\n      service.open(TestComponent, { wide: true, data: '' });\n\n      location.back();\n      tick(200);\n      expect(service.closeAll).toHaveBeenCalled();\n    }));\n  });\n\n  describe('IxSlideInRef', () => {\n    it('should be passed the correct data to the dynamically created component after call \\'open\\'', () => {\n      const slideInRef = service.open(TestComponent, { wide: true, data: 'Component created dynamically' });\n      // check injected (SLIDE_IN_DATA)\n      const componentInstance = slideInRef.componentInstance;\n\n      expect(componentInstance.text).toBe('Component created dynamically');\n    });\n\n    it('should be injected IxSlideInRef to the dynamically created component after calling \\'open\\',', () => {\n      const slideInRef = service.open(TestComponent, { wide: true, data: 'Component created dynamically' });\n      // check injected SlideInRef\n\n      expect(slideInRef.componentInstance.slideInRef).toBeInstanceOf(IxSlideInRef);\n    });\n\n    it('after close slide observable \\'slideInClosed$\\' should emit response', () => {\n      jest.spyOn(spectatorComponent.component, 'closeSlideIn');\n\n      let response;\n      const data = { value: true };\n      const slideInRef = service.open(TestComponent);\n\n      slideInRef.slideInClosed$.subscribe((val) => response = val);\n      slideInRef.close(data);\n\n      expect(response).toBe(data);\n      expect(spectatorComponent.component.closeSlideIn).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}