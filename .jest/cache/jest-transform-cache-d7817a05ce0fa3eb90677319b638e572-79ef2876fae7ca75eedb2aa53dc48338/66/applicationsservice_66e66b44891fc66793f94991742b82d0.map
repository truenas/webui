{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/services/applications.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/services/applications.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Observable, OperatorFunction, filter, map, pipe,\n} from 'rxjs';\nimport { customApp } from 'app/constants/catalog.constants';\nimport { AppExtraCategory } from 'app/enums/app-extra-category.enum';\nimport { ApiEvent } from 'app/interfaces/api-message.interface';\nimport {\n  App, AppStartQueryParams, AppUpgradeParams,\n} from 'app/interfaces/app.interface';\nimport { AppUpgradeSummary } from 'app/interfaces/application.interface';\nimport { AppsFiltersValues } from 'app/interfaces/apps-filters-values.interface';\nimport { AvailableApp } from 'app/interfaces/available-app.interface';\nimport { CatalogApp } from 'app/interfaces/catalog.interface';\nimport { Job } from 'app/interfaces/job.interface';\nimport { NetworkInterface } from 'app/interfaces/network-interface.interface';\nimport { Pool } from 'app/interfaces/pool.interface';\nimport { QueryFilters } from 'app/interfaces/query-api.interface';\nimport { WebSocketService } from 'app/services/ws.service';\n\nconst ignoredAppsList = [customApp];\n\nexport function filterIgnoredApps(): OperatorFunction<AvailableApp[], AvailableApp[]> {\n  return pipe(\n    map((apps) => apps.filter((app) => !ignoredAppsList.includes(app.name))),\n  );\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ApplicationsService {\n  constructor(private ws: WebSocketService, private translate: TranslateService) {}\n\n  getPoolList(): Observable<Pool[]> {\n    return this.ws.call('pool.query');\n  }\n\n  getInterfaces(): Observable<NetworkInterface[]> {\n    return this.ws.call('interface.query');\n  }\n\n  getCatalogAppDetails(name: string, train: string): Observable<CatalogApp> {\n    return this.ws.call('catalog.get_app_details', [name, { train }]);\n  }\n\n  getAllAppsCategories(): Observable<string[]> {\n    return this.ws.call('app.categories');\n  }\n\n  getLatestApps(filters?: AppsFiltersValues): Observable<AvailableApp[]> {\n    return this.getAppsFetchCall('app.latest', filters).pipe(filterIgnoredApps());\n  }\n\n  getAvailableApps(filters?: AppsFiltersValues): Observable<AvailableApp[]> {\n    return this.getAppsFetchCall('app.available', filters).pipe(filterIgnoredApps());\n  }\n\n  getSimilarApps(app: AvailableApp): Observable<AvailableApp[]> {\n    return this.ws.call('app.similar', [app.name, app.train]);\n  }\n\n  getAllApps(): Observable<App[]> {\n    return this.ws.call('app.query', [[], { extra: { retrieve_config: true } }]);\n  }\n\n  getApp(name: string): Observable<App[]> {\n    return this.ws.call('app.query', [[['name', '=', name]], {\n      extra: {\n        include_app_schema: true,\n        retrieve_config: true,\n      },\n    }]);\n  }\n\n  getInstalledAppsUpdates(): Observable<ApiEvent<App>> {\n    return this.ws.subscribe('app.query');\n  }\n\n  getInstalledAppsStatusUpdates(): Observable<ApiEvent<Job<void, AppStartQueryParams>>> {\n    return this.ws.subscribe('core.get_jobs').pipe(\n      filter((event: ApiEvent<Job<void, AppStartQueryParams>>) => {\n        return ['app.start', 'app.stop'].includes(event.fields.method);\n      }),\n    );\n  }\n\n  getAppUpgradeSummary(name: string, version?: string): Observable<AppUpgradeSummary> {\n    const payload: AppUpgradeParams = [name];\n    if (version) {\n      payload.push({ app_version: version });\n    }\n    return this.ws.call('app.upgrade_summary', payload);\n  }\n\n  startApplication(name: string): Observable<Job<void>> {\n    return this.ws.job('app.start', [name]);\n  }\n\n  stopApplication(name: string): Observable<Job<void>> {\n    return this.ws.job('app.stop', [name]);\n  }\n\n  restartApplication(name: string): Observable<Job<void>> {\n    return this.ws.job('app.redeploy', [name]);\n  }\n\n  convertDateToRelativeDate(date: Date): string {\n    const diff = Math.round((Number(new Date()) - Number(date)) / 1000);\n    const day = 60 * 60 * 24;\n\n    if (diff < day) { return this.translate.instant('Last 24 hours'); }\n    if (diff < day * 3) { return this.translate.instant('Last 3 days'); }\n    if (diff < day * 14) { return this.translate.instant('Last week'); }\n    if (diff < day * 60) { return this.translate.instant('Last month'); }\n    return this.translate.instant('Long time ago');\n  }\n\n  private getAppsFetchCall(\n    endPoint: 'app.available' | 'app.latest',\n    filters?: AppsFiltersValues,\n  ): Observable<AvailableApp[]> {\n    if (filters && !filters.categories?.length) {\n      delete filters.categories;\n    }\n    if (filters && !filters.sort?.length) {\n      delete filters.sort;\n    }\n    if (!filters || (filters && !Object.keys(filters).length)) {\n      return this.ws.call(endPoint).pipe(filterIgnoredApps());\n    }\n\n    const firstOption: QueryFilters<AvailableApp> = [];\n\n    if (filters.categories?.includes(AppExtraCategory.Recommended)) {\n      firstOption.push(['recommended', '=', true]);\n    }\n\n    filters.categories = filters.categories?.filter((category) => !category?.includes(AppExtraCategory.Recommended));\n\n    if (filters.categories?.length) {\n      firstOption.push(\n        ['OR', filters.categories.map((category) => ['categories', 'rin', category])] as QueryFilters<AvailableApp>,\n      );\n    }\n\n    const secondOption = filters.sort ? { order_by: [filters.sort] } : {};\n\n    return this.ws.call(endPoint, [firstOption, secondOption]).pipe(filterIgnoredApps());\n  }\n}\n"],"version":3}