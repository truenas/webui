{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/components/installed-apps/app-workloads-card/app-workloads-card.component.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCAEuB;AACvB,qDAAqD;AACrD,4CAAyC;AACzC,yDAAqD;AACrD,8CAAuD;AACvD,6DAAoD;AACpD,mDAA2C;AAC3C,gEAEsC;AAEtC,oKAEyH;AACzH,kIAA4H;AAC5H,yFAA+E;;AASxE,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;IASpC,YACU,SAAoB,EACpB,MAAc,EACd,SAA2B;QAF3B,cAAS,GAAT,SAAS,CAAW;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAkB;mBAXtB,YAAK,CAAC,QAAQ,EAAO;QAE3B,aAAQ,GAAG,yBAAQ,CAAC;QACpB,sBAAiB,GAAG,iCAAiB,CAAC;QAE5B,kBAAa,GAAG,CAAC,gBAAI,CAAC,SAAS,CAAC,CAAC;QACjC,4BAAuB,GAAG,uCAAuB,CAAC;QAQlD,cAAS,GAAG,IAAA,eAAQ,EAAC,GAAG,EAAE;YAC3C,MAAM,SAAS,GAAoF,EAAE,CAAC;YAEtG,IAAI,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACtD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACnC,SAAS,CAAC,IAAI,CAAC;wBACb,MAAM,EAAE,QAAQ,CAAC,OAAO;wBACxB,QAAQ,EAAE,QAAQ,CAAC,SAAS;wBAC5B,aAAa,EAAE,IAAI,CAAC,cAAc;wBAClC,QAAQ,EAAE,IAAI,CAAC,QAAQ;qBACxB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,CAAC;IAjBA,CAAC;IAmBJ,mBAAmB,CAAC,gBAAqC;QACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4DAA2B,EAAE;YAC/C,QAAQ,EAAE,MAAM;YAChB,IAAI,EAAE,gBAAgB;SACvB,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,WAAmB;QACpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4DAA2B,EAAE;YAC/C,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE;gBACJ,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI;gBACxB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC;gBACrD,IAAI,EAAE,0CAAgB,CAAC,KAAK;gBAC5B,YAAY,EAAE,CAAC,MAAmC,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC;aACnG;SACF,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,gBAAqC;QACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,OAAO;YACP,WAAW;YACX,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK;YACzB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI;YACf,MAAM;YACN,gBAAgB,CAAC,EAAE;SACpB,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB,CAAC,SAAsC,EAAE,WAAmB;QACnF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,OAAO;YACP,WAAW;YACX,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK;YACzB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI;YACf,OAAO;YACP,WAAW;YACX,SAAS,CAAC,OAAO;SAClB,CAAC,CAAC;IACL,CAAC;;AAzEU,8DAAyB;;;;;;;;;oCAAzB,yBAAyB;IAPrC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,wDAAkD;QAElD,eAAe,EAAE,8BAAuB,CAAC,MAAM;KAChD,CAAC;GACW,yBAAyB,CA0ErC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/components/installed-apps/app-workloads-card/app-workloads-card.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, Component, input, computed,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AppState } from 'app/enums/app-state.enum';\nimport { Role } from 'app/enums/role.enum';\nimport {\n  App, AppContainerDetails, AppContainerState, appContainerStateLabels,\n} from 'app/interfaces/app.interface';\nimport { ShellDetailsDialogFormValue } from 'app/interfaces/shell-details-dialog.interface';\nimport {\n  VolumeMountsDialogComponent,\n} from 'app/pages/apps/components/installed-apps/app-workloads-card/volume-mounts-dialog/volume-mounts-dialog.component';\nimport { ShellDetailsDialogComponent } from 'app/pages/apps/components/shell-details-dialog/shell-details-dialog.component';\nimport { ShellDetailsType } from 'app/pages/apps/enum/shell-details-type.enum';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-app-containers-card',\n  templateUrl: './app-workloads-card.component.html',\n  styleUrls: ['./app-workloads-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppWorkloadsCardComponent {\n  readonly app = input.required<App>();\n\n  readonly AppState = AppState;\n  readonly AppContainerState = AppContainerState;\n\n  protected readonly requiredRoles = [Role.AppsWrite];\n  protected readonly appContainerStateLabels = appContainerStateLabels;\n\n  constructor(\n    private matDialog: MatDialog,\n    private router: Router,\n    private translate: TranslateService,\n  ) {}\n\n  protected readonly hostPorts = computed(() => {\n    const hostPorts: { hostIp: string; hostPort: string; containerPort: string; protocol: string }[] = [];\n\n    this.app().active_workloads.used_ports.forEach((port) => {\n      port.host_ports.forEach((hostPort) => {\n        hostPorts.push({\n          hostIp: hostPort.host_ip,\n          hostPort: hostPort.host_port,\n          containerPort: port.container_port,\n          protocol: port.protocol,\n        });\n      });\n    });\n\n    return hostPorts;\n  });\n\n  volumeButtonPressed(containerDetails: AppContainerDetails): void {\n    this.matDialog.open(VolumeMountsDialogComponent, {\n      minWidth: '60vw',\n      data: containerDetails,\n    });\n  }\n\n  shellButtonPressed(containerId: string): void {\n    this.matDialog.open(ShellDetailsDialogComponent, {\n      minWidth: '650px',\n      maxWidth: '850px',\n      data: {\n        appName: this.app().name,\n        title: this.translate.instant('Choose Shell Details'),\n        type: ShellDetailsType.Shell,\n        customSubmit: (values: ShellDetailsDialogFormValue) => this.shellDialogSubmit(values, containerId),\n      },\n    });\n  }\n\n  viewLogsButtonPressed(containerDetails: AppContainerDetails): void {\n    this.router.navigate([\n      '/apps',\n      'installed',\n      this.app().metadata.train,\n      this.app().name,\n      'logs',\n      containerDetails.id,\n    ]);\n  }\n\n  private shellDialogSubmit(formValue: ShellDetailsDialogFormValue, containerId: string): void {\n    this.router.navigate([\n      '/apps',\n      'installed',\n      this.app().metadata.train,\n      this.app().name,\n      'shell',\n      containerId,\n      formValue.command,\n    ]);\n  }\n}\n"],"version":3}