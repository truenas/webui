{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/validators.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/validators.ts"],"sourcesContent":["import {\n  FormControl, FormGroup, UntypedFormControl, ValidatorFn,\n} from '@angular/forms';\nimport { isEmpty, isNumber, toNumber } from 'lodash-es';\n\nexport function greaterThanFg(\n  controlName: string,\n  comparateControlNames: string[],\n  errMsg?: string,\n): ValidatorFn {\n  return (fg: FormGroup<unknown>) => {\n    if (!fg?.get(controlName)) {\n      return null;\n    }\n\n    const errFields: string[] = [];\n    const subjectControl = fg.get(controlName) as UntypedFormControl;\n    for (const name of comparateControlNames) {\n      const otherControl = fg.get(name) as UntypedFormControl;\n      if (!otherControl) {\n        throw new Error(\n          'greaterThanValidator(): other control is not found in the group',\n        );\n      }\n      const otherValueExists = otherControl.value !== null && otherControl.value !== undefined && otherControl.value !== '';\n      const subjectValueExists = subjectControl.value !== null && subjectControl.value !== undefined && subjectControl.value !== '';\n      if (otherValueExists && subjectValueExists) {\n        if (!isNumber(otherControl.value) || !isNumber(subjectControl.value)) {\n          throw new Error('greaterThanValidator(): Comparates are not all numeric');\n        }\n        if (toNumber(otherControl.value) >= toNumber(subjectControl.value)) {\n          errFields.push(name);\n        }\n      }\n    }\n    if (errFields.length) {\n      fg.get(controlName).setErrors({\n        greaterThan: errMsg ? { message: errMsg } : true,\n      });\n      return {\n        [controlName]: { greaterThan: errMsg ? { message: errMsg } : true },\n      };\n    }\n    let prevErrors = { ...fg.get(controlName).errors };\n    delete prevErrors.greaterThan;\n    if (isEmpty(prevErrors)) {\n      prevErrors = null;\n    }\n    fg.get(controlName).setErrors(prevErrors);\n    return null;\n  };\n}\n\nexport function rangeValidator(min: number, max?: number): ValidatorFn {\n  let thisControl: FormControl<string>;\n\n  return function rangeValidate(control: FormControl<string>) {\n    let regex;\n    if (min === 0) {\n      regex = /^(0|[1-9]\\d*)$/;\n    } else {\n      regex = /^[1-9]\\d*$/;\n    }\n\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n    }\n\n    if (!thisControl.value) {\n      return null;\n    }\n\n    if (regex.test(thisControl.value)) {\n      const num = Number(thisControl.value);\n      if (num >= min) {\n        if (max) {\n          if (num <= max) {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n\n    return { range: true, rangeValue: { min, max } };\n  };\n}\n"],"version":3}