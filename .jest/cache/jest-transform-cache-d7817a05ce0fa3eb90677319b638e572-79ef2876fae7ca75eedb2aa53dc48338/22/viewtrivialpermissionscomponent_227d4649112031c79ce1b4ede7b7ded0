1a1333387e7bde486e6c734a61669253
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewTrivialPermissionsComponent = void 0;
const core_1 = require("@angular/core");
const core_2 = require("@ngx-translate/core");
const mode_helper_1 = require("app/helpers/mode.helper");
const permissions_item_component_1 = require("app/pages/datasets/modules/permissions/components/permissions-item/permissions-item.component");
const permission_item_interface_1 = require("app/pages/datasets/modules/permissions/interfaces/permission-item.interface");
const permissions_to_description_utils_1 = require("app/pages/datasets/modules/permissions/utils/permissions-to-description.utils");
let ViewTrivialPermissionsComponent = class ViewTrivialPermissionsComponent {
    set stat(stat) {
        this.permissionItems = this.statToPermissionItems(stat);
    }
    constructor(translate) {
        this.translate = translate;
    }
    statToPermissionItems(stat) {
        const permissions = (0, mode_helper_1.parseApiMode)(stat.mode);
        return [
            {
                type: permission_item_interface_1.PermissionsItemType.User,
                name: stat.user === null ? 'User - ' + stat.uid.toString() : stat.user,
                description: (0, permissions_to_description_utils_1.posixPermissionsToDescription)(this.translate, permissions.owner),
            },
            {
                type: permission_item_interface_1.PermissionsItemType.Group,
                name: stat.group === null ? 'Group - ' + stat.gid.toString() : stat.group,
                description: (0, permissions_to_description_utils_1.posixPermissionsToDescription)(this.translate, permissions.group),
            },
            {
                type: permission_item_interface_1.PermissionsItemType.Other,
                name: this.translate.instant('Other'),
                description: (0, permissions_to_description_utils_1.posixPermissionsToDescription)(this.translate, permissions.other),
            },
        ];
    }
};
exports.ViewTrivialPermissionsComponent = ViewTrivialPermissionsComponent;
ViewTrivialPermissionsComponent.ctorParameters = () => [
    { type: core_2.TranslateService }
];
ViewTrivialPermissionsComponent.propDecorators = {
    stat: [{ type: core_1.Input }]
};
exports.ViewTrivialPermissionsComponent = ViewTrivialPermissionsComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-view-trivial-permissions',
        template: require("./view-trivial-permissions.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [permissions_item_component_1.PermissionsItemComponent, core_2.TranslateModule],
    })
], ViewTrivialPermissionsComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3BhZ2VzL2RhdGFzZXRzL21vZHVsZXMvcGVybWlzc2lvbnMvY29tcG9uZW50cy92aWV3LXRyaXZpYWwtcGVybWlzc2lvbnMvdmlldy10cml2aWFsLXBlcm1pc3Npb25zLmNvbXBvbmVudC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx3Q0FBMEU7QUFDMUUsOENBQXdFO0FBQ3hFLHlEQUF1RDtBQUV2RCw4SUFBeUk7QUFDekksMkhBR3FGO0FBQ3JGLG9JQUV1RjtBQVVoRixJQUFNLCtCQUErQixHQUFyQyxNQUFNLCtCQUErQjtRQUV0QyxJQUFJLENBQUMsSUFBb0I7UUFDM0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUlELFlBQ1UsU0FBMkI7UUFBM0IsY0FBUyxHQUFULFNBQVMsQ0FBa0I7SUFDbEMsQ0FBQztJQUVJLHFCQUFxQixDQUFDLElBQW9CO1FBQ2hELE1BQU0sV0FBVyxHQUFHLElBQUEsMEJBQVksRUFBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFNUMsT0FBTztZQUNMO2dCQUNFLElBQUksRUFBRSwrQ0FBbUIsQ0FBQyxJQUFJO2dCQUM5QixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSTtnQkFDdEUsV0FBVyxFQUFFLElBQUEsZ0VBQTZCLEVBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDO2FBQzlFO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLCtDQUFtQixDQUFDLEtBQUs7Z0JBQy9CLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLO2dCQUN6RSxXQUFXLEVBQUUsSUFBQSxnRUFBNkIsRUFBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUM7YUFDOUU7WUFDRDtnQkFDRSxJQUFJLEVBQUUsK0NBQW1CLENBQUMsS0FBSztnQkFDL0IsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztnQkFDckMsV0FBVyxFQUFFLElBQUEsZ0VBQTZCLEVBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsS0FBSyxDQUFDO2FBQzlFO1NBQ0YsQ0FBQztJQUNKLENBQUM7O0FBaENVLDBFQUErQjs7Ozs7bUJBQ3pDLFlBQUs7OzBDQURLLCtCQUErQjtJQVIzQyxJQUFBLGdCQUFTLEVBQUM7UUFDVCxRQUFRLEVBQUUsNkJBQTZCO1FBQ3ZDLDhEQUFzRDtRQUV0RCxlQUFlLEVBQUUsOEJBQXVCLENBQUMsTUFBTTtRQUMvQyxVQUFVLEVBQUUsSUFBSTtRQUNoQixPQUFPLEVBQUUsQ0FBQyxxREFBd0IsRUFBRSxzQkFBZSxDQUFDO0tBQ3JELENBQUM7R0FDVywrQkFBK0IsQ0FpQzNDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9wYWdlcy9kYXRhc2V0cy9tb2R1bGVzL3Blcm1pc3Npb25zL2NvbXBvbmVudHMvdmlldy10cml2aWFsLXBlcm1pc3Npb25zL3ZpZXctdHJpdmlhbC1wZXJtaXNzaW9ucy5jb21wb25lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UsIFRyYW5zbGF0ZU1vZHVsZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgcGFyc2VBcGlNb2RlIH0gZnJvbSAnYXBwL2hlbHBlcnMvbW9kZS5oZWxwZXInO1xuaW1wb3J0IHsgRmlsZVN5c3RlbVN0YXQgfSBmcm9tICdhcHAvaW50ZXJmYWNlcy9maWxlc3lzdGVtLXN0YXQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBlcm1pc3Npb25zSXRlbUNvbXBvbmVudCB9IGZyb20gJ2FwcC9wYWdlcy9kYXRhc2V0cy9tb2R1bGVzL3Blcm1pc3Npb25zL2NvbXBvbmVudHMvcGVybWlzc2lvbnMtaXRlbS9wZXJtaXNzaW9ucy1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICBQZXJtaXNzaW9uSXRlbSxcbiAgUGVybWlzc2lvbnNJdGVtVHlwZSxcbn0gZnJvbSAnYXBwL3BhZ2VzL2RhdGFzZXRzL21vZHVsZXMvcGVybWlzc2lvbnMvaW50ZXJmYWNlcy9wZXJtaXNzaW9uLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7XG4gIHBvc2l4UGVybWlzc2lvbnNUb0Rlc2NyaXB0aW9uLFxufSBmcm9tICdhcHAvcGFnZXMvZGF0YXNldHMvbW9kdWxlcy9wZXJtaXNzaW9ucy91dGlscy9wZXJtaXNzaW9ucy10by1kZXNjcmlwdGlvbi51dGlscyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l4LXZpZXctdHJpdmlhbC1wZXJtaXNzaW9ucycsXG4gIHRlbXBsYXRlVXJsOiAndmlldy10cml2aWFsLXBlcm1pc3Npb25zLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdmlldy10cml2aWFsLXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbUGVybWlzc2lvbnNJdGVtQ29tcG9uZW50LCBUcmFuc2xhdGVNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBWaWV3VHJpdmlhbFBlcm1pc3Npb25zQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgc2V0IHN0YXQoc3RhdDogRmlsZVN5c3RlbVN0YXQpIHtcbiAgICB0aGlzLnBlcm1pc3Npb25JdGVtcyA9IHRoaXMuc3RhdFRvUGVybWlzc2lvbkl0ZW1zKHN0YXQpO1xuICB9XG5cbiAgcGVybWlzc2lvbkl0ZW1zOiBQZXJtaXNzaW9uSXRlbVtdO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdHJhbnNsYXRlOiBUcmFuc2xhdGVTZXJ2aWNlLFxuICApIHt9XG5cbiAgcHJpdmF0ZSBzdGF0VG9QZXJtaXNzaW9uSXRlbXMoc3RhdDogRmlsZVN5c3RlbVN0YXQpOiBQZXJtaXNzaW9uSXRlbVtdIHtcbiAgICBjb25zdCBwZXJtaXNzaW9ucyA9IHBhcnNlQXBpTW9kZShzdGF0Lm1vZGUpO1xuXG4gICAgcmV0dXJuIFtcbiAgICAgIHtcbiAgICAgICAgdHlwZTogUGVybWlzc2lvbnNJdGVtVHlwZS5Vc2VyLFxuICAgICAgICBuYW1lOiBzdGF0LnVzZXIgPT09IG51bGwgPyAnVXNlciAtICcgKyBzdGF0LnVpZC50b1N0cmluZygpIDogc3RhdC51c2VyLFxuICAgICAgICBkZXNjcmlwdGlvbjogcG9zaXhQZXJtaXNzaW9uc1RvRGVzY3JpcHRpb24odGhpcy50cmFuc2xhdGUsIHBlcm1pc3Npb25zLm93bmVyKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHR5cGU6IFBlcm1pc3Npb25zSXRlbVR5cGUuR3JvdXAsXG4gICAgICAgIG5hbWU6IHN0YXQuZ3JvdXAgPT09IG51bGwgPyAnR3JvdXAgLSAnICsgc3RhdC5naWQudG9TdHJpbmcoKSA6IHN0YXQuZ3JvdXAsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBwb3NpeFBlcm1pc3Npb25zVG9EZXNjcmlwdGlvbih0aGlzLnRyYW5zbGF0ZSwgcGVybWlzc2lvbnMuZ3JvdXApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdHlwZTogUGVybWlzc2lvbnNJdGVtVHlwZS5PdGhlcixcbiAgICAgICAgbmFtZTogdGhpcy50cmFuc2xhdGUuaW5zdGFudCgnT3RoZXInKSxcbiAgICAgICAgZGVzY3JpcHRpb246IHBvc2l4UGVybWlzc2lvbnNUb0Rlc2NyaXB0aW9uKHRoaXMudHJhbnNsYXRlLCBwZXJtaXNzaW9ucy5vdGhlciksXG4gICAgICB9LFxuICAgIF07XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==