458c887e8d4f0905a0f94e1c544f33c4
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageTitleService = void 0;
const core_1 = require("@angular/core");
const router_1 = require("@angular/router");
const until_destroy_1 = require("@ngneat/until-destroy");
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
const route_parts_service_1 = require("app/services/route-parts/route-parts.service");
let PageTitleService = class PageTitleService {
    constructor(router, routePartsService) {
        this.router = router;
        this.routePartsService = routePartsService;
        this.title$ = new rxjs_1.BehaviorSubject('');
        this.hasNewIndicator$ = new rxjs_1.BehaviorSubject(false);
        this.observeRouteChanges();
    }
    /**
     * Sets page title manually.
     * Will be valid until next page navigation.
     */
    setTitle(title) {
        this.title$.next(title);
    }
    observeRouteChanges() {
        this.emitTitleFromRoute();
        this.router.events.pipe((0, operators_1.filter)((event) => event instanceof router_1.NavigationEnd), (0, until_destroy_1.untilDestroyed)(this)).subscribe(() => {
            this.emitTitleFromRoute();
        });
    }
    emitTitleFromRoute() {
        const breadcrumbs = this.routePartsService.routeParts;
        if (breadcrumbs.length > 0) {
            this.title$.next(breadcrumbs[breadcrumbs.length - 1].title || '');
            this.hasNewIndicator$.next(breadcrumbs.some((breadcrumb) => breadcrumb.isNew));
        }
    }
};
exports.PageTitleService = PageTitleService;
PageTitleService.ctorParameters = () => [
    { type: router_1.Router },
    { type: route_parts_service_1.RoutePartsService }
];
exports.PageTitleService = PageTitleService = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Injectable)({
        providedIn: 'root',
    })
], PageTitleService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3NlcnZpY2VzL3BhZ2UtdGl0bGUuc2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx3Q0FBMkM7QUFDM0MsNENBQXdEO0FBQ3hELHlEQUFxRTtBQUNyRSwrQkFBdUM7QUFDdkMsOENBQXdDO0FBQ3hDLHNGQUFpRjtBQU0xRSxJQUFNLGdCQUFnQixHQUF0QixNQUFNLGdCQUFnQjtJQUkzQixZQUNVLE1BQWMsRUFDZCxpQkFBb0M7UUFEcEMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFMOUMsV0FBTSxHQUFHLElBQUksc0JBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNqQyxxQkFBZ0IsR0FBRyxJQUFJLHNCQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7UUFNNUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILFFBQVEsQ0FBQyxLQUFhO1FBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFTyxtQkFBbUI7UUFDekIsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNyQixJQUFBLGtCQUFNLEVBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssWUFBWSxzQkFBYSxDQUFDLEVBQ2pELElBQUEsOEJBQWMsRUFBQyxJQUFJLENBQUMsQ0FDckIsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ2YsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFDNUIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsa0JBQWtCO1FBQ2hCLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUM7UUFDdEQsSUFBSSxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQzNCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQztZQUNsRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pGLENBQUM7SUFDSCxDQUFDOztBQW5DVSw0Q0FBZ0I7Ozs7OzJCQUFoQixnQkFBZ0I7SUFKNUIsSUFBQSw0QkFBWSxHQUFFO0lBQ2QsSUFBQSxpQkFBVSxFQUFDO1FBQ1YsVUFBVSxFQUFFLE1BQU07S0FDbkIsQ0FBQztHQUNXLGdCQUFnQixDQW9DNUIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3NlcnZpY2VzL3BhZ2UtdGl0bGUuc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uRW5kLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVW50aWxEZXN0cm95LCB1bnRpbERlc3Ryb3llZCB9IGZyb20gJ0BuZ25lYXQvdW50aWwtZGVzdHJveSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFJvdXRlUGFydHNTZXJ2aWNlIH0gZnJvbSAnYXBwL3NlcnZpY2VzL3JvdXRlLXBhcnRzL3JvdXRlLXBhcnRzLnNlcnZpY2UnO1xuXG5AVW50aWxEZXN0cm95KClcbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBQYWdlVGl0bGVTZXJ2aWNlIHtcbiAgdGl0bGUkID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XG4gIGhhc05ld0luZGljYXRvciQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgcm91dGVQYXJ0c1NlcnZpY2U6IFJvdXRlUGFydHNTZXJ2aWNlLFxuICApIHtcbiAgICB0aGlzLm9ic2VydmVSb3V0ZUNoYW5nZXMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHBhZ2UgdGl0bGUgbWFudWFsbHkuXG4gICAqIFdpbGwgYmUgdmFsaWQgdW50aWwgbmV4dCBwYWdlIG5hdmlnYXRpb24uXG4gICAqL1xuICBzZXRUaXRsZSh0aXRsZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy50aXRsZSQubmV4dCh0aXRsZSk7XG4gIH1cblxuICBwcml2YXRlIG9ic2VydmVSb3V0ZUNoYW5nZXMoKTogdm9pZCB7XG4gICAgdGhpcy5lbWl0VGl0bGVGcm9tUm91dGUoKTtcbiAgICB0aGlzLnJvdXRlci5ldmVudHMucGlwZShcbiAgICAgIGZpbHRlcigoZXZlbnQpID0+IGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCksXG4gICAgICB1bnRpbERlc3Ryb3llZCh0aGlzKSxcbiAgICApLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLmVtaXRUaXRsZUZyb21Sb3V0ZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgZW1pdFRpdGxlRnJvbVJvdXRlKCk6IHZvaWQge1xuICAgIGNvbnN0IGJyZWFkY3J1bWJzID0gdGhpcy5yb3V0ZVBhcnRzU2VydmljZS5yb3V0ZVBhcnRzO1xuICAgIGlmIChicmVhZGNydW1icy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnRpdGxlJC5uZXh0KGJyZWFkY3J1bWJzW2JyZWFkY3J1bWJzLmxlbmd0aCAtIDFdLnRpdGxlIHx8ICcnKTtcbiAgICAgIHRoaXMuaGFzTmV3SW5kaWNhdG9yJC5uZXh0KGJyZWFkY3J1bWJzLnNvbWUoKGJyZWFkY3J1bWIpID0+IGJyZWFkY3J1bWIuaXNOZXcpKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==