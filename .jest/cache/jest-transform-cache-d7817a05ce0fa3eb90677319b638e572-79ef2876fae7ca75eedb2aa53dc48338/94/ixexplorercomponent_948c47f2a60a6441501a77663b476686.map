{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-explorer/ix-explorer.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-explorer/ix-explorer.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatError, MatHint } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport {\n  IActionMapping, ITreeOptions, KEYS, TREE_ACTIONS, TreeComponent, TreeModule,\n} from '@bugsplat/angular-tree-component';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { firstValueFrom, Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { ExplorerNodeType } from 'app/enums/explorer-type.enum';\nimport { mntPath } from 'app/enums/mnt-path.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { Dataset, DatasetCreate } from 'app/interfaces/dataset.interface';\nimport { IxSimpleChanges } from 'app/interfaces/simple-changes.interface';\nimport { ExplorerNodeData, TreeNode } from 'app/interfaces/tree-node.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { IxErrorsComponent } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\nimport { CreateDatasetDialogComponent } from 'app/modules/forms/ix-forms/components/ix-explorer/create-dataset-dialog/create-dataset-dialog.component';\nimport { TreeNodeProvider } from 'app/modules/forms/ix-forms/components/ix-explorer/tree-node-provider.interface';\nimport { IxLabelComponent } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.component';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestOverrideDirective } from 'app/modules/test-id/test-override/test-override.directive';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-explorer',\n  templateUrl: './ix-explorer.component.html',\n  styleUrls: ['./ix-explorer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxLabelComponent,\n    MatInput,\n    MatButton,\n    IxIconComponent,\n    TreeModule,\n    MatError,\n    IxErrorsComponent,\n    MatHint,\n    TranslateModule,\n    RequiresRolesDirective,\n    TestDirective,\n    TestOverrideDirective,\n  ],\n})\nexport class IxExplorerComponent implements OnInit, OnChanges, ControlValueAccessor {\n  @Input() label: string;\n  @Input() hint: string;\n  @Input() multiple = false;\n  @Input() tooltip: string;\n  @Input() required: boolean;\n  @Input() root = mntPath;\n  @Input() nodeProvider: TreeNodeProvider;\n  @Input() canCreateDataset = false;\n  @Input() createDatasetProps: Omit<DatasetCreate, 'name'> = {};\n\n  @ViewChild('tree', { static: true }) tree: TreeComponent;\n\n  readonly requiredRoles = [Role.DatasetWrite];\n\n  inputValue = '';\n  value: string | string[];\n  isDisabled = false;\n  nodes: ExplorerNodeData[] = [];\n  loadingError: string;\n\n  onChange: (value: string | string[]) => void = (): void => {};\n  onTouch: () => void = (): void => {};\n\n  readonly ExplorerNodeType = ExplorerNodeType;\n\n  get createDatasetDisabled(): boolean {\n    return !this.parentDatasetName(Array.isArray(this.value) ? this.value[0] : this.value).length\n      || !this.tree.treeModel.selectedLeafNodes.every((node: TreeNode<ExplorerNodeData>) => node.data.isMountpoint)\n      || this.isDisabled;\n  }\n\n  private readonly actionMapping: IActionMapping = {\n    mouse: {\n      dblClick: (tree, node, $event) => {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      },\n      click: (tree, node, $event) => {\n        TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event);\n      },\n    },\n    keys: {\n      [KEYS.ENTER]: (tree, node, $event) => {\n        TREE_ACTIONS.TOGGLE_SELECTED(tree, node, $event);\n      },\n    },\n  };\n\n  treeOptions: ITreeOptions = {\n    idField: 'path',\n    displayField: 'name',\n    getChildren: (node: TreeNode<ExplorerNodeData>) => firstValueFrom(this.loadChildren(node)),\n    actionMapping: this.actionMapping,\n    useTriState: false,\n  };\n\n  constructor(\n    public controlDirective: NgControl,\n    private cdr: ChangeDetectorRef,\n    private matDialog: MatDialog,\n    private translate: TranslateService,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  ngOnChanges(changes: IxSimpleChanges<this>): void {\n    if ('multiple' in changes) {\n      this.treeOptions.useCheckbox = this.multiple;\n    }\n\n    if ('nodeProvider' in changes || 'root' in changes) {\n      this.setInitialNode();\n      this.cdr.markForCheck();\n    }\n  }\n\n  ngOnInit(): void {\n    this.setInitialNode();\n  }\n\n  writeValue(value: string | string[]): void {\n    this.value = value;\n    this.updateInputValue();\n    this.selectTreeNodes(Array.isArray(value) ? value : [value]);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(onChange: (value: string | string[]) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouch = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  onNodeSelect(event: { node: TreeNode<ExplorerNodeData> }): void {\n    if (this.multiple) {\n      this.selectTreeNodes([\n        ...Object.keys(this.tree.treeModel.selectedLeafNodeIds),\n        event.node.id as string,\n      ]);\n    } else {\n      this.selectTreeNodes([event.node.id as string]);\n    }\n\n    this.onSelectionChanged();\n  }\n\n  onNodeDeselect(event: { node: TreeNode<ExplorerNodeData> }): void {\n    if (this.multiple) {\n      this.selectTreeNodes(\n        Object.keys(this.tree.treeModel.selectedLeafNodeIds).filter((node) => node !== event.node.id),\n      );\n    } else {\n      this.selectTreeNodes([]);\n    }\n\n    this.onSelectionChanged();\n  }\n\n  ariaLabel(node: TreeNode<ExplorerNodeData>): string {\n    return this.translate.instant(\n      'Highlighted path is {node}. Press \\'Space\\' to {expand}. Press \\'Enter\\' to {select}.',\n      {\n        expand: node?.isExpanded ? 'Collapse' : 'Expand',\n        select: node?.isSelected ? 'Unselect' : 'Select',\n        node: node.data.path.replace(/.{1}/g, '$&,').replace(/\\//g, 'slash'),\n      },\n    );\n  }\n\n  onSelectionChanged(): void {\n    let newValue: string[] | string = Object.entries(this.tree.treeModel.selectedLeafNodeIds)\n      .filter(([, isSelected]) => isSelected)\n      .map(([nodeId]) => nodeId);\n\n    if (!this.multiple) {\n      newValue = newValue[0];\n    }\n\n    if (newValue === this.value) {\n      return;\n    }\n\n    this.value = newValue;\n    this.updateInputValue();\n    this.onChange(newValue);\n  }\n\n  onInputChanged(inputValue: string): void {\n    this.inputValue = inputValue;\n    this.value = this.multiple ? inputValue.split(',') : inputValue;\n    this.selectTreeNodes(Array.isArray(this.value) ? this.value : [this.value]);\n    this.onChange(this.value);\n  }\n\n  isPathSelected(path: string): boolean {\n    return typeof this.value === 'string' ? this.value === path : this.value?.some((content: string) => content === path);\n  }\n\n  parentDatasetName(path: string): string {\n    return (!path || path === this.root) ? '' : path.replace(`${this.root}/`, '');\n  }\n\n  createDataset(): void {\n    this.matDialog.open(CreateDatasetDialogComponent, {\n      data: {\n        parentId: this.parentDatasetName(Array.isArray(this.value) ? this.value[0] : this.value),\n        dataset: this.createDatasetProps,\n      },\n    }).afterClosed()\n      .pipe(untilDestroyed(this))\n      .subscribe((dataset: Dataset) => {\n        if (!dataset) {\n          return;\n        }\n\n        const parentNode = this.tree.treeModel.selectedLeafNodes[0] as TreeNode<ExplorerNodeData>;\n        parentNode?.expand();\n\n        this.setInitialNode();\n        this.writeValue(`${this.root}/${dataset.name}`);\n        this.onChange(this.value);\n        this.tree.treeModel.update();\n      });\n  }\n\n  /**\n   * Provides typing in templates\n   */\n  typeNode(node: TreeNode<ExplorerNodeData>): TreeNode<ExplorerNodeData> {\n    return node;\n  }\n\n  private setInitialNode(): void {\n    this.nodes = [\n      {\n        path: this.root,\n        name: this.root,\n        hasChildren: true,\n        type: ExplorerNodeType.Directory,\n        isMountpoint: true,\n      },\n    ];\n  }\n\n  private updateInputValue(): void {\n    this.inputValue = Array.isArray(this.value) ? this.value.filter((value) => value.length).join(',') : this.value || '';\n  }\n\n  private selectTreeNodes(nodeIds: string[]): void {\n    const treeState = {\n      ...this.tree.treeModel.getState(),\n      selectedLeafNodeIds: nodeIds.reduce((acc, nodeId) => ({ ...acc, [nodeId]: true }), {}),\n    };\n\n    this.tree.treeModel.setState(treeState);\n  }\n\n  private loadChildren(node: TreeNode<ExplorerNodeData>): Observable<ExplorerNodeData[]> {\n    this.loadingError = null;\n    this.cdr.markForCheck();\n\n    if (!this.nodeProvider) {\n      return of([]);\n    }\n\n    return this.nodeProvider(node).pipe(\n      catchError((error: WebSocketError | Error) => {\n        this.loadingError = 'reason' in error ? error.reason : error.message;\n        this.cdr.markForCheck();\n        return of([]);\n      }),\n    );\n  }\n}\n"],"version":3}