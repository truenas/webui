{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-ip-input-with-netmask/ix-ip-input-with-netmask.component.ts","mappings":";;;;;;;;;AAAA,wCAEuB;AACvB,0CAAiE;AACjE,iDAAmD;AACnD,mDAAmD;AACnD,qDAAsE;AACtE,8CAAsD;AACtD,6GAAwG;AACxG,0GAAqG;AACrG,uGAAkG;AAClG,uEAAmE;AACnE,kEAA8D;AAmBvD,IAAM,6BAA6B,GAAnC,MAAM,6BAA6B;IAcxC,YACU,OAAuB,EACxB,gBAA2B,EAC1B,GAAsB;QAFtB,YAAO,GAAP,OAAO,CAAgB;QACxB,qBAAgB,GAAhB,gBAAgB,CAAW;QAC1B,QAAG,GAAH,GAAG,CAAmB;QAZhC,aAAQ,GAA4B,GAAS,EAAE,GAAE,CAAC,CAAC;QACnD,cAAS,GAAe,GAAS,EAAE,GAAE,CAAC,CAAC;QAEvC,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,EAAE,CAAC;QACb,YAAO,GAAG,EAAE,CAAC;QAEb,mBAAc,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAO5C,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,KAAuB;QACpC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,eAAe,CAAC,MAAuB;QACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAe,CAAC;QACtC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,aAAqB;QAC9B,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,QAAiC;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,iBAAiB,CAAC,SAAqB;QACrC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAEO,cAAc;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;YAC7D,KAAK,GAAG,EAAE,CAAC;QACb,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAEO,oBAAoB,CAAC,aAAa,GAAG,EAAE;QAC7C,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEO,iBAAiB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,KAAK,EAAE,CAAC;YACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;QACzD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC;IACH,CAAC;;AAzEU,sEAA6B;;;;;;;oBACvC,YAAK;sBACL,YAAK;uBACL,YAAK;;wCAHK,6BAA6B;IAjBzC,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,0BAA0B;QACpC,8DAAwD;QAExD,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,qCAAgB;YAChB,gBAAQ;YACR,kBAAS;YACT,gBAAS;YACT,uCAAiB;YACjB,sBAAe;YACf,8BAAa;YACb,+CAAqB;SACtB;KACF,CAAC;GACW,6BAA6B,CA0EzC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-ip-input-with-netmask/ix-ip-input-with-netmask.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatOption } from '@angular/material/core';\nimport { MatInput } from '@angular/material/input';\nimport { MatSelectChange, MatSelect } from '@angular/material/select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IxErrorsComponent } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\nimport { IxLabelComponent } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.component';\nimport { TestOverrideDirective } from 'app/modules/test-id/test-override/test-override.directive';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { NetworkService } from 'app/services/network.service';\n\n@Component({\n  selector: 'ix-ip-input-with-netmask',\n  templateUrl: './ix-ip-input-with-netmask.component.html',\n  styleUrls: ['./ix-ip-input-with-netmask.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxLabelComponent,\n    MatInput,\n    MatSelect,\n    MatOption,\n    IxErrorsComponent,\n    TranslateModule,\n    TestDirective,\n    TestOverrideDirective,\n  ],\n})\nexport class IxIpInputWithNetmaskComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() tooltip: string;\n  @Input() required: boolean;\n\n  onChange: (value: string) => void = (): void => {};\n  onTouched: () => void = (): void => {};\n\n  isDisabled = false;\n  address = '';\n  netmask = '';\n\n  netmaskOptions = this.network.getV4Netmasks();\n\n  constructor(\n    private network: NetworkService,\n    public controlDirective: NgControl,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  onAddressInput(input: HTMLInputElement): void {\n    this.address = input.value;\n    this.onValueChanged();\n    this.setNetmaskOptions();\n  }\n\n  onNetmaskChange($event: MatSelectChange): void {\n    this.netmask = $event.value as string;\n    this.onValueChanged();\n  }\n\n  writeValue(ipWithNetmask: string): void {\n    this.setAddressAndNetmask(ipWithNetmask);\n    this.setNetmaskOptions();\n  }\n\n  registerOnChange(onChange: (value: string) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  private onValueChanged(): void {\n    let value = this.address + '/' + this.netmask;\n    if (this.address.trim() === '' || this.address === undefined) {\n      value = '';\n    }\n\n    this.onChange(value);\n  }\n\n  private setAddressAndNetmask(ipWithNetmask = ''): void {\n    const [address, netmask] = ipWithNetmask.split('/');\n    this.address = address;\n    this.netmask = netmask;\n  }\n\n  private setNetmaskOptions(): void {\n    const isIp6 = this.address.includes(':');\n    if (isIp6) {\n      this.netmaskOptions = this.network.getV6PrefixLength();\n    } else {\n      this.netmaskOptions = this.network.getV4Netmasks();\n    }\n  }\n}\n"],"version":3}