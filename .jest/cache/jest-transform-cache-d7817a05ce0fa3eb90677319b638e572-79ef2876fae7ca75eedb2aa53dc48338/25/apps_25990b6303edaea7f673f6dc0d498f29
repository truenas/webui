117cf0f398f4e736ba7211ea8016450e
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.helptextApps = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
exports.helptextApps = {
    choosePool: {
        jobTitle: (0, ngx_translate_extract_marker_1.marker)('Configuring...'),
        unsetPool: {
            confirm: {
                title: (0, ngx_translate_extract_marker_1.marker)('Unset Pool'),
                message: (0, ngx_translate_extract_marker_1.marker)('Confirm to unset pool?'),
                button: (0, ngx_translate_extract_marker_1.marker)('Unset'),
            },
        },
    },
    message: {
        loading: (0, ngx_translate_extract_marker_1.marker)('Loading...'),
        not_configured: (0, ngx_translate_extract_marker_1.marker)('Applications not configured'),
        not_running: (0, ngx_translate_extract_marker_1.marker)('Applications are not running'),
        no_search_result: (0, ngx_translate_extract_marker_1.marker)('No Search Results.'),
        no_installed: (0, ngx_translate_extract_marker_1.marker)('No Applications Installed'),
        no_installed_message: (0, ngx_translate_extract_marker_1.marker)('Applications you install will automatically appear here. Click below and browse the TrueNAS catalog to get started.'),
    },
    catalogMessage: {
        loading: (0, ngx_translate_extract_marker_1.marker)('Loading...'),
        no_search_result: (0, ngx_translate_extract_marker_1.marker)('No Search Results.'),
        no_catalog: (0, ngx_translate_extract_marker_1.marker)('Unable to retrieve Available Applications'),
        no_application: (0, ngx_translate_extract_marker_1.marker)('No Applications are Available'),
    },
    installing: (0, ngx_translate_extract_marker_1.marker)('Installing'),
    updating: (0, ngx_translate_extract_marker_1.marker)('Updating'),
    refreshing: (0, ngx_translate_extract_marker_1.marker)('Refreshing'),
    starting: (0, ngx_translate_extract_marker_1.marker)('Starting'),
    stopping: (0, ngx_translate_extract_marker_1.marker)('Stopping'),
    settings: (0, ngx_translate_extract_marker_1.marker)('Settings'),
    choose: (0, ngx_translate_extract_marker_1.marker)('Choose Pool'),
    advanced: (0, ngx_translate_extract_marker_1.marker)('Advanced Settings'),
    unset_pool: (0, ngx_translate_extract_marker_1.marker)('Unset Pool'),
    dockerSettings: {
        addressPoolsSize: (0, ngx_translate_extract_marker_1.marker)('Network size of each docker network which will be cut off from base subnet.'),
    },
    bulkActions: {
        title: (0, ngx_translate_extract_marker_1.marker)('Bulk actions'),
        finished: (0, ngx_translate_extract_marker_1.marker)('Requested action performed for selected Applications'),
    },
    launch: (0, ngx_translate_extract_marker_1.marker)('Launch Docker Image'),
    catalogs: (0, ngx_translate_extract_marker_1.marker)('Catalogs'),
    noPool: {
        title: (0, ngx_translate_extract_marker_1.marker)('No Pools Found'),
        message: (0, ngx_translate_extract_marker_1.marker)('At least one pool must be available to use apps'),
        action: (0, ngx_translate_extract_marker_1.marker)('Create Pool'),
    },
    apps: {
        delete_dialog: {
            title: (0, ngx_translate_extract_marker_1.marker)('Delete'),
            job: (0, ngx_translate_extract_marker_1.marker)('Deleting...'),
        },
        upgrade_dialog: {
            title: (0, ngx_translate_extract_marker_1.marker)('Upgrade'),
            job: (0, ngx_translate_extract_marker_1.marker)('Upgrading...'),
        },
        rollback_dialog: {
            version: {
                tooltip: (0, ngx_translate_extract_marker_1.marker)('Enter the version to roll back to.'),
            },
            job: (0, ngx_translate_extract_marker_1.marker)('Rolling back...'),
        },
    },
    appForm: {
        title: (0, ngx_translate_extract_marker_1.marker)('Install Application'),
        editTitle: (0, ngx_translate_extract_marker_1.marker)('Edit Application Settings'),
        parseError: {
            title: (0, ngx_translate_extract_marker_1.marker)('Error'),
            message: (0, ngx_translate_extract_marker_1.marker)('Error detected reading App'),
        },
        catalog: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Catalog'),
            tooltip: (0, ngx_translate_extract_marker_1.marker)(''),
        },
        item: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Item'),
            tooltip: (0, ngx_translate_extract_marker_1.marker)(''),
        },
        release_name: {
            name: (0, ngx_translate_extract_marker_1.marker)('Name'),
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Application Name'),
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Application name must have the following: \
 1) Lowercase alphanumeric characters can be specified \
 2) Name must start with an alphabetic character and can end with alphanumeric character \
 3) Hyphen \'-\' is allowed but not as the first or last character e.g abc123, abc, abcd-1232'),
        },
        networking: (0, ngx_translate_extract_marker_1.marker)('Networking'),
        externalLabel: (0, ngx_translate_extract_marker_1.marker)('Add External Interfaces'),
    },
    appWizard: {
        nameGroup: {
            label: 'Application Name',
            version: 'Version',
            nameValidationRules: (0, ngx_translate_extract_marker_1.marker)('Name must start and end with a lowercase alphanumeric character. \
 Hyphen is allowed in the middle e.g abc123, abc, abcd-1232'),
        },
    },
    podConsole: {
        nopod: {
            title: (0, ngx_translate_extract_marker_1.marker)('No Pods Found'),
            message: (0, ngx_translate_extract_marker_1.marker)('At least one pod must be available'),
        },
        choosePod: {
            title: (0, ngx_translate_extract_marker_1.marker)('Choose pod'),
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Pods'),
            action: (0, ngx_translate_extract_marker_1.marker)('Choose'),
        },
        chooseContainer: {
            title: (0, ngx_translate_extract_marker_1.marker)('Choose container'),
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Containers'),
        },
        chooseCommand: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Commands'),
        },
    },
    podLogs: {
        title: (0, ngx_translate_extract_marker_1.marker)('Choose log'),
        chooseBtn: (0, ngx_translate_extract_marker_1.marker)('Choose'),
        downloadBtn: (0, ngx_translate_extract_marker_1.marker)('Download Logs'),
        nopod: {
            title: (0, ngx_translate_extract_marker_1.marker)('No Pods Found'),
            message: (0, ngx_translate_extract_marker_1.marker)('Invalid Pod name'),
        },
        chooseApp: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Apps'),
        },
        choosePod: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Pods'),
        },
        chooseContainer: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Containers'),
        },
        tailLines: {
            placeholder: (0, ngx_translate_extract_marker_1.marker)('Tail Lines'),
        },
    },
    actionBtnText: {
        close: (0, ngx_translate_extract_marker_1.marker)('Close'),
        refreshEvents: (0, ngx_translate_extract_marker_1.marker)('Refresh Events'),
    },
    chartEventDialog: {
        noPorts: (0, ngx_translate_extract_marker_1.marker)('No ports are being used.'),
        statusUpToDate: (0, ngx_translate_extract_marker_1.marker)('Up to date'),
        statusUpdateAvailable: (0, ngx_translate_extract_marker_1.marker)('Update available'),
        containerImageStatusUpdateAvailableTo: (0, ngx_translate_extract_marker_1.marker)('Following container images are available to update:\n'),
        statusUpdateAvailableTo: (0, ngx_translate_extract_marker_1.marker)('Available version:\n'),
        tooltipHeader: (0, ngx_translate_extract_marker_1.marker)('Container Images'),
    },
    manageCatalogs: {
        menu: {
            edit: (0, ngx_translate_extract_marker_1.marker)('Edit'),
            refresh: (0, ngx_translate_extract_marker_1.marker)('Refresh'),
            delete: (0, ngx_translate_extract_marker_1.marker)('Delete'),
            summary: (0, ngx_translate_extract_marker_1.marker)('Summary'),
        },
    },
    dockerImages: {
        menu: {
            update: (0, ngx_translate_extract_marker_1.marker)('Update Image'),
            forceDelete: (0, ngx_translate_extract_marker_1.marker)('Force delete'),
            delete: (0, ngx_translate_extract_marker_1.marker)('Delete'),
        },
        columns: {
            id: (0, ngx_translate_extract_marker_1.marker)('Image ID'),
            tags: (0, ngx_translate_extract_marker_1.marker)('Tags'),
            state: '',
        },
        updateAvailable: (0, ngx_translate_extract_marker_1.marker)('Update Available'),
        chooseTag: {
            title: (0, ngx_translate_extract_marker_1.marker)('Choose a Tag'),
            selectTag: {
                placeholder: (0, ngx_translate_extract_marker_1.marker)('Please select a tag'),
            },
            action: (0, ngx_translate_extract_marker_1.marker)('Choose'),
        },
        pulling: (0, ngx_translate_extract_marker_1.marker)('Pulling...'),
    },
    thirdPartyRepoWarning: {
        btnMsg: (0, ngx_translate_extract_marker_1.marker)('Continue'),
        cancelMessage: (0, ngx_translate_extract_marker_1.marker)('Cancel'),
        title: (0, ngx_translate_extract_marker_1.marker)('Warning'),
        message: (0, ngx_translate_extract_marker_1.marker)(`iXsystems does not audit or otherwise validate the contents of third-party applications catalogs. \
    It is incumbent on the user to verify that the new catalog is from a trusted source and that the third-party \
    properly audits its chart contents. Failure to exercise due diligence may expose the user and their data to \
    some or all of the following:<br/>\
    <ul>
      <li>Malicious software</li>
      <li>Broken services on TrueNAS host</li>
      <li>Service disruption on TrueNAS host</li>
      <li>Broken filesystem permissions on Host or within application</li>
      <li>Unexpected deletion of user data</li>
      <li>Unsafe service configuration in application</li>
      <li>Degradation of TrueNAS host performance and stability</li>
    </ul>`),
    },
    catalogForm: {
        title: (0, ngx_translate_extract_marker_1.marker)('Add Catalog'),
        editTitle: (0, ngx_translate_extract_marker_1.marker)('Edit Catalog'),
        name: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specify name to be used to lookup catalog.'),
        },
        forceCreate: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Add catalog to system even if some trains are unhealthy.'),
        },
        repository: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specify a valid git repository uri.'),
        },
        preferredTrains: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specify trains from which UI should retrieve available applications for the catalog.'),
        },
        installNvidiaDriver: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specify whether to install NVIDIA driver or not.'),
        },
        branch: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specify branch of git repository to use for the catalog.'),
        },
    },
    pullImageForm: {
        username: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please input user name.'),
        },
        password: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please input password.'),
        },
        imageName: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specify the name of the image to pull. Format for the name is "registry/repo/image"'),
        },
        imageTags: {
            tooltip: (0, ngx_translate_extract_marker_1.marker)('Please specifies tag of the image'),
        },
    },
    dockerHubRateLimit: {
        message: (0, ngx_translate_extract_marker_1.marker)('User limit to Docker Hub has almost been reached or has already been reached. The installation\
     process may stall as images cannot be pulled. The current limit will be renewed in {seconds}. The application\
      can still be staged for installation.'),
    },
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,