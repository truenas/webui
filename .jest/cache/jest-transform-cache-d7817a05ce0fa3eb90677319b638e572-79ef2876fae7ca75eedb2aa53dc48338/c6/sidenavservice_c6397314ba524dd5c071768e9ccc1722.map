{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/sidenav.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/sidenav.service.ts"],"sourcesContent":["import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Injectable, signal } from '@angular/core';\nimport { MatDrawerMode, MatSidenav } from '@angular/material/sidenav';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { take, filter, distinctUntilChanged } from 'rxjs';\nimport { SidenavStatusData } from 'app/interfaces/events/sidenav-status-event.interface';\nimport { SubMenuItem } from 'app/interfaces/menu-item.interface';\nimport { AppState } from 'app/store';\nimport { waitForPreferences } from 'app/store/preferences/preferences.selectors';\nimport { sidenavIndicatorPressed, sidenavUpdated } from 'app/store/topbar/topbar.actions';\n\nexport const collapsedMenuClass = 'collapsed-menu';\n\n@UntilDestroy()\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidenavService {\n  sidenav: MatSidenav;\n  isOpen = true;\n  // TODO: How is this different from isMenuCollapsed?\n  isCollapsed = false;\n  mode: MatDrawerMode = 'over';\n  isOpenSecondaryMenu = false;\n  menuName: string;\n  subs: SubMenuItem[];\n\n  get sidenavWidth(): string {\n    const iconified = this.isMenuCollapsed;\n    if (this.isOpen && iconified && this.mode === 'side') {\n      return '48px';\n    }\n    if (this.isOpen && !iconified && this.mode === 'side') {\n      return '240px';\n    }\n    return '0px';\n  }\n\n  readonly isMobile = signal(false);\n\n  get isMenuCollapsed(): boolean {\n    return document.getElementsByClassName(collapsedMenuClass).length === 1;\n  }\n\n  set isMenuCollapsed(isCollapsed: boolean) {\n    const appBody = document.body;\n\n    if (isCollapsed) {\n      appBody.classList.add(collapsedMenuClass);\n    } else {\n      appBody.classList.remove(collapsedMenuClass);\n    }\n\n    for (const element of document.getElementsByClassName('has-submenu') as HTMLCollectionOf<HTMLElement>) {\n      element.classList.remove('open');\n    }\n  }\n\n  constructor(\n    private router: Router,\n    private breakpointObserver: BreakpointObserver,\n    private store$: Store<AppState>,\n    private actions$: Actions,\n  ) {\n    this.listenForScreenSizeChanges();\n    this.listenForRouteChanges();\n    this.listenForSidenavIndicatorPressed();\n  }\n\n  setSidenav(sidenav: MatSidenav): void {\n    this.sidenav = sidenav;\n  }\n\n  setSidenavStatus(sidenav: SidenavStatusData): void {\n    this.isOpen = sidenav.isOpen;\n    this.mode = sidenav.mode;\n    this.isCollapsed = sidenav.isCollapsed;\n  }\n\n  toggleSecondaryMenu(menuInfo?: [string, SubMenuItem[]]): void {\n    const [state, subItems] = menuInfo || [];\n    if ((this.isOpenSecondaryMenu && !menuInfo) || (this.isOpenSecondaryMenu && state === this.menuName)) {\n      this.isOpenSecondaryMenu = false;\n      this.subs = [];\n    } else if (menuInfo) {\n      this.menuName = state;\n      this.subs = subItems;\n      this.isOpenSecondaryMenu = true;\n    }\n  }\n\n  closeSecondaryMenu(): void {\n    this.isOpenSecondaryMenu = false;\n  }\n\n  private listenForScreenSizeChanges(): void {\n    this.breakpointObserver\n      .observe([Breakpoints.XSmall, Breakpoints.Small])\n      .pipe(untilDestroyed(this))\n      .subscribe((state) => {\n        const isMobile = state.matches;\n        this.isMobile.set(isMobile);\n        this.isOpen = !isMobile;\n        this.mode = isMobile ? 'over' : 'side';\n        if (!isMobile) {\n          // TODO: This is hack to resolve issue described here: https://ixsystems.atlassian.net/browse/NAS-110404\n          setTimeout(() => {\n            this.sidenav?.open();\n          });\n          this.store$.pipe(\n            waitForPreferences,\n            take(1),\n            filter((preferences) => Boolean(preferences.sidenavStatus)),\n          ).subscribe(({ sidenavStatus }) => {\n            this.isMenuCollapsed = sidenavStatus.isCollapsed;\n            this.isCollapsed = sidenavStatus.isCollapsed;\n          });\n        } else {\n          this.isMenuCollapsed = false;\n          this.isOpen = false;\n        }\n      });\n  }\n\n  private listenForSidenavIndicatorPressed(): void {\n    this.actions$\n      .pipe(\n        ofType(sidenavIndicatorPressed),\n        distinctUntilChanged(),\n      ).subscribe(() => {\n        this.toggleSidenav();\n      });\n  }\n\n  private toggleSidenav(): void {\n    if (this.isMobile()) {\n      this.sidenav?.toggle();\n    } else {\n      this.sidenav?.open();\n      this.isMenuCollapsed = !this.isMenuCollapsed;\n    }\n\n    const data: SidenavStatusData = {\n      isOpen: this.sidenav.opened,\n      mode: this.sidenav.mode,\n      isCollapsed: this.isMenuCollapsed,\n    };\n\n    if (!this.isMobile()) {\n      this.store$.dispatch(sidenavUpdated(data));\n    }\n\n    this.setSidenavStatus(data);\n  }\n\n  private listenForRouteChanges(): void {\n    this.router.events.pipe(\n      filter((routeChange) => routeChange instanceof NavigationEnd && this.isMobile()),\n    ).subscribe(() => {\n      this.sidenav?.close();\n    });\n  }\n}\n"],"version":3}