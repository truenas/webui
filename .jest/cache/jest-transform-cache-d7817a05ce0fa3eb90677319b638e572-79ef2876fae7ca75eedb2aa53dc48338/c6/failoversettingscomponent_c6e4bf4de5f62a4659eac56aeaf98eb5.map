{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/failover-settings/failover-settings.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/failover-settings/failover-settings.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit,\n} from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Store } from '@ngrx/store';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\nimport {\n  filter, map, switchMap, take,\n} from 'rxjs/operators';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { UiSearchDirective } from 'app/directives/ui-search.directive';\nimport { Role } from 'app/enums/role.enum';\nimport { helptextSystemFailover } from 'app/helptext/system/failover';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxCheckboxComponent } from 'app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component';\nimport { IxFieldsetComponent } from 'app/modules/forms/ix-forms/components/ix-fieldset/ix-fieldset.component';\nimport { IxInputComponent } from 'app/modules/forms/ix-forms/components/ix-input/ix-input.component';\nimport { FormErrorHandlerService } from 'app/modules/forms/ix-forms/services/form-error-handler.service';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { failoverElements } from 'app/pages/system/failover-settings/failover-settings.elements';\nimport { AuthService } from 'app/services/auth/auth.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\nimport { WebSocketConnectionService } from 'app/services/websocket-connection.service';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { AppState } from 'app/store';\nimport { haSettingsUpdated } from 'app/store/ha-info/ha-info.actions';\n\n@UntilDestroy({\n  arrayName: 'subscriptions',\n})\n@Component({\n  selector: 'ix-failover-settings',\n  templateUrl: './failover-settings.component.html',\n  styleUrls: ['./failover-settings.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatCard,\n    UiSearchDirective,\n    MatCardContent,\n    MatProgressBar,\n    ReactiveFormsModule,\n    IxFieldsetComponent,\n    IxCheckboxComponent,\n    IxInputComponent,\n    RequiresRolesDirective,\n    MatButton,\n    TestDirective,\n    TranslateModule,\n    AsyncPipe,\n  ],\n})\nexport class FailoverSettingsComponent implements OnInit {\n  protected readonly searchableElements = failoverElements;\n\n  isLoading = false;\n  form = this.formBuilder.group({\n    disabled: [false],\n    master: [true],\n    timeout: [null as number],\n  });\n\n  subscriptions: Subscription[] = [];\n\n  protected readonly requiredRoles = [Role.FailoverWrite];\n\n  submitButtonText$ = this.form.select((values) => {\n    if (!values.master) {\n      return this.translate.instant('Save And Failover');\n    }\n    return this.translate.instant('Save');\n  });\n\n  readonly helptext = helptextSystemFailover;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ws: WebSocketService,\n    private cdr: ChangeDetectorRef,\n    private dialogService: DialogService,\n    private authService: AuthService,\n    private errorHandler: ErrorHandlerService,\n    private formErrorHandler: FormErrorHandlerService,\n    private translate: TranslateService,\n    private snackbar: SnackbarService,\n    private store$: Store<AppState>,\n    private wsManager: WebSocketConnectionService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadFormValues();\n  }\n\n  onSubmit(): void {\n    this.isLoading = true;\n    const values = this.form.getRawValue();\n\n    this.ws.call('failover.update', [values])\n      .pipe(\n        map(() => { this.store$.dispatch(haSettingsUpdated()); }),\n        untilDestroyed(this),\n      )\n      .subscribe({\n        next: () => {\n          this.snackbar.success(this.translate.instant('Settings saved.'));\n          this.isLoading = false;\n          this.cdr.markForCheck();\n\n          if (values.disabled && !values.master) {\n            this.authService.logout().pipe(untilDestroyed(this)).subscribe({\n              next: () => {\n                this.authService.clearAuthToken();\n                this.wsManager.closeWebSocketConnection();\n              },\n            });\n          }\n        },\n        error: (error: unknown) => {\n          this.formErrorHandler.handleWsFormError(error, this.form);\n          this.isLoading = false;\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  onSyncToPeerPressed(): void {\n    this.dialogService.confirm({\n      title: helptextSystemFailover.dialog_sync_to_peer_title,\n      message: helptextSystemFailover.dialog_sync_to_peer_message,\n      buttonText: helptextSystemFailover.dialog_button_ok,\n      secondaryCheckbox: true,\n      secondaryCheckboxText: helptextSystemFailover.dialog_sync_to_peer_checkbox,\n    })\n      .pipe(\n        filter((result) => result.confirmed),\n        switchMap((result) => {\n          this.isLoading = true;\n          this.cdr.markForCheck();\n          return this.ws.call('failover.sync_to_peer', [{ reboot: result.secondaryCheckbox }]);\n        }),\n        untilDestroyed(this),\n      )\n      .subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.snackbar.success(\n            helptextSystemFailover.confirm_dialogs.sync_to_message,\n          );\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.dialogService.error(this.errorHandler.parseError(error));\n        },\n      });\n  }\n\n  onSyncFromPeerPressed(): void {\n    this.dialogService.confirm({\n      title: helptextSystemFailover.dialog_sync_from_peer_title,\n      message: helptextSystemFailover.dialog_sync_from_peer_message,\n      buttonText: helptextSystemFailover.dialog_button_ok,\n    })\n      .pipe(\n        filter(Boolean),\n        switchMap(() => {\n          this.isLoading = true;\n          this.cdr.markForCheck();\n          return this.ws.call('failover.sync_from_peer');\n        }),\n        untilDestroyed(this),\n      )\n      .subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.snackbar.success(\n            this.translate.instant(helptextSystemFailover.confirm_dialogs.sync_from_message),\n          );\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.dialogService.error(this.errorHandler.parseError(error));\n        },\n      });\n  }\n\n  private loadFormValues(): void {\n    this.isLoading = true;\n\n    this.ws.call('failover.config')\n      .pipe(untilDestroyed(this))\n      .subscribe({\n        next: (config) => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.form.patchValue({\n            ...config,\n            master: true,\n          });\n          this.setFailoverConfirmation();\n          this.setFormRelations();\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.dialogService.error(this.errorHandler.parseError(error));\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  private setFailoverConfirmation(): void {\n    this.form.controls.master.valueChanges\n      .pipe(\n        filter((isMaster) => !isMaster),\n        switchMap(() => {\n          return this.dialogService.confirm({\n            title: helptextSystemFailover.master_dialog_title,\n            message: helptextSystemFailover.master_dialog_warning,\n            buttonText: this.translate.instant('Continue'),\n            cancelText: this.translate.instant('Cancel'),\n            disableClose: true,\n          });\n        }),\n        take(1),\n        filter((wasConfirmed) => !wasConfirmed),\n        untilDestroyed(this),\n      )\n      .subscribe(() => {\n        this.form.patchValue({ master: true });\n      });\n  }\n\n  private setFormRelations(): void {\n    this.subscriptions.push(\n      this.form.controls.master.disabledWhile(\n        this.form.select((values) => !values.disabled),\n      ),\n    );\n  }\n}\n"],"version":3}