{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/layout/topbar/power-menu/power-menu.component.ts","mappings":";;;;;;;;;AAAA,wCAAmE;AACnE,qDAAyD;AACzD,iDAA8E;AAC9E,uDAAuD;AACvD,4CAAyC;AACzC,yDAAqE;AACrE,8CAAwE;AACxE,8CAAwC;AACxC,qGAAgG;AAChG,4EAAuE;AACvE,mDAA2C;AAC3C,gDAAqD;AACrD,sEAAkE;AAClE,6EAAwE;AACxE,kGAA6F;AAC7F,uEAAmE;AAqB5D,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAK7B,YACU,SAA2B,EAC3B,aAA4B,EAC5B,MAAc;QAFd,cAAS,GAAT,SAAS,CAAkB;QAC3B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QAPL,aAAQ,GAAG,uBAAc,CAAC,YAAY,CAAC;QACvC,kBAAa,GAAG,CAAC,gBAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,uBAAkB,GAAG,uCAAiB,CAAC;IAM7C,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YACzB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;YACxC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC;YACtD,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;SAC9C,CAAC,CAAC,IAAI,CACL,IAAA,kBAAM,EAAC,OAAO,CAAC,EACf,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YACzB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC;YAC1C,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC;YACxD,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC;SAChD,CAAC,CAAC,IAAI,CACL,IAAA,kBAAM,EAAC,OAAO,CAAC,EACf,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACL,CAAC;;AAnCU,gDAAkB;;;;;;6BAAlB,kBAAkB;IAnB9B,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,eAAe;QACzB,gDAA0C;QAC1C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,sBAAa;YACb,oBAAU;YACV,qBAAc;YACd,mCAAe;YACf,cAAO;YACP,kBAAW;YACX,sBAAe;YACf,iDAAsB;YACtB,uCAAiB;YACjB,8BAAa;SACd;KACF,CAAC;GACW,kBAAkB,CAoC9B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/layout/topbar/power-menu/power-menu.component.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatMenuTrigger, MatMenu, MatMenuItem } from '@angular/material/menu';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { UiSearchDirective } from 'app/directives/ui-search.directive';\nimport { Role } from 'app/enums/role.enum';\nimport { helptextTopbar } from 'app/helptext/topbar';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { powerMenuElements } from 'app/modules/layout/topbar/power-menu/power-menu.elements';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-power-menu',\n  templateUrl: './power-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatIconButton,\n    MatTooltip,\n    MatMenuTrigger,\n    IxIconComponent,\n    MatMenu,\n    MatMenuItem,\n    TranslateModule,\n    RequiresRolesDirective,\n    UiSearchDirective,\n    TestDirective,\n  ],\n})\nexport class PowerMenuComponent {\n  protected readonly tooltips = helptextTopbar.mat_tooltips;\n  protected readonly requiredRoles = [Role.FullAdmin];\n  protected searchableElements = powerMenuElements;\n\n  constructor(\n    private translate: TranslateService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) { }\n\n  onReboot(): void {\n    this.dialogService.confirm({\n      title: this.translate.instant('Restart'),\n      message: this.translate.instant('Restart the system?'),\n      buttonText: this.translate.instant('Restart'),\n    }).pipe(\n      filter(Boolean),\n      untilDestroyed(this),\n    ).subscribe(() => {\n      this.router.navigate(['/system-tasks/restart'], { skipLocationChange: true });\n    });\n  }\n\n  onShutdown(): void {\n    this.dialogService.confirm({\n      title: this.translate.instant('Shut down'),\n      message: this.translate.instant('Shut down the system?'),\n      buttonText: this.translate.instant('Shut Down'),\n    }).pipe(\n      filter(Boolean),\n      untilDestroyed(this),\n    ).subscribe(() => {\n      this.router.navigate(['/system-tasks/shutdown'], { skipLocationChange: true });\n    });\n  }\n}\n"],"version":3}