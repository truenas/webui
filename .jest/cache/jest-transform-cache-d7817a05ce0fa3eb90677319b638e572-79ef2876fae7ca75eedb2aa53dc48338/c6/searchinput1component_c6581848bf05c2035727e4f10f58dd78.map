{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/search-input1/search-input1.component.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wCASuB;AACvB,mDAAyD;AACzD,yDAAqE;AACrE,8CAAsD;AACtD,+BAAmE;AAEnE,6EAAwE;AACxE,uEAAmE;;AAEnE;;GAEG;AAeI,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAA3B;QAEI,aAAQ,GAAG,KAAK;QAChB,UAAK,GAAG,EAAE;QACV,cAAS,GAAG,MAAM;QAElB,WAAM,GAAG,IAAA,aAAM,GAAU;QASlC,gBAAW,GAAG,EAAE,CAAC;QACjB,2BAAsB,GAAG,IAAI,cAAO,EAAU,CAAC;KAuChD;IA5CC,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;IAKD,WAAW,CAAC,OAA8B;;QACxC,IAAI,CAAA,MAAA,OAAO,CAAC,QAAQ,0CAAE,aAAa,OAAK,MAAA,OAAO,CAAC,QAAQ,0CAAE,YAAY,CAAA,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC7F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,CAAA,MAAA,OAAO,CAAC,KAAK,0CAAE,aAAa,OAAK,MAAA,OAAO,CAAC,KAAK,0CAAE,YAAY,CAAA,EAAE,CAAC;YACjE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;QAChD,CAAC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEO,wBAAwB;QAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAC9B,IAAA,mBAAY,EAAC,GAAG,CAAC,EACjB,IAAA,2BAAoB,GAAE,EACtB,IAAA,8BAAc,EAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,iBAAiB,CAAC,KAAa;QACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;;AAtDU,sDAAqB;;uBAC/B,kBAAW,SAAC,gBAAgB,cAC5B,YAAK;oBACL,YAAK;wBACL,YAAK;;oBAIL,gBAAS,SAAC,eAAe;4BAEzB,mBAAY,SAAC,OAAO;;gCAVV,qBAAqB;IAdjC,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,mDAA6C;QAE7C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,mCAAe;YACf,sBAAe;YACf,sBAAc;YACd,8BAAa;SACd;KACF,CAAC;GACW,qBAAqB,CAuDjC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/search-input1/search-input1.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener, Input,\n  ViewChild,\n  OnInit,\n  OnChanges,\n  HostBinding, output,\n} from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\nimport { IxSimpleChanges } from 'app/interfaces/simple-changes.interface';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n/**\n * @deprecated Try ix-basic-search instead.\n */\n@UntilDestroy()\n@Component({\n  selector: 'ix-search-input1',\n  templateUrl: './search-input1.component.html',\n  styleUrls: ['./search-input1.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxIconComponent,\n    TranslateModule,\n    MatInputModule,\n    TestDirective,\n  ],\n})\nexport class SearchInput1Component implements OnInit, OnChanges {\n  @HostBinding('class.disabled')\n  @Input() disabled = false;\n  @Input() value = '';\n  @Input() maxLength = 524288;\n\n  readonly search = output<string>();\n\n  @ViewChild('ixSearchInput') input: ElementRef<HTMLInputElement>;\n\n  @HostListener('click')\n  onHostClicked(): void {\n    this.input.nativeElement.focus();\n  }\n\n  searchValue = '';\n  searchValueEmitHandler = new Subject<string>();\n\n  ngOnChanges(changes: IxSimpleChanges<this>): void {\n    if (changes.disabled?.previousValue !== changes.disabled?.currentValue && !!this.searchValue) {\n      this.updateSearchValue(this.searchValue);\n    }\n\n    if (changes.value?.previousValue !== changes.value?.currentValue) {\n      this.searchValue = changes.value.currentValue;\n    }\n  }\n\n  ngOnInit(): void {\n    this.searchValue = this.value;\n    this.handleSearchValueChanges();\n  }\n\n  onResetInput(): void {\n    this.updateSearchValue('');\n  }\n\n  onInput(value: string): void {\n    this.updateSearchValue(value);\n  }\n\n  private handleSearchValueChanges(): void {\n    this.searchValueEmitHandler.pipe(\n      debounceTime(250),\n      distinctUntilChanged(),\n      untilDestroyed(this),\n    ).subscribe((value: string) => {\n      this.search.emit(value);\n    });\n  }\n\n  private updateSearchValue(value: string): void {\n    this.searchValue = value;\n    this.searchValueEmitHandler.next(value);\n  }\n}\n"],"version":3}