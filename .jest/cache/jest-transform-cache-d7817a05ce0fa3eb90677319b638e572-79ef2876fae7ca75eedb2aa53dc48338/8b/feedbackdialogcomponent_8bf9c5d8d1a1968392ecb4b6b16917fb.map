{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/feedback/components/feedback-dialog/feedback-dialog.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/feedback/components/feedback-dialog/feedback-dialog.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit,\n} from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconButton } from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA, MatDialogRef, MatDialogTitle, MatDialogClose,\n} from '@angular/material/dialog';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport {\n  Observable, of,\n} from 'rxjs';\nimport { mapToOptions } from 'app/helpers/options.helper';\nimport { Option } from 'app/interfaces/option.interface';\nimport { FileReviewComponent } from 'app/modules/feedback/components/file-review/file-review.component';\nimport { FileTicketComponent } from 'app/modules/feedback/components/file-ticket/file-ticket.component';\nimport { FileTicketLicensedComponent } from 'app/modules/feedback/components/file-ticket-licensed/file-ticket-licensed.component';\nimport { FeedbackType, feedbackTypesLabels } from 'app/modules/feedback/interfaces/feedback.interface';\nimport { FeedbackService } from 'app/modules/feedback/services/feedback.service';\nimport { IxButtonGroupComponent } from 'app/modules/forms/ix-forms/components/ix-button-group/ix-button-group.component';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { FakeProgressBarComponent } from 'app/modules/loader/components/fake-progress-bar/fake-progress-bar.component';\nimport { CastPipe } from 'app/modules/pipes/cast/cast.pipe';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { SystemGeneralService } from 'app/services/system-general.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-feedback-dialog',\n  templateUrl: './feedback-dialog.component.html',\n  styleUrls: ['./feedback-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    FakeProgressBarComponent,\n    MatDialogTitle,\n    MatIconButton,\n    MatDialogClose,\n    TestDirective,\n    IxIconComponent,\n    NgxSkeletonLoaderModule,\n    IxButtonGroupComponent,\n    ReactiveFormsModule,\n    FileReviewComponent,\n    FileTicketLicensedComponent,\n    FileTicketComponent,\n    TranslateModule,\n    CastPipe,\n    AsyncPipe,\n  ],\n})\nexport class FeedbackDialogComponent implements OnInit {\n  protected isLoading = false;\n  protected isLoadingTypes = false;\n  protected typeControl = new FormControl(undefined as FeedbackType);\n  protected feedbackTypeOptions$: Observable<Option[]> = of(mapToOptions(feedbackTypesLabels, this.translate));\n  protected isEnterprise$ = this.systemGeneralService.isEnterprise$;\n  protected allowedTypes: FeedbackType[] = [];\n\n  get isReview(): boolean {\n    return this.typeControl.value === FeedbackType.Review;\n  }\n\n  constructor(\n    private feedbackService: FeedbackService,\n    private translate: TranslateService,\n    private cdr: ChangeDetectorRef,\n    private systemGeneralService: SystemGeneralService,\n    protected dialogRef: MatDialogRef<FeedbackDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private requestedType: FeedbackType,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadFeedbackTypes();\n  }\n\n  onIsLoadingChange(isLoading: boolean): void {\n    this.isLoading = isLoading;\n\n    if (isLoading) {\n      this.typeControl.disable();\n      this.dialogRef.disableClose = true;\n    } else {\n      this.typeControl.enable();\n      this.dialogRef.disableClose = false;\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  private loadFeedbackTypes(): void {\n    this.isLoading = true;\n    this.isLoadingTypes = true;\n    this.cdr.markForCheck();\n\n    this.feedbackService.checkIfReviewAllowed()\n      .pipe(untilDestroyed(this))\n      .subscribe((isReviewAllowed) => {\n        this.allowedTypes = [];\n\n        if (isReviewAllowed) {\n          this.allowedTypes.push(FeedbackType.Review);\n        }\n\n        this.allowedTypes.push(FeedbackType.Bug);\n\n        const allowedOptions = this.allowedTypes.map((type) => ({\n          label: this.translate.instant(feedbackTypesLabels.get(type)),\n          value: type,\n        }));\n\n        this.feedbackTypeOptions$ = of(allowedOptions);\n\n        this.pickType();\n\n        this.isLoading = false;\n        this.isLoadingTypes = false;\n        this.cdr.markForCheck();\n      });\n  }\n\n  private pickType(): void {\n    if (this.requestedType && this.allowedTypes.includes(this.requestedType)) {\n      this.typeControl.setValue(this.requestedType);\n    } else {\n      this.typeControl.setValue(this.allowedTypes[0]);\n    }\n  }\n}\n"],"version":3}