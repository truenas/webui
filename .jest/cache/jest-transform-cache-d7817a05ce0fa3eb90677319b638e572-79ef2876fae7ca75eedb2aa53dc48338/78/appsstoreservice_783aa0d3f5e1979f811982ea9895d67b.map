{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/store/apps-store.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/apps/store/apps-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { ComponentStore } from '@ngrx/component-store';\nimport {\n  EMPTY,\n  Observable, catchError, combineLatest, of, switchMap, tap,\n} from 'rxjs';\nimport { AppExtraCategory } from 'app/enums/app-extra-category.enum';\nimport { AvailableApp } from 'app/interfaces/available-app.interface';\nimport { ApplicationsService } from 'app/pages/apps/services/applications.service';\nimport { ErrorHandlerService } from 'app/services/error-handler.service';\n\nexport interface AppsByCategory {\n  title: string;\n  apps: AvailableApp[];\n  totalApps: number;\n  category: string;\n}\n\nexport interface AppsState {\n  availableApps: AvailableApp[];\n  latestApps: AvailableApp[];\n  recommendedApps: AvailableApp[];\n  categories: string[];\n  isLoading: boolean;\n}\n\nconst initialState: AppsState = {\n  availableApps: [],\n  recommendedApps: [],\n  latestApps: [],\n  categories: [],\n  isLoading: false,\n};\n\n@UntilDestroy()\n@Injectable()\nexport class AppsStore extends ComponentStore<AppsState> {\n  readonly isLoading$ = this.select((state) => state.isLoading);\n\n  readonly recommendedApps$ = this.select((state) => state.recommendedApps);\n  readonly latestApps$ = this.select((state) => state.latestApps);\n  readonly appsCategories$ = this.select((state) => [\n    ...state.categories,\n    AppExtraCategory.NewAndUpdated,\n    AppExtraCategory.Recommended,\n  ]);\n  readonly availableApps$ = this.select((state) => state.availableApps);\n\n  constructor(\n    private errorHandler: ErrorHandlerService,\n    private appsService: ApplicationsService,\n  ) {\n    super(initialState);\n    this.initialize();\n  }\n\n  private handleError(error: unknown): void {\n    this.errorHandler.showErrorModal(error);\n    this.patchState((state: AppsState): AppsState => {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    });\n  }\n\n  readonly initialize = this.effect((triggers$: Observable<void>) => {\n    return triggers$.pipe(\n      switchMap(() => this.loadCatalog()),\n    );\n  });\n\n  loadCatalog(): Observable<unknown> {\n    return of(null).pipe(\n      tap(() => {\n        this.patchState({\n          ...initialState,\n          isLoading: true,\n        });\n      }),\n      switchMap(() => {\n        return combineLatest([\n          this.loadLatestApps(),\n          this.loadAvailableApps(),\n          this.loadCategories(),\n        ]);\n      }),\n      tap(() => {\n        this.patchState((state: AppsState): AppsState => {\n          return {\n            ...state,\n            isLoading: false,\n          };\n        });\n      }),\n      catchError((error) => {\n        this.handleError(error);\n        return EMPTY;\n      }),\n    );\n  }\n\n  private loadLatestApps(): Observable<unknown> {\n    return this.appsService.getLatestApps().pipe(\n      catchError((error) => {\n        this.handleError(error);\n        return of([]);\n      }),\n      tap((latestApps: AvailableApp[]) => {\n        this.patchState((state) => {\n          return {\n            ...state,\n            latestApps,\n          };\n        });\n      }),\n    );\n  }\n\n  private loadAvailableApps(): Observable<unknown> {\n    return this.appsService.getAvailableApps().pipe(\n      catchError((error) => {\n        this.handleError(error);\n        return of([]);\n      }),\n      tap((availableApps: AvailableApp[]) => {\n        this.patchState((state) => {\n          return {\n            ...state,\n            availableApps: [...availableApps],\n            recommendedApps: availableApps\n              .filter((app) => app.recommended)\n              .map((app) => ({ ...app, categories: [...app.categories, AppExtraCategory.Recommended] })),\n          };\n        });\n      }),\n    );\n  }\n\n  private loadCategories(): Observable<unknown> {\n    return this.appsService.getAllAppsCategories().pipe(\n      catchError((error) => {\n        this.handleError(error);\n        return of([]);\n      }),\n      tap((categories: string[]) => {\n        this.patchState((state) => {\n          return {\n            ...state,\n            categories: [...categories],\n          };\n        });\n      }),\n    );\n  }\n}\n"],"version":3}