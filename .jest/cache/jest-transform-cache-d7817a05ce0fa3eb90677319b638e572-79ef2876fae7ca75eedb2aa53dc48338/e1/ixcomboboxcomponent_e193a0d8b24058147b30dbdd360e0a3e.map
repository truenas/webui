{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-combobox/ix-combobox.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-combobox/ix-combobox.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlValueAccessor, NgControl,\n} from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatOption } from '@angular/material/core';\nimport { MatHint } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  EMPTY,\n  fromEvent,\n  Subject,\n} from 'rxjs';\nimport {\n  catchError,\n  debounceTime, distinctUntilChanged, map, takeUntil,\n} from 'rxjs/operators';\nimport { Option } from 'app/interfaces/option.interface';\nimport { IxComboboxProvider, IxComboboxProviderManager } from 'app/modules/forms/ix-forms/components/ix-combobox/ix-combobox-provider';\nimport { IxErrorsComponent } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\nimport { IxLabelComponent } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.component';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestOverrideDirective } from 'app/modules/test-id/test-override/test-override.directive';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-combobox',\n  templateUrl: './ix-combobox.component.html',\n  styleUrls: ['./ix-combobox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxLabelComponent,\n    MatInput,\n    MatAutocompleteTrigger,\n    MatProgressSpinner,\n    IxIconComponent,\n    MatAutocomplete,\n    MatOption,\n    IxErrorsComponent,\n    MatHint,\n    TranslateModule,\n    TestOverrideDirective,\n    TestDirective,\n  ],\n})\nexport class IxComboboxComponent implements ControlValueAccessor, OnInit {\n  @Input() label: string;\n  @Input() hint: string;\n  @Input() required: boolean;\n  @Input() tooltip: string;\n  @Input() allowCustomValue = false;\n  @Input() set provider(comboboxProvider: IxComboboxProvider) {\n    this.comboboxProviderHandler = new IxComboboxProviderManager(comboboxProvider);\n    this.cdr.markForCheck();\n  }\n  private comboboxProviderHandler: IxComboboxProviderManager;\n\n  @ViewChild('ixInput') inputElementRef: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') autoCompleteRef: MatAutocomplete;\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\n\n  options: Option[] = [];\n  getDisplayWith = this.displayWith.bind(this);\n  hasErrorInOptions = false;\n  loading = false;\n\n  private filterChanged$ = new Subject<string>();\n\n  value: string | number = '';\n  isDisabled = false;\n  filterValue: string;\n  selectedOption: Option = null;\n  textContent = '';\n\n  onChange: (value: string | number) => void = (): void => {};\n  onTouch: () => void = (): void => {};\n\n  constructor(\n    public controlDirective: NgControl,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  writeValue(value: string | number): void {\n    this.value = value;\n    if (this.value && this.options?.length) {\n      this.selectedOption = { ...(this.options.find((option: Option) => option.value === this.value)) };\n    }\n    if (this.selectedOption) {\n      this.filterChanged$.next('');\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    if (this.controlDirective.value) {\n      this.textContent = this.controlDirective.value as string;\n    }\n\n    this.filterChanged$.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      untilDestroyed(this),\n    ).subscribe((changedValue) => {\n      if (this.filterValue === changedValue) {\n        return;\n      }\n      this.filterValue = changedValue;\n      this.filterOptions(changedValue);\n    });\n\n    this.filterChanged$.next('');\n  }\n\n  filterOptions(filterValue: string): void {\n    this.loading = true;\n    this.cdr.markForCheck();\n\n    this.comboboxProviderHandler?.fetch(filterValue).pipe(\n      catchError(() => {\n        this.hasErrorInOptions = true;\n        return EMPTY;\n      }),\n      untilDestroyed(this),\n    ).subscribe((options: Option[]) => {\n      this.options = options;\n\n      const selectedOptionFromLabel = this.options.find((option: Option) => option.label === filterValue);\n      if (selectedOptionFromLabel) {\n        this.selectedOption = selectedOptionFromLabel;\n        this.value = selectedOptionFromLabel.value;\n        this.onChange(this.value);\n      } else if (this.value !== null) {\n        const selectedOptionFromValue = this.options.find((option: Option) => option.value === this.value);\n        this.selectedOption = selectedOptionFromValue\n          ? { ...selectedOptionFromValue }\n          : { label: this.value as string, value: this.value };\n\n        if (this.selectedOption.value) {\n          this.filterChanged$.next('');\n        }\n      }\n\n      this.loading = false;\n      this.cdr.markForCheck();\n    });\n  }\n\n  onOpenDropdown(): void {\n    setTimeout(() => {\n      if (\n        !this.autoCompleteRef\n        || !this.autocompleteTrigger\n        || !this.autoCompleteRef.panel\n      ) {\n        return;\n      }\n\n      fromEvent((this.autoCompleteRef.panel as ElementRef<HTMLElement>).nativeElement, 'scroll')\n        .pipe(\n          debounceTime(300),\n          map(() => (this.autoCompleteRef.panel as ElementRef<HTMLElement>).nativeElement.scrollTop),\n          takeUntil(this.autocompleteTrigger.panelClosingActions),\n          untilDestroyed(this),\n        ).subscribe(() => {\n          const {\n            scrollTop,\n            scrollHeight,\n            clientHeight: elementHeight,\n          } = this.autoCompleteRef.panel.nativeElement as HTMLElement;\n\n          const atBottom = scrollHeight === scrollTop + elementHeight;\n          if (!atBottom) {\n            return;\n          }\n\n          this.loading = true;\n          this.cdr.markForCheck();\n          this.comboboxProviderHandler?.nextPage(this.filterValue !== null || this.filterValue !== undefined ? this.filterValue : '')\n            .pipe(untilDestroyed(this)).subscribe((options: Option[]) => {\n              this.loading = false;\n              this.cdr.markForCheck();\n              /**\n               * The following logic checks if we used a fake option to show value for an option that exists\n               * on one of the following pages of the list of options for this combobox. If we have done so\n               * previously, we want to remove that option if we managed to find the correct option on the\n               * page we just fetched\n               */\n              const valueIndex = this.options.findIndex(\n                (option) => option.label === (this.value as string) && option.value === this.value,\n              );\n\n              if (\n                options.some((option) => option.value === this.value)\n                && valueIndex >= 0\n              ) {\n                this.options.splice(valueIndex, 1);\n              }\n              this.options.push(...options);\n              this.cdr.markForCheck();\n            });\n        });\n    });\n  }\n\n  onChanged(changedValue: string): void {\n    if (this.selectedOption || this.value) {\n      this.resetInput();\n    }\n    this.textContent = changedValue;\n    this.filterChanged$.next(changedValue);\n\n    if (this.allowCustomValue && !this.options.some((option: Option) => option.value === changedValue)) {\n      this.onChange(changedValue);\n    }\n  }\n\n  resetInput(): void {\n    this.filterChanged$.next('');\n    if (this.inputElementRef?.nativeElement) {\n      this.inputElementRef.nativeElement.value = '';\n    }\n    this.selectedOption = null;\n    this.value = null;\n    this.textContent = '';\n    this.onChange(null);\n  }\n\n  registerOnChange(onChange: (value: string | number) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouch = onTouched;\n  }\n\n  optionSelected(option: Option): void {\n    this.selectedOption = { ...option };\n    this.filterChanged$.next('');\n    this.value = this.selectedOption.value;\n    this.onChange(this.selectedOption.value);\n  }\n\n  displayWith(): string {\n    return this.selectedOption ? this.selectedOption.label : '';\n  }\n\n  shouldShowResetInput(): boolean {\n    return this.hasValue() && !this.isDisabled;\n  }\n\n  hasValue(): boolean {\n    return this.inputElementRef?.nativeElement?.value && this.inputElementRef.nativeElement.value.length > 0;\n  }\n\n  isValueFromOptions(value: string): boolean {\n    return this.options.some((option: Option) => option.label === value);\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n"],"version":3}