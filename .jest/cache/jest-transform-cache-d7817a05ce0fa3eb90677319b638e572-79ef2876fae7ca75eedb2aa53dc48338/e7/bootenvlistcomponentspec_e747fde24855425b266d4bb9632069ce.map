{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/bootenv/bootenv-list/bootenv-list.component.spec.ts","mappings":";;;;;;;;;;;AACA,0DAAyE;AACzE,2DAA0D;AAC1D,iDAAyF;AACzF,uCAAyC;AACzC,+BAAmC;AACnC,kGAA4F;AAC5F,4EAAkE;AAClE,sFAAsF;AACtF,sEAAkE;AAClE,qGAAgG;AAChG,gGAA2F;AAC3F,2GAAsG;AACtG,yGAA4G;AAC5G,iGAAsG;AACtG,0EAAoE;AACpE,gEAA4D;AAC5D,wDAA2D;AAE3D,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;IAC5C,IAAI,SAAkD,CAAC;IACvD,IAAI,MAAqB,CAAC;IAC1B,IAAI,SAA2B,CAAC;IAChC,IAAI,KAAqB,CAAC;IAE1B,MAAM,eAAe,GAAG,IAAA,6BAAsB,EAAC;QAC7C,SAAS,EAAE,qDAA4B;QACvC,OAAO,EAAE;YACP,IAAA,wBAAa,EAAC,2CAAmB,CAAC;YAClC,+CAAqB;SACtB;QACD,YAAY,EAAE;YACZ,kDAAsB;SACvB;QACD,SAAS,EAAE;YACT,IAAA,mBAAY,EAAC,8BAAa,EAAE;gBAC1B,QAAQ,EAAE,qBAAqB;aAChC,CAAC;YACF,IAAA,oCAAa,EAAC;gBACZ,IAAA,+BAAQ,EAAC,eAAe,EAAE,uDAA8B,CAAC;aAC1D,CAAC;YACF,IAAA,mBAAY,EAAC,8BAAa,EAAE;gBAC1B,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,IAAI,CAAC,CAAC;aACjC,CAAC;YACF,IAAA,mBAAY,EAAC,uBAAW,CAAC;YACzB,IAAA,mBAAY,EAAC,sCAAgB,EAAE;gBAC7B,QAAQ,EAAE,IAAI,cAAO,EAAW;gBAChC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;aAChB,CAAC;YACF,IAAA,0BAAQ,GAAE;SACX;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAS,EAAE;QACpB,SAAS,GAAG,eAAe,EAAE,CAAC;QAC9B,MAAM,GAAG,mCAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC7D,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC;QAC/C,KAAK,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,iCAAc,CAAC,CAAC;IAClD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE,GAAS,EAAE;QAChC,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;QAEzC,MAAM,YAAY,GAAG;YACnB,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC;YAC3D,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,qBAAqB,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC;YAC7D;gBACE,EAAE;gBACF,8BAA8B;gBAC9B,aAAa;gBACb,qBAAqB;gBACrB,UAAU;gBACV,IAAI;gBACJ,EAAE;aACH;SACF,CAAC;QAEF,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;QAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/system/bootenv/bootenv-list/bootenv-list.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { MockComponent } from 'ng-mocks';\nimport { of, Subject } from 'rxjs';\nimport { FakeFormatDateTimePipe } from 'app/core/testing/classes/fake-format-datetime.pipe';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { mockCall, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { SearchInput1Component } from 'app/modules/forms/search-input1/search-input1.component';\nimport { IxTableHarness } from 'app/modules/ix-table/components/ix-table/ix-table.harness';\nimport { PageHeaderComponent } from 'app/modules/page-header/page-title-header/page-header.component';\nimport { BootEnvironmentListComponent } from 'app/pages/system/bootenv/bootenv-list/bootenv-list.component';\nimport { fakeBootEnvironmentsDataSource } from 'app/pages/system/bootenv/test/fake-boot-environments';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\nimport { LocaleService } from 'app/services/locale.service';\nimport { WebSocketService } from 'app/services/ws.service';\n\ndescribe('BootEnvironmentListComponent', () => {\n  let spectator: Spectator<BootEnvironmentListComponent>;\n  let loader: HarnessLoader;\n  let websocket: WebSocketService;\n  let table: IxTableHarness;\n\n  const createComponent = createComponentFactory({\n    component: BootEnvironmentListComponent,\n    imports: [\n      MockComponent(PageHeaderComponent),\n      SearchInput1Component,\n    ],\n    declarations: [\n      FakeFormatDateTimePipe,\n    ],\n    providers: [\n      mockProvider(LocaleService, {\n        timezone: 'America/Los_Angeles',\n      }),\n      mockWebSocket([\n        mockCall('bootenv.query', fakeBootEnvironmentsDataSource),\n      ]),\n      mockProvider(DialogService, {\n        confirm: jest.fn(() => of(true)),\n      }),\n      mockProvider(MatSnackBar),\n      mockProvider(IxSlideInService, {\n        onClose$: new Subject<unknown>(),\n        open: jest.fn(),\n      }),\n      mockAuth(),\n    ],\n  });\n\n  beforeEach(async () => {\n    spectator = createComponent();\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n    websocket = spectator.inject(WebSocketService);\n    table = await loader.getHarness(IxTableHarness);\n  });\n\n  it('shows table rows', async () => {\n    const cells = await table.getCellTexts();\n\n    const expectedRows = [\n      ['', 'Name', 'Active', 'Date Created', 'Space', 'Keep', ''],\n      ['', 'CLONE', '', '2022-08-22 09:27:00', '384 KiB', 'No', ''],\n      [\n        '',\n        '22.12-MASTER-20220808-020013',\n        'Now/Restart',\n        '2022-08-09 06:52:00',\n        '2.61 GiB',\n        'No',\n        '',\n      ],\n    ];\n\n    expect(websocket.call).toHaveBeenCalledWith('bootenv.query');\n    expect(cells).toEqual(expectedRows);\n  });\n});\n"],"version":3}