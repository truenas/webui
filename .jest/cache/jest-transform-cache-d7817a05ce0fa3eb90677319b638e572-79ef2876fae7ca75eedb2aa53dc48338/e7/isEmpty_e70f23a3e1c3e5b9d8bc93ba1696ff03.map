{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/isEmpty.js","mappings":";;;;;AAAA,kEAAsC;AACtC,8DAAkC;AAClC,sEAA2C;AAC3C,8DAAmC;AACnC,sEAA2C;AAC3C,gEAAqC;AACrC,wEAA4C;AAC5C,wEAA6C;AAE7C,2CAA2C;AAC3C,IAAI,MAAM,GAAG,cAAc,EACvB,MAAM,GAAG,cAAc,CAAC;AAE5B,2CAA2C;AAC3C,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;AAEnC,gDAAgD;AAChD,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,SAAS,OAAO,CAAC,KAAK;IACpB,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,IAAA,wBAAW,EAAC,KAAK,CAAC;QAClB,CAAC,IAAA,oBAAO,EAAC,KAAK,CAAC,IAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,UAAU;YAC9E,IAAA,qBAAQ,EAAC,KAAK,CAAC,IAAI,IAAA,yBAAY,EAAC,KAAK,CAAC,IAAI,IAAA,wBAAW,EAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACpE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;IACvB,CAAC;IACD,IAAI,GAAG,GAAG,IAAA,oBAAM,EAAC,KAAK,CAAC,CAAC;IACxB,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;QACnC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,IAAI,IAAA,yBAAW,EAAC,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,CAAC,IAAA,sBAAQ,EAAC,KAAK,CAAC,CAAC,MAAM,CAAC;IACjC,CAAC;IACD,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC;YACpC,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/isEmpty.js"],"sourcesContent":["import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n"],"version":3}