{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/vm.service.spec.ts","mappings":";;;;;;;;;;;AAAA,qDAAqD;AAErD,iDAA4E;AAC5E,+BAA0C;AAC1C,0EAA0E;AAC1E,sFAA+F;AAE/F,sEAAkE;AAClE,2GAAqG;AACrG,wDAA2D;AAC3D,6CAAyC;AAEzC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,SAAsC,CAAC;IAC3C,MAAM,aAAa,GAAG,IAAA,2BAAoB,EAAC;QACzC,OAAO,EAAE,sBAAS;QAClB,SAAS,EAAE;YACT,IAAA,oCAAa,EAAC;gBACZ,IAAA,+BAAQ,EAAC,eAAe,CAAC;gBACzB,IAAA,+BAAQ,EAAC,2BAA2B,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;gBACvE,IAAA,+BAAQ,EAAC,UAAU,CAAC;gBACpB,IAAA,+BAAQ,EAAC,aAAa,CAAC;gBACvB,IAAA,+BAAQ,EAAC,yBAAyB,EAAE,IAAI,CAAC;gBACzC,IAAA,8BAAO,EAAC,SAAS,EAAE,IAAA,kCAAiB,GAAE,CAAC;gBACvC,IAAA,8BAAO,EAAC,YAAY,EAAE,IAAA,kCAAiB,GAAE,CAAC;aAC3C,CAAC;YACF,IAAA,mBAAY,EAAC,8BAAa,CAAC;YAC3B,IAAA,mBAAY,EAAC,kBAAS,EAAE;gBACtB,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;oBACnB,WAAW,EAAE,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,IAAI,CAAC;iBAC5B,CAAC,CAAC;aACJ,CAAC;SACH;KACF,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,aAAa,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAS,EAAE;QACjD,MAAM,CAAC,MAAM,IAAA,qBAAc,EAAC,SAAS,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrF,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,2BAA2B,CAAC,CAAC;IACpG,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,GAAS,EAAE;QAC3C,MAAM,CAAC,MAAM,IAAA,qBAAc,EAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChF,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,CAAC;IAClG,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,EAAoB,CAAC,CAAC;QACvD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAoB,CAAC,CAAC;QACtD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAS,CAAC,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,gDAAqB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAoB,CAAC,CAAC;QACzD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAoB,CAAC,CAAC;QAC1D,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAoB,CAAC,CAAC;QAC1E,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,6BAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;IACrI,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/services/vm.service.spec.ts"],"sourcesContent":["import { MatDialog } from '@angular/material/dialog';\nimport { SpectatorService } from '@ngneat/spectator';\nimport { createServiceFactory, mockProvider } from '@ngneat/spectator/jest';\nimport { firstValueFrom, of } from 'rxjs';\nimport { fakeSuccessfulJob } from 'app/core/testing/utils/fake-job.utils';\nimport { mockCall, mockJob, mockWebSocket } from 'app/core/testing/utils/mock-websocket.utils';\nimport { VirtualMachine } from 'app/interfaces/virtual-machine.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { StopVmDialogComponent } from 'app/pages/vm/vm-list/stop-vm-dialog/stop-vm-dialog.component';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { VmService } from './vm.service';\n\ndescribe('VmService', () => {\n  let spectator: SpectatorService<VmService>;\n  const createService = createServiceFactory({\n    service: VmService,\n    providers: [\n      mockWebSocket([\n        mockCall('core.download'),\n        mockCall('vm.virtualization_details', { supported: true, error: null }),\n        mockCall('vm.start'),\n        mockCall('vm.poweroff'),\n        mockCall('vm.get_available_memory', 4096),\n        mockJob('vm.stop', fakeSuccessfulJob()),\n        mockJob('vm.restart', fakeSuccessfulJob()),\n      ]),\n      mockProvider(DialogService),\n      mockProvider(MatDialog, {\n        open: jest.fn(() => ({\n          afterClosed: () => of(true),\n        })),\n      }),\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createService();\n  });\n\n  it('should get virtualization details', async () => {\n    expect(await firstValueFrom(spectator.service.hasVirtualizationSupport$)).toBe(true);\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('vm.virtualization_details');\n  });\n\n  it('should get available memory', async () => {\n    expect(await firstValueFrom(spectator.service.getAvailableMemory())).toBe(4096);\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('vm.get_available_memory');\n  });\n\n  it('should call websocket to start vm', () => {\n    spectator.service.doStart({ id: 1 } as VirtualMachine);\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('vm.start', [1]);\n  });\n\n  it('should open dialog to stop vm', () => {\n    spectator.service.doStop({ id: 1 } as VirtualMachine);\n    expect(spectator.inject(MatDialog).open).toHaveBeenCalledWith(StopVmDialogComponent, { data: { id: 1 } });\n  });\n\n  it('should call websocket to restart vm', () => {\n    spectator.service.doRestart({ id: 1 } as VirtualMachine);\n    expect(spectator.inject(WebSocketService).startJob).toHaveBeenCalledWith('vm.restart', [1]);\n  });\n\n  it('should call websocket to poweroff vm', () => {\n    spectator.service.doPowerOff({ id: 1 } as VirtualMachine);\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('vm.poweroff', [1]);\n  });\n\n  it('should call websocket to download vm logs', () => {\n    spectator.service.downloadLogs({ id: 1, name: 'test' } as VirtualMachine);\n    expect(spectator.inject(WebSocketService).call).toHaveBeenCalledWith('core.download', ['vm.log_file_download', [1], '1_test.log']);\n  });\n});\n"],"version":3}