{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@angular/material/fesm2022/menu.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Optional, Input, Directive, QueryList, EventEmitter, inject, Injector, afterNextRender, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, ChangeDetectorRef, Self, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, takeUntil, filter, take, delay } from 'rxjs/operators';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem {\n    constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Whether the menu item is disabled. */\n        this.disabled = false;\n        /** Whether ripples are disabled on the menu item. */\n        this.disableRipple = false;\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        _parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element, so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons, so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        this._changeDetectorRef?.markForCheck();\n    }\n    _setTriggersSubmenu(triggersSubmenu) {\n        // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n        this._triggersSubmenu = triggersSubmenu;\n        this._changeDetectorRef?.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatMenuItem, isStandalone: true, selector: \"[mat-menu-item]\", inputs: { role: \"role\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute] }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-mdc-menu-item-highlighted\": \"_highlighted\", \"class.mat-mdc-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-mdc-menu-item mat-mdc-focus-indicator\" }, exportAs: [\"matMenuItem\"], ngImport: i0, template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\", dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', host: {\n                        '[attr.role]': 'role',\n                        'class': 'mat-mdc-menu-item mat-mdc-focus-indicator',\n                        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.disabled]': 'disabled || null',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [MatRipple], template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_PANEL]\n                }, {\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }], propDecorators: { role: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        this._changeDetectorRef?.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuContent, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.\u0275\u0275FactoryTarget.Directive }); }\n    static { this.\u0275dir = i0.\u0275\u0275ngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatMenuContent, isStandalone: true, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], ngImport: i0 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }] });\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\nlet menuPanelUid = 0;\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nclass MatMenu {\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        const newClassList = { ...this._classList };\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                newClassList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                newClassList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n        this._classList = newClassList;\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    constructor(_elementRef, \n    /**\n     * @deprecated Unused param, will be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, defaultOptions, \n    // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n    _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = null;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Classes to be applied to the menu panel. */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n        this._injector = inject(Injector);\n        this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n        this._xPosition = defaultOptions.xPosition;\n        this._yPosition = defaultOptions.yPosition;\n        this.backdropClass = defaultOptions.backdropClass;\n        this.overlapTrigger = defaultOptions.overlapTrigger;\n        this.hasBackdrop = defaultOptions.hasBackdrop;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._directDescendantItems.destroy();\n        this.closed.complete();\n        this._firstItemFocusRef?.destroy();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n        // Don't allow the event to propagate if we've already handled it, or it may\n        // end up reaching other overlays that were opened earlier (see #22694).\n        event.stopPropagation();\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n        this._firstItemFocusRef?.destroy();\n        this._firstItemFocusRef = afterNextRender(() => {\n            let menuPanel = null;\n            if (this._directDescendantItems.length) {\n                // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n                // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n                // because the panel is inside an `ng-template`. We work around it by starting from one of\n                // the items and walking up the DOM.\n                menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n            }\n            // If an item in the menuPanel is already focused, avoid overriding the focus.\n            if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n                const manager = this._keyManager;\n                manager.setFocusOrigin(origin).setFirstItemActive();\n                // If there's no active item at this point, it means that all the items are disabled.\n                // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n                // give _some_ feedback to screen readers.\n                if (!manager.activeItem && menuPanel) {\n                    menuPanel.focus();\n                }\n            }\n        }, { injector: this._injector });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The base elevation depends on which version of the spec\n        // we're running so we have to resolve it at runtime.\n        if (this._baseElevation === null) {\n            const styles = typeof getComputedStyle === 'function'\n                ? getComputedStyle(this._elementRef.nativeElement)\n                : null;\n            const value = styles?.getPropertyValue('--mat-menu-base-elevation-level') || '8';\n            this._baseElevation = parseInt(value);\n        }\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            const newClassList = { ...this._classList };\n            if (this._previousElevation) {\n                newClassList[this._previousElevation] = false;\n            }\n            newClassList[newElevation] = true;\n            this._previousElevation = newElevation;\n            this._classList = newClassList;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        this._classList = {\n            ...this._classList,\n            ['mat-menu-before']: posX === 'before',\n            ['mat-menu-after']: posX === 'after',\n            ['mat-menu-above']: posY === 'above',\n            ['mat-menu-below']: posY === 'below',\n        };\n        // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n        this._changeDetectorRef?.markForCheck();\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatMenu, isStandalone: true, selector: \"mat-menu\", inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: [\"overlapTrigger\", \"overlapTrigger\", booleanAttribute], hasBackdrop: [\"hasBackdrop\", \"hasBackdrop\", (value) => (value == null ? null : booleanAttribute(value))], panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], exportAs: [\"matMenu\"], ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel mat-mdc-elevation-specific\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-app-surface-container));will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.mat-mdc-menu-panel.ng-animating:has(.mat-mdc-menu-content:empty){display:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-app-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing);margin-top:var(--mat-menu-divider-top-spacing)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mat-menu-item-leading-spacing);padding-right:var(--mat-menu-item-trailing-spacing);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}[dir=rtl] .mat-mdc-menu-item{padding-right:var(--mat-menu-item-leading-spacing);padding-left:var(--mat-menu-item-trailing-spacing)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing);padding-right:var(--mat-menu-item-with-icon-trailing-spacing)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-right:var(--mat-menu-item-with-icon-leading-spacing);padding-left:var(--mat-menu-item-with-icon-trailing-spacing)}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-app-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing);height:var(--mat-menu-item-icon-size);width:var(--mat-menu-item-icon-size)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], standalone: true, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel mat-mdc-elevation-specific\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-app-surface-container));will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.mat-mdc-menu-panel.ng-animating:has(.mat-mdc-menu-content:empty){display:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-app-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing);margin-top:var(--mat-menu-divider-top-spacing)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mat-menu-item-leading-spacing);padding-right:var(--mat-menu-item-trailing-spacing);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}[dir=rtl] .mat-mdc-menu-item{padding-right:var(--mat-menu-item-leading-spacing);padding-left:var(--mat-menu-item-trailing-spacing)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing);padding-right:var(--mat-menu-item-with-icon-trailing-spacing)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-right:var(--mat-menu-item-with-icon-leading-spacing);padding-left:var(--mat-menu-item-with-icon-trailing-spacing)}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-app-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing);height:var(--mat-menu-item-icon-size);width:var(--mat-menu-item-icon-size)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }], propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? null : booleanAttribute(value)) }]\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n        this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n    }\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    }\n    ngAfterContentInit() {\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        const menu = this.menu;\n        if (this._menuOpen || !menu) {\n            return;\n        }\n        const overlayRef = this._createOverlay(menu);\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(menu, positionStrategy);\n        overlayConfig.hasBackdrop =\n            menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n        overlayRef.attach(this._getPortal(menu));\n        if (menu.lazyContent) {\n            menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu(menu);\n        if (menu instanceof MatMenu) {\n            menu._startAnimation();\n            menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu?.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            menu?.lazyContent?.detach();\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu(menu) {\n        menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        menu.direction = this.dir;\n        this._setMenuElevation(menu);\n        menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation(menu) {\n        if (menu.setElevation) {\n            let depth = 0;\n            let parentMenu = menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        if (isOpen !== this._menuOpen) {\n            this._menuOpen = isOpen;\n            this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n            if (this.triggersSubmenu()) {\n                this._menuItemInstance._setHighlighted(isOpen);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay(menu) {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig(menu);\n            this._subscribeToPositions(menu, config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig(menu) {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(menu, position) {\n        if (menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                // @breaking-change 15.0.0 Remove null check for `ngZone`.\n                // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n                // updating something in the view so we need to bring it back in.\n                if (this._ngZone) {\n                    this._ngZone.run(() => menu.setPositionClasses(posX, posY));\n                }\n                else {\n                    menu.setPositionClasses(posX, posY);\n                }\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(menu, positionStrategy) {\n        let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            if (this._parentMaterialMenu) {\n                if (this._parentInnerPadding == null) {\n                    const firstItem = this._parentMaterialMenu.items.first;\n                    this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n                }\n                offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n            }\n        }\n        else if (!menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal(menu) {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n            this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuTrigger, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3.Directionality, optional: true }, { token: i1.FocusMonitor }, { token: i0.NgZone }], target: i0.\u0275\u0275FactoryTarget.Directive }); }\n    static { this.\u0275dir = i0.\u0275\u0275ngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatMenuTrigger, isStandalone: true, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"menu ? \\\"menu\\\" : null\", \"attr.aria-expanded\": \"menuOpen\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" }, classAttribute: \"mat-mdc-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], ngImport: i0 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-mdc-menu-trigger',\n                        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n                        '[attr.aria-expanded]': 'menuOpen',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    exportAs: 'matMenuTrigger',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_SCROLL_STRATEGY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_PANEL]\n                }, {\n                    type: Optional\n                }] }, { type: MatMenuItem, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i1.FocusMonitor }, { type: i0.NgZone }], propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n\nclass MatMenuModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuModule, imports: [CommonModule,\n            MatRippleModule,\n            MatCommonModule,\n            OverlayModule,\n            MatMenu,\n            MatMenuItem,\n            MatMenuContent,\n            MatMenuTrigger], exports: [CdkScrollableModule,\n            MatMenu,\n            MatCommonModule,\n            MatMenuItem,\n            MatMenuContent,\n            MatMenuTrigger] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n            MatRippleModule,\n            MatCommonModule,\n            OverlayModule, CdkScrollableModule,\n            MatCommonModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatRippleModule,\n                        MatCommonModule,\n                        OverlayModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuContent,\n                        MatMenuTrigger,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatMenu,\n                        MatCommonModule,\n                        MatMenuItem,\n                        MatMenuContent,\n                        MatMenuTrigger,\n                    ],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n//# sourceMappingURL=menu.mjs.map\n"],
  "mappings": "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",
  "names": ["import_core"]
}
