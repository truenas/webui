{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/services/services.actions.ts","mappings":";;;AAAA,uCAAkD;AAIrC,QAAA,cAAc,GAAG,IAAA,oBAAY,EACxC,gCAAgC,EAChC,IAAA,aAAK,GAA2B,CACjC,CAAC;AAEW,QAAA,cAAc,GAAG,IAAA,oBAAY,EACxC,gCAAgC,EAChC,IAAA,aAAK,GAAwB,CAC9B,CAAC;AAEW,QAAA,uBAAuB,GAAG,IAAA,oBAAY,EACjD,4CAA4C,EAC5C,IAAA,aAAK,GAAgC,CACtC,CAAC;AAEW,QAAA,cAAc,GAAG,IAAA,oBAAY,EAAC,gCAAgC,CAAC,CAAC;AAChE,QAAA,eAAe,GAAG,IAAA,oBAAY,EAAC,iCAAiC,CAAC,CAAC;AAClE,QAAA,cAAc,GAAG,IAAA,oBAAY,EAAC,gCAAgC,CAAC,CAAC;AAChE,QAAA,kBAAkB,GAAG,IAAA,oBAAY,EAAC,qCAAqC,CAAC,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/services/services.actions.ts"],"sourcesContent":["import { createAction, props } from '@ngrx/store';\nimport { ServiceName } from 'app/enums/service-name.enum';\nimport { Service } from 'app/interfaces/service.interface';\n\nexport const servicesLoaded = createAction(\n  '[Services API] Services Loaded',\n  props<{ services: Service[] }>(),\n);\n\nexport const serviceChanged = createAction(\n  '[Services API] Service Changed',\n  props<{ service: Service }>(),\n);\n\nexport const checkIfServiceIsEnabled = createAction(\n  '[Services API] Check If Service Is Enabled',\n  props<{ serviceName: ServiceName }>(),\n);\n\nexport const serviceEnabled = createAction('[Services API] Service Enabled');\nexport const serviceDisabled = createAction('[Services API] Service Disabled');\nexport const serviceStarted = createAction('[Services API] Service Started');\nexport const serviceStartFailed = createAction('[Services API] Service Start Failed');\n"],"version":3}