{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/sharing/nfs/nfs-form/nfs-form.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/sharing/nfs/nfs-form/nfs-form.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit,\n} from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { FormBuilder } from '@ngneat/reactive-forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Store } from '@ngrx/store';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport {\n  Observable, filter, of, switchMap, tap,\n} from 'rxjs';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { DatasetPreset } from 'app/enums/dataset.enum';\nimport { NfsProtocol } from 'app/enums/nfs-protocol.enum';\nimport { NfsSecurityProvider } from 'app/enums/nfs-security-provider.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { ServiceName } from 'app/enums/service-name.enum';\nimport { helptextSharingNfs } from 'app/helptext/sharing';\nimport { DatasetCreate } from 'app/interfaces/dataset.interface';\nimport { NfsShare } from 'app/interfaces/nfs-share.interface';\nimport { GroupComboboxProvider } from 'app/modules/forms/ix-forms/classes/group-combobox-provider';\nimport { UserComboboxProvider } from 'app/modules/forms/ix-forms/classes/user-combobox-provider';\nimport { FormActionsComponent } from 'app/modules/forms/ix-forms/components/form-actions/form-actions.component';\nimport { IxCheckboxComponent } from 'app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component';\nimport { IxComboboxComponent } from 'app/modules/forms/ix-forms/components/ix-combobox/ix-combobox.component';\nimport { IxExplorerComponent } from 'app/modules/forms/ix-forms/components/ix-explorer/ix-explorer.component';\nimport { IxFieldsetComponent } from 'app/modules/forms/ix-forms/components/ix-fieldset/ix-fieldset.component';\nimport { IxInputComponent } from 'app/modules/forms/ix-forms/components/ix-input/ix-input.component';\nimport { IxIpInputWithNetmaskComponent } from 'app/modules/forms/ix-forms/components/ix-ip-input-with-netmask/ix-ip-input-with-netmask.component';\nimport { IxListItemComponent } from 'app/modules/forms/ix-forms/components/ix-list/ix-list-item/ix-list-item.component';\nimport { IxListComponent } from 'app/modules/forms/ix-forms/components/ix-list/ix-list.component';\nimport { IxSelectComponent } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { IxModalHeaderComponent } from 'app/modules/forms/ix-forms/components/ix-slide-in/components/ix-modal-header/ix-modal-header.component';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { FormErrorHandlerService } from 'app/modules/forms/ix-forms/services/form-error-handler.service';\nimport { ipv4or6cidrValidator } from 'app/modules/forms/ix-forms/validators/ip-validation';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { DatasetService } from 'app/services/dataset-service/dataset.service';\nimport { FilesystemService } from 'app/services/filesystem.service';\nimport { UserService } from 'app/services/user.service';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { checkIfServiceIsEnabled } from 'app/store/services/services.actions';\nimport { ServicesState } from 'app/store/services/services.reducer';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-nfs-form',\n  templateUrl: './nfs-form.component.html',\n  styleUrls: ['./nfs-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxModalHeaderComponent,\n    MatCard,\n    MatCardContent,\n    ReactiveFormsModule,\n    IxFieldsetComponent,\n    IxExplorerComponent,\n    IxInputComponent,\n    IxCheckboxComponent,\n    IxComboboxComponent,\n    IxSelectComponent,\n    IxListComponent,\n    IxListItemComponent,\n    IxIpInputWithNetmaskComponent,\n    FormActionsComponent,\n    RequiresRolesDirective,\n    MatButton,\n    TestDirective,\n    TranslateModule,\n  ],\n})\nexport class NfsFormComponent implements OnInit {\n  existingNfsShare: NfsShare;\n  defaultNfsShare: NfsShare;\n\n  isLoading = false;\n  isAdvancedMode = false;\n  hasNfsSecurityField = false;\n  createDatasetProps: Omit<DatasetCreate, 'name'> = {\n    share_type: DatasetPreset.Multiprotocol,\n  };\n\n  form = this.formBuilder.group({\n    path: ['', Validators.required],\n    comment: [''],\n    enabled: [true],\n    ro: [false],\n    maproot_user: [''],\n    maproot_group: [''],\n    mapall_user: [''],\n    mapall_group: [''],\n    security: [[] as NfsSecurityProvider[]],\n    networks: this.formBuilder.array<string>([]),\n    hosts: this.formBuilder.array<string>([]),\n  });\n\n  get isNew(): boolean {\n    return !this.existingNfsShare;\n  }\n\n  get title(): string {\n    return this.isNew\n      ? this.translate.instant('Add NFS Share')\n      : this.translate.instant('Edit NFS Share');\n  }\n\n  readonly requiredRoles = [Role.SharingNfsWrite, Role.SharingWrite];\n  readonly helptext = helptextSharingNfs;\n  readonly userProvider = new UserComboboxProvider(this.userService);\n  readonly groupProvider = new GroupComboboxProvider(this.userService);\n  readonly treeNodeProvider = this.filesystemService.getFilesystemNodeProvider({ directoriesOnly: true });\n\n  readonly securityOptions$ = of([\n    {\n      label: 'SYS',\n      value: NfsSecurityProvider.Sys,\n    },\n    {\n      label: 'KRB5',\n      value: NfsSecurityProvider.Krb5,\n    },\n    {\n      label: 'KRB5I',\n      value: NfsSecurityProvider.Krb5i,\n    },\n    {\n      label: 'KRB5P',\n      value: NfsSecurityProvider.Krb5p,\n    },\n  ]);\n\n  constructor(\n    private ws: WebSocketService,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private translate: TranslateService,\n    private filesystemService: FilesystemService,\n    private formErrorHandler: FormErrorHandlerService,\n    private cdr: ChangeDetectorRef,\n    private snackbar: SnackbarService,\n    private datasetService: DatasetService,\n    private slideInRef: IxSlideInRef<NfsFormComponent>,\n    private store$: Store<ServicesState>,\n    @Inject(SLIDE_IN_DATA) private data: { existingNfsShare?: NfsShare; defaultNfsShare?: NfsShare },\n  ) {\n    this.existingNfsShare = this.data?.existingNfsShare;\n    this.defaultNfsShare = this.data?.defaultNfsShare;\n  }\n\n  setNfsShareForEdit(): void {\n    this.existingNfsShare.networks.forEach(() => this.addNetworkControl());\n    this.existingNfsShare.hosts.forEach(() => this.addHostControl());\n    this.form.patchValue(this.existingNfsShare);\n  }\n\n  ngOnInit(): void {\n    this.checkForNfsSecurityField();\n\n    if (this.defaultNfsShare) {\n      this.form.patchValue(this.defaultNfsShare);\n    }\n\n    if (this.existingNfsShare) {\n      this.setNfsShareForEdit();\n    }\n  }\n\n  addNetworkControl(): void {\n    this.form.controls.networks.push(this.formBuilder.control('', [Validators.required, ipv4or6cidrValidator()]));\n  }\n\n  removeNetworkControl(index: number): void {\n    this.form.controls.networks.removeAt(index);\n  }\n\n  addHostControl(): void {\n    this.form.controls.hosts.push(this.formBuilder.control('', Validators.required));\n  }\n\n  removeHostControl(index: number): void {\n    this.form.controls.hosts.removeAt(index);\n  }\n\n  toggleAdvancedMode(): void {\n    this.isAdvancedMode = !this.isAdvancedMode;\n  }\n\n  onSubmit(): void {\n    const nfsShare = this.form.value;\n    let request$: Observable<unknown>;\n    if (this.isNew) {\n      request$ = this.ws.call('sharing.nfs.create', [nfsShare]);\n    } else {\n      request$ = this.ws.call('sharing.nfs.update', [this.existingNfsShare.id, nfsShare]);\n    }\n\n    this.datasetService.rootLevelDatasetWarning(\n      nfsShare.path,\n      this.translate.instant(helptextSharingNfs.root_level_warning),\n      !this.form.controls.path.dirty,\n    )\n      .pipe(\n        filter(Boolean),\n        tap(() => {\n          this.isLoading = true;\n          this.cdr.markForCheck();\n        }),\n        switchMap(() => request$),\n        untilDestroyed(this),\n      ).subscribe({\n        next: () => {\n          if (this.isNew) {\n            this.snackbar.success(this.translate.instant('NFS share created'));\n          } else {\n            this.snackbar.success(this.translate.instant('NFS share updated'));\n          }\n          this.store$.dispatch(checkIfServiceIsEnabled({ serviceName: ServiceName.Nfs }));\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          this.slideInRef.close(true);\n        },\n        error: (error: unknown) => {\n          this.isLoading = false;\n          this.formErrorHandler.handleWsFormError(error, this.form);\n          this.cdr.markForCheck();\n        },\n      });\n  }\n\n  private checkForNfsSecurityField(): void {\n    this.ws.call('nfs.config')\n      .pipe(untilDestroyed(this))\n      .subscribe((nfsConfig) => {\n        this.hasNfsSecurityField = nfsConfig.protocols?.includes(NfsProtocol.V4);\n      });\n  }\n}\n"],"version":3}