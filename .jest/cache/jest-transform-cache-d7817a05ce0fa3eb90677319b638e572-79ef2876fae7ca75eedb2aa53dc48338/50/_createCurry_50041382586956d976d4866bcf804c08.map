{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_createCurry.js","mappings":";;;;;AAAA,4DAAgC;AAChC,sEAA0C;AAC1C,0EAA8C;AAC9C,4EAAgD;AAChD,oEAAwC;AACxC,8EAAkD;AAClD,0DAA8B;AAE9B;;;;;;;;GAQG;AACH,SAAS,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK;IACvC,IAAI,IAAI,GAAG,IAAA,wBAAU,EAAC,IAAI,CAAC,CAAC;IAE5B,SAAS,OAAO;QACd,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,EACzB,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,EACpB,KAAK,GAAG,MAAM,EACd,WAAW,GAAG,IAAA,uBAAS,EAAC,OAAO,CAAC,CAAC;QAErC,OAAO,KAAK,EAAE,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;QACD,IAAI,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,WAAW,CAAC;YACvF,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,IAAA,4BAAc,EAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAEtC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC;QACzB,IAAI,MAAM,GAAG,KAAK,EAAE,CAAC;YACnB,OAAO,IAAA,2BAAa,EAClB,IAAI,EAAE,OAAO,EAAE,0BAAY,EAAE,OAAO,CAAC,WAAW,EAAE,SAAS,EAC3D,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC;QACzD,CAAC;QACD,IAAI,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,KAAK,kBAAI,IAAI,IAAI,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1E,OAAO,IAAA,mBAAK,EAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,kBAAe,WAAW,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_createCurry.js"],"sourcesContent":["import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n"],"version":3}