{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/enums/dataset.enum.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/enums/dataset.enum.ts"],"sourcesContent":["import { marker as T } from '@biesbjerg/ngx-translate-extract-marker';\nimport { Brand } from 'utility-types';\n\nexport enum DatasetAclType {\n  Inherit = 'INHERIT',\n  Off = 'OFF',\n  NoAcl = 'NOACL',\n  Nfsv4 = 'NFSV4',\n  Nfs4Acl = 'NFS4ACL',\n  Posix = 'POSIX',\n  PosixAcl = 'POSIXACL',\n}\n\nexport enum DatasetEncryptionType {\n  Default = 'DEFAULT', // Key\n  Passphrase = 'PASSPHRASE',\n}\n\nexport enum DatasetQuotaType {\n  Dataset = 'DATASET',\n  Project = 'PROJECT',\n  User = 'USER',\n  Group = 'GROUP',\n  UserObj = 'USEROBJ',\n  GroupObj = 'GROUPOBJ',\n}\n\nexport enum DatasetSource {\n  Local = 'local',\n  Remote = 'remote',\n}\n\nexport enum DatasetType {\n  Filesystem = 'FILESYSTEM',\n  Volume = 'VOLUME',\n}\n\nexport type DatasetVolumeBlockSize = Brand<string, 'DatasetVolumeBlockSize'>;\nexport type DatasetRecordSize = Brand<string, 'DatasetRecordSize'>;\n\nexport enum DatasetSync {\n  Standard = 'STANDARD',\n  Always = 'ALWAYS',\n  Disabled = 'DISABLED',\n}\n\nexport const datasetSyncLabels = new Map<DatasetSync, string>([\n  [DatasetSync.Standard, T('Standard')],\n  [DatasetSync.Always, T('Always')],\n  [DatasetSync.Disabled, T('Disabled')],\n]);\n\nexport enum DatasetSnapdir {\n  Visible = 'VISIBLE',\n  Hidden = 'HIDDEN',\n}\n\nexport const datasetSnapdirLabels = new Map<DatasetSnapdir, string>([\n  [DatasetSnapdir.Visible, T('Visible')],\n  [DatasetSnapdir.Hidden, T('Invisible')],\n]);\n\nexport enum DatasetSnapdev {\n  Visible = 'VISIBLE',\n  Hidden = 'HIDDEN',\n}\n\nexport const datasetSnapdevLabels = new Map<DatasetSnapdev, string>([\n  [DatasetSnapdev.Visible, T('Visible')],\n  [DatasetSnapdev.Hidden, T('Hidden')],\n]);\n\nexport enum DatasetChecksum {\n  On = 'ON',\n  Off = 'OFF',\n  Fletcher2 = 'FLETCHER2',\n  Fletcher4 = 'FLETCHER4',\n  Sha256 = 'SHA256',\n  Sha512 = 'SHA512',\n  Skein = 'SKEIN',\n  Edonr = 'EDONR',\n}\n\nexport enum DatasetCaseSensitivity {\n  Sensitive = 'SENSITIVE',\n  Insensitive = 'INSENSITIVE',\n}\n\nexport const datasetCaseSensitivityLabels = new Map<DatasetCaseSensitivity, string>([\n  [DatasetCaseSensitivity.Sensitive, T('Sensitive')],\n  [DatasetCaseSensitivity.Insensitive, T('Insensitive')],\n]);\n\nexport enum DatasetPreset {\n  Generic = 'GENERIC',\n  Smb = 'SMB',\n  Apps = 'APPS',\n  Multiprotocol = 'MULTIPROTOCOL',\n}\n\nexport const datasetPresetLabels = new Map<DatasetPreset, string>([\n  [DatasetPreset.Generic, T('Generic')],\n  [DatasetPreset.Smb, T('SMB')],\n  [DatasetPreset.Apps, T('Apps')],\n  [DatasetPreset.Multiprotocol, T('Multiprotocol')],\n]);\n\nexport enum DatasetXattr {\n  Inherit = 'INHERIT',\n  On = 'ON',\n  Sa = 'SA',\n}\n"],"version":3}