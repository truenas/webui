{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/bind.js","mappings":";;;;;AAAA,kEAAsC;AACtC,sEAA0C;AAC1C,oEAAwC;AACxC,8EAAkD;AAElD,sDAAsD;AACtD,IAAI,cAAc,GAAG,CAAC,EAClB,iBAAiB,GAAG,EAAE,CAAC;AAE3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,IAAI,IAAI,GAAG,IAAA,sBAAQ,EAAC,UAAS,IAAI,EAAE,OAAO,EAAE,QAAQ;IAClD,IAAI,OAAO,GAAG,cAAc,CAAC;IAC7B,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpB,IAAI,OAAO,GAAG,IAAA,4BAAc,EAAC,QAAQ,EAAE,IAAA,uBAAS,EAAC,IAAI,CAAC,CAAC,CAAC;QACxD,OAAO,IAAI,iBAAiB,CAAC;IAC/B,CAAC;IACD,OAAO,IAAA,wBAAU,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC;AAEH,+BAA+B;AAC/B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AAEtB,kBAAe,IAAI,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/bind.js"],"sourcesContent":["import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nexport default bind;\n"],"version":3}