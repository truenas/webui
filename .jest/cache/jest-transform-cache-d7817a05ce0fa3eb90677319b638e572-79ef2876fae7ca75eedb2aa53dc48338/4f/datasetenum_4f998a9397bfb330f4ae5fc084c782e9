56b59025c638f997816580f6745aa5a5
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatasetXattr = exports.datasetPresetLabels = exports.DatasetPreset = exports.datasetCaseSensitivityLabels = exports.DatasetCaseSensitivity = exports.DatasetChecksum = exports.datasetSnapdevLabels = exports.DatasetSnapdev = exports.datasetSnapdirLabels = exports.DatasetSnapdir = exports.datasetSyncLabels = exports.DatasetSync = exports.DatasetType = exports.DatasetSource = exports.DatasetQuotaType = exports.DatasetEncryptionType = exports.DatasetAclType = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
var DatasetAclType;
(function (DatasetAclType) {
    DatasetAclType["Inherit"] = "INHERIT";
    DatasetAclType["Off"] = "OFF";
    DatasetAclType["NoAcl"] = "NOACL";
    DatasetAclType["Nfsv4"] = "NFSV4";
    DatasetAclType["Nfs4Acl"] = "NFS4ACL";
    DatasetAclType["Posix"] = "POSIX";
    DatasetAclType["PosixAcl"] = "POSIXACL";
})(DatasetAclType || (exports.DatasetAclType = DatasetAclType = {}));
var DatasetEncryptionType;
(function (DatasetEncryptionType) {
    DatasetEncryptionType["Default"] = "DEFAULT";
    DatasetEncryptionType["Passphrase"] = "PASSPHRASE";
})(DatasetEncryptionType || (exports.DatasetEncryptionType = DatasetEncryptionType = {}));
var DatasetQuotaType;
(function (DatasetQuotaType) {
    DatasetQuotaType["Dataset"] = "DATASET";
    DatasetQuotaType["Project"] = "PROJECT";
    DatasetQuotaType["User"] = "USER";
    DatasetQuotaType["Group"] = "GROUP";
    DatasetQuotaType["UserObj"] = "USEROBJ";
    DatasetQuotaType["GroupObj"] = "GROUPOBJ";
})(DatasetQuotaType || (exports.DatasetQuotaType = DatasetQuotaType = {}));
var DatasetSource;
(function (DatasetSource) {
    DatasetSource["Local"] = "local";
    DatasetSource["Remote"] = "remote";
})(DatasetSource || (exports.DatasetSource = DatasetSource = {}));
var DatasetType;
(function (DatasetType) {
    DatasetType["Filesystem"] = "FILESYSTEM";
    DatasetType["Volume"] = "VOLUME";
})(DatasetType || (exports.DatasetType = DatasetType = {}));
var DatasetSync;
(function (DatasetSync) {
    DatasetSync["Standard"] = "STANDARD";
    DatasetSync["Always"] = "ALWAYS";
    DatasetSync["Disabled"] = "DISABLED";
})(DatasetSync || (exports.DatasetSync = DatasetSync = {}));
exports.datasetSyncLabels = new Map([
    [DatasetSync.Standard, (0, ngx_translate_extract_marker_1.marker)('Standard')],
    [DatasetSync.Always, (0, ngx_translate_extract_marker_1.marker)('Always')],
    [DatasetSync.Disabled, (0, ngx_translate_extract_marker_1.marker)('Disabled')],
]);
var DatasetSnapdir;
(function (DatasetSnapdir) {
    DatasetSnapdir["Visible"] = "VISIBLE";
    DatasetSnapdir["Hidden"] = "HIDDEN";
})(DatasetSnapdir || (exports.DatasetSnapdir = DatasetSnapdir = {}));
exports.datasetSnapdirLabels = new Map([
    [DatasetSnapdir.Visible, (0, ngx_translate_extract_marker_1.marker)('Visible')],
    [DatasetSnapdir.Hidden, (0, ngx_translate_extract_marker_1.marker)('Invisible')],
]);
var DatasetSnapdev;
(function (DatasetSnapdev) {
    DatasetSnapdev["Visible"] = "VISIBLE";
    DatasetSnapdev["Hidden"] = "HIDDEN";
})(DatasetSnapdev || (exports.DatasetSnapdev = DatasetSnapdev = {}));
exports.datasetSnapdevLabels = new Map([
    [DatasetSnapdev.Visible, (0, ngx_translate_extract_marker_1.marker)('Visible')],
    [DatasetSnapdev.Hidden, (0, ngx_translate_extract_marker_1.marker)('Hidden')],
]);
var DatasetChecksum;
(function (DatasetChecksum) {
    DatasetChecksum["On"] = "ON";
    DatasetChecksum["Off"] = "OFF";
    DatasetChecksum["Fletcher2"] = "FLETCHER2";
    DatasetChecksum["Fletcher4"] = "FLETCHER4";
    DatasetChecksum["Sha256"] = "SHA256";
    DatasetChecksum["Sha512"] = "SHA512";
    DatasetChecksum["Skein"] = "SKEIN";
    DatasetChecksum["Edonr"] = "EDONR";
})(DatasetChecksum || (exports.DatasetChecksum = DatasetChecksum = {}));
var DatasetCaseSensitivity;
(function (DatasetCaseSensitivity) {
    DatasetCaseSensitivity["Sensitive"] = "SENSITIVE";
    DatasetCaseSensitivity["Insensitive"] = "INSENSITIVE";
})(DatasetCaseSensitivity || (exports.DatasetCaseSensitivity = DatasetCaseSensitivity = {}));
exports.datasetCaseSensitivityLabels = new Map([
    [DatasetCaseSensitivity.Sensitive, (0, ngx_translate_extract_marker_1.marker)('Sensitive')],
    [DatasetCaseSensitivity.Insensitive, (0, ngx_translate_extract_marker_1.marker)('Insensitive')],
]);
var DatasetPreset;
(function (DatasetPreset) {
    DatasetPreset["Generic"] = "GENERIC";
    DatasetPreset["Smb"] = "SMB";
    DatasetPreset["Apps"] = "APPS";
    DatasetPreset["Multiprotocol"] = "MULTIPROTOCOL";
})(DatasetPreset || (exports.DatasetPreset = DatasetPreset = {}));
exports.datasetPresetLabels = new Map([
    [DatasetPreset.Generic, (0, ngx_translate_extract_marker_1.marker)('Generic')],
    [DatasetPreset.Smb, (0, ngx_translate_extract_marker_1.marker)('SMB')],
    [DatasetPreset.Apps, (0, ngx_translate_extract_marker_1.marker)('Apps')],
    [DatasetPreset.Multiprotocol, (0, ngx_translate_extract_marker_1.marker)('Multiprotocol')],
]);
var DatasetXattr;
(function (DatasetXattr) {
    DatasetXattr["Inherit"] = "INHERIT";
    DatasetXattr["On"] = "ON";
    DatasetXattr["Sa"] = "SA";
})(DatasetXattr || (exports.DatasetXattr = DatasetXattr = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2VudW1zL2RhdGFzZXQuZW51bS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwwRkFBc0U7QUFHdEUsSUFBWSxjQVFYO0FBUkQsV0FBWSxjQUFjO0lBQ3hCLHFDQUFtQixDQUFBO0lBQ25CLDZCQUFXLENBQUE7SUFDWCxpQ0FBZSxDQUFBO0lBQ2YsaUNBQWUsQ0FBQTtJQUNmLHFDQUFtQixDQUFBO0lBQ25CLGlDQUFlLENBQUE7SUFDZix1Q0FBcUIsQ0FBQTtBQUN2QixDQUFDLEVBUlcsY0FBYyw4QkFBZCxjQUFjLFFBUXpCO0FBRUQsSUFBWSxxQkFHWDtBQUhELFdBQVkscUJBQXFCO0lBQy9CLDRDQUFtQixDQUFBO0lBQ25CLGtEQUF5QixDQUFBO0FBQzNCLENBQUMsRUFIVyxxQkFBcUIscUNBQXJCLHFCQUFxQixRQUdoQztBQUVELElBQVksZ0JBT1g7QUFQRCxXQUFZLGdCQUFnQjtJQUMxQix1Q0FBbUIsQ0FBQTtJQUNuQix1Q0FBbUIsQ0FBQTtJQUNuQixpQ0FBYSxDQUFBO0lBQ2IsbUNBQWUsQ0FBQTtJQUNmLHVDQUFtQixDQUFBO0lBQ25CLHlDQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFQVyxnQkFBZ0IsZ0NBQWhCLGdCQUFnQixRQU8zQjtBQUVELElBQVksYUFHWDtBQUhELFdBQVksYUFBYTtJQUN2QixnQ0FBZSxDQUFBO0lBQ2Ysa0NBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUhXLGFBQWEsNkJBQWIsYUFBYSxRQUd4QjtBQUVELElBQVksV0FHWDtBQUhELFdBQVksV0FBVztJQUNyQix3Q0FBeUIsQ0FBQTtJQUN6QixnQ0FBaUIsQ0FBQTtBQUNuQixDQUFDLEVBSFcsV0FBVywyQkFBWCxXQUFXLFFBR3RCO0FBS0QsSUFBWSxXQUlYO0FBSkQsV0FBWSxXQUFXO0lBQ3JCLG9DQUFxQixDQUFBO0lBQ3JCLGdDQUFpQixDQUFBO0lBQ2pCLG9DQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFKVyxXQUFXLDJC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QUFBO0lBQ25CLHlCQUFTLENBQUE7SUFDVCx5QkFBUyxDQUFBO0FBQ1gsQ0FBQyxFQUpXLFlBQVksNEJBQVosWUFBWSxRQUl2QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvZW51bXMvZGF0YXNldC5lbnVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcmtlciBhcyBUIH0gZnJvbSAnQGJpZXNiamVyZy9uZ3gtdHJhbnNsYXRlLWV4dHJhY3QtbWFya2VyJztcbmltcG9ydCB7IEJyYW5kIH0gZnJvbSAndXRpbGl0eS10eXBlcyc7XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRBY2xUeXBlIHtcbiAgSW5oZXJpdCA9ICdJTkhFUklUJyxcbiAgT2ZmID0gJ09GRicsXG4gIE5vQWNsID0gJ05PQUNMJyxcbiAgTmZzdjQgPSAnTkZTVjQnLFxuICBOZnM0QWNsID0gJ05GUzRBQ0wnLFxuICBQb3NpeCA9ICdQT1NJWCcsXG4gIFBvc2l4QWNsID0gJ1BPU0lYQUNMJyxcbn1cblxuZXhwb3J0IGVudW0gRGF0YXNldEVuY3J5cHRpb25UeXBlIHtcbiAgRGVmYXVsdCA9ICdERUZBVUxUJywgLy8gS2V5XG4gIFBhc3NwaHJhc2UgPSAnUEFTU1BIUkFTRScsXG59XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRRdW90YVR5cGUge1xuICBEYXRhc2V0ID0gJ0RBVEFTRVQnLFxuICBQcm9qZWN0ID0gJ1BST0pFQ1QnLFxuICBVc2VyID0gJ1VTRVInLFxuICBHcm91cCA9ICdHUk9VUCcsXG4gIFVzZXJPYmogPSAnVVNFUk9CSicsXG4gIEdyb3VwT2JqID0gJ0dST1VQT0JKJyxcbn1cblxuZXhwb3J0IGVudW0gRGF0YXNldFNvdXJjZSB7XG4gIExvY2FsID0gJ2xvY2FsJyxcbiAgUmVtb3RlID0gJ3JlbW90ZScsXG59XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRUeXBlIHtcbiAgRmlsZXN5c3RlbSA9ICdGSUxFU1lTVEVNJyxcbiAgVm9sdW1lID0gJ1ZPTFVNRScsXG59XG5cbmV4cG9ydCB0eXBlIERhdGFzZXRWb2x1bWVCbG9ja1NpemUgPSBCcmFuZDxzdHJpbmcsICdEYXRhc2V0Vm9sdW1lQmxvY2tTaXplJz47XG5leHBvcnQgdHlwZSBEYXRhc2V0UmVjb3JkU2l6ZSA9IEJyYW5kPHN0cmluZywgJ0RhdGFzZXRSZWNvcmRTaXplJz47XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRTeW5jIHtcbiAgU3RhbmRhcmQgPSAnU1RBTkRBUkQnLFxuICBBbHdheXMgPSAnQUxXQVlTJyxcbiAgRGlzYWJsZWQgPSAnRElTQUJMRUQnLFxufVxuXG5leHBvcnQgY29uc3QgZGF0YXNldFN5bmNMYWJlbHMgPSBuZXcgTWFwPERhdGFzZXRTeW5jLCBzdHJpbmc+KFtcbiAgW0RhdGFzZXRTeW5jLlN0YW5kYXJkLCBUKCdTdGFuZGFyZCcpXSxcbiAgW0RhdGFzZXRTeW5jLkFsd2F5cywgVCgnQWx3YXlzJyldLFxuICBbRGF0YXNldFN5bmMuRGlzYWJsZWQsIFQoJ0Rpc2FibGVkJyldLFxuXSk7XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRTbmFwZGlyIHtcbiAgVmlzaWJsZSA9ICdWSVNJQkxFJyxcbiAgSGlkZGVuID0gJ0hJRERFTicsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0U25hcGRpckxhYmVscyA9IG5ldyBNYXA8RGF0YXNldFNuYXBkaXIsIHN0cmluZz4oW1xuICBbRGF0YXNldFNuYXBkaXIuVmlzaWJsZSwgVCgnVmlzaWJsZScpXSxcbiAgW0RhdGFzZXRTbmFwZGlyLkhpZGRlbiwgVCgnSW52aXNpYmxlJyldLFxuXSk7XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRTbmFwZGV2IHtcbiAgVmlzaWJsZSA9ICdWSVNJQkxFJyxcbiAgSGlkZGVuID0gJ0hJRERFTicsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0U25hcGRldkxhYmVscyA9IG5ldyBNYXA8RGF0YXNldFNuYXBkZXYsIHN0cmluZz4oW1xuICBbRGF0YXNldFNuYXBkZXYuVmlzaWJsZSwgVCgnVmlzaWJsZScpXSxcbiAgW0RhdGFzZXRTbmFwZGV2LkhpZGRlbiwgVCgnSGlkZGVuJyldLFxuXSk7XG5cbmV4cG9ydCBlbnVtIERhdGFzZXRDaGVja3N1bSB7XG4gIE9uID0gJ09OJyxcbiAgT2ZmID0gJ09GRicsXG4gIEZsZXRjaGVyMiA9ICdGTEVUQ0hFUjInLFxuICBGbGV0Y2hlcjQgPSAnRkxFVENIRVI0JyxcbiAgU2hhMjU2ID0gJ1NIQTI1NicsXG4gIFNoYTUxMiA9ICdTSEE1MTInLFxuICBTa2VpbiA9ICdTS0VJTicsXG4gIEVkb25yID0gJ0VET05SJyxcbn1cblxuZXhwb3J0IGVudW0gRGF0YXNldENhc2VTZW5zaXRpdml0eSB7XG4gIFNlbnNpdGl2ZSA9ICdTRU5TSVRJVkUnLFxuICBJbnNlbnNpdGl2ZSA9ICdJTlNFTlNJVElWRScsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0Q2FzZVNlbnNpdGl2aXR5TGFiZWxzID0gbmV3IE1hcDxEYXRhc2V0Q2FzZVNlbnNpdGl2aXR5LCBzdHJpbmc+KFtcbiAgW0RhdGFzZXRDYXNlU2Vuc2l0aXZpdHkuU2Vuc2l0aXZlLCBUKCdTZW5zaXRpdmUnKV0sXG4gIFtEYXRhc2V0Q2FzZVNlbnNpdGl2aXR5Lkluc2Vuc2l0aXZlLCBUKCdJbnNlbnNpdGl2ZScpXSxcbl0pO1xuXG5leHBvcnQgZW51bSBEYXRhc2V0UHJlc2V0IHtcbiAgR2VuZXJpYyA9ICdHRU5FUklDJyxcbiAgU21iID0gJ1NNQicsXG4gIEFwcHMgPSAnQVBQUycsXG4gIE11bHRpcHJvdG9jb2wgPSAnTVVMVElQUk9UT0NPTCcsXG59XG5cbmV4cG9ydCBjb25zdCBkYXRhc2V0UHJlc2V0TGFiZWxzID0gbmV3IE1hcDxEYXRhc2V0UHJlc2V0LCBzdHJpbmc+KFtcbiAgW0RhdGFzZXRQcmVzZXQuR2VuZXJpYywgVCgnR2VuZXJpYycpXSxcbiAgW0RhdGFzZXRQcmVzZXQuU21iLCBUKCdTTUInKV0sXG4gIFtEYXRhc2V0UHJlc2V0LkFwcHMsIFQoJ0FwcHMnKV0sXG4gIFtEYXRhc2V0UHJlc2V0Lk11bHRpcHJvdG9jb2wsIFQoJ011bHRpcHJvdG9jb2wnKV0sXG5dKTtcblxuZXhwb3J0IGVudW0gRGF0YXNldFhhdHRyIHtcbiAgSW5oZXJpdCA9ICdJTkhFUklUJyxcbiAgT24gPSAnT04nLFxuICBTYSA9ICdTQScsXG59XG4iXSwidmVyc2lvbiI6M30=