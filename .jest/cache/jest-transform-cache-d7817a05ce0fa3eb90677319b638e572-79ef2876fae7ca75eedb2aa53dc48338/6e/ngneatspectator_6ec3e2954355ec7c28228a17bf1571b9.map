{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@ngneat/spectator/fesm2022/ngneat-spectator.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { isStandalone, DebugElement, ElementRef, ChangeDetectorRef, NO_ERRORS_SCHEMA, reflectComponentType, Component, NgModule, NgZone } from '@angular/core';\nimport { TestBed, tick, DeferBlockState, DeferBlockBehavior, waitForAsync } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { queries, getDefaultNormalizer } from '@testing-library/dom';\nimport { BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic/testing';\nimport { restoreSetTimeout } from '@ngneat/spectator/internals';\nimport $ from 'jquery';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { Router, ActivatedRoute, convertToParamMap, ActivatedRouteSnapshot } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\n\nfunction doesServiceImplementsOnDestroy(testedService) {\n    return 'ngOnDestroy' in testedService && typeof testedService['ngOnDestroy'] === 'function';\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\nfunction isType(v) {\n    return typeof v === 'function';\n}\nfunction isHTMLOptionElementArray(value) {\n    return Array.isArray(value) && !!value.length && value.every((item) => item instanceof HTMLOptionElement);\n}\nfunction isObject(v) {\n    return v && typeof v === 'object';\n}\n\nconst parseKeyOptions = (keyOrKeyCode) => {\n    if (isNumber(keyOrKeyCode) && keyOrKeyCode) {\n        return { key: false, keyCode: keyOrKeyCode, modifiers: {} };\n    }\n    if (isString(keyOrKeyCode) && keyOrKeyCode) {\n        return parseKey(keyOrKeyCode);\n    }\n    if (isObject(keyOrKeyCode)) {\n        const parsedKey = parseKey(keyOrKeyCode.key);\n        return {\n            ...parsedKey,\n            keyCode: keyOrKeyCode.keyCode,\n        };\n    }\n    throw new Error('keyboard.pressKey() requires a valid key or keyCode');\n};\nconst parseKey = (keyStr) => {\n    if (keyStr.indexOf('.') < 0 || '.' === keyStr) {\n        return { key: keyStr, keyCode: false, modifiers: {} };\n    }\n    const keyParts = keyStr.split('.');\n    const key = keyParts.pop();\n    const modifiers = keyParts.reduce((mods, part) => {\n        switch (part) {\n            case 'control':\n            case 'ctrl':\n                mods.control = true;\n                return mods;\n            case 'shift':\n                mods.shift = true;\n                return mods;\n            case 'alt':\n                mods.alt = true;\n                return mods;\n            case 'meta':\n            case 'cmd':\n            case 'win':\n                mods.meta = true;\n                return mods;\n            default:\n                throw new Error(`invalid key modifier: ${part ? part : 'undefined'}, keyStr: ${keyStr}`);\n        }\n    }, { alt: false, control: false, shift: false, meta: false });\n    return { key, keyCode: false, modifiers };\n};\n\n/**\n * Credit - Angular Material\n */\n/** Creates a browser MouseEvent with the specified options. */\nfunction createMouseEvent(type, x = 0, y = 0, button = 0) {\n    const event = document.createEvent('MouseEvent');\n    event.initMouseEvent(type, true, false, window, 0, x, y, x, y, false, false, false, false, button, null);\n    // `initMouseEvent` doesn't allow us to pass the `buttons` and\n    // defaults it to 0 which looks like a fake event.\n    Object.defineProperty(event, 'buttons', { get: () => 1 });\n    return event;\n}\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n */\nfunction createTouchEvent(type, pageX = 0, pageY = 0) {\n    // In favor of creating events that work for most of the browsers, the event is created\n    // as a basic UI Event. The necessary details for the event will be set manually.\n    const event = new UIEvent(type, {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n        detail: 0,\n    });\n    // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n    // the touch details.\n    Object.defineProperties(event, {\n        touches: { value: [{ pageX, pageY }] },\n    });\n    return event;\n}\n/** Dispatches a keydown event from an element. */\nfunction createKeyboardEvent(type, keyOrKeyCode, target) {\n    const { key, keyCode, modifiers } = parseKeyOptions(keyOrKeyCode);\n    const event = document.createEvent('KeyboardEvent');\n    const originalPreventDefault = event.preventDefault;\n    // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n    if (event.initKeyEvent) {\n        event.initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt, modifiers.shift, modifiers.meta, keyCode);\n    }\n    else {\n        // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n        // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n        const modifiersStr = (modifiers.control ? 'Control ' : '' + modifiers.alt ? 'Alt ' : '' + modifiers.shift ? 'Shift ' : '' + modifiers.meta ? 'Meta' : '').trim();\n        event.initKeyboardEvent(type, true /* canBubble */, true /* cancelable */, window /* view */, 0 /* char */, key /* key */, 0 /* location */, modifiersStr /* modifiersList */, false /* repeat */);\n    }\n    // Webkit Browsers don't set the keyCode when calling the init function.\n    // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n    Object.defineProperties(event, {\n        code: { get: () => keyCode },\n        keyCode: { get: () => keyCode },\n        key: { get: () => key },\n        target: { get: () => target },\n        altKey: { get: () => !!modifiers.alt },\n        ctrlKey: { get: () => !!modifiers.control },\n        shiftKey: { get: () => !!modifiers.shift },\n        metaKey: { get: () => !!modifiers.meta },\n    });\n    // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n    // eslint-disable-next-line\n    event.preventDefault = function () {\n        Object.defineProperty(event, 'defaultPrevented', { configurable: true, get: () => true });\n        return originalPreventDefault.apply(this, arguments);\n    };\n    return event;\n}\n/** Creates a fake event object with any desired event type. */\nfunction createFakeEvent(type, canBubble = false, cancelable = true) {\n    const event = document.createEvent('Event');\n    event.initEvent(type, canBubble, cancelable);\n    return event;\n}\n\n/**\n * Credit - Angular Material\n */\n/**\n * Utility to dispatch any event on a Node.\n *\n * @publicApi\n */\nfunction dispatchEvent(node, event) {\n    node.dispatchEvent(event);\n    return event;\n}\n/**\n * Shorthand to dispatch a fake event on a specified node.\n *\n * dispatchFakeEvent(element, 'mousedown');\n *\n * @publicApi\n */\nfunction dispatchFakeEvent(node, type, canBubble) {\n    return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n/**\n * Shorthand to dispatch a keyboard event with a specified key.\n *\n *  dispatchKeyboardEvent(calendarBodyEl, 'keydown', 'LEFT_ARROW');\n *\n *  @publicApi\n */\nfunction dispatchKeyboardEvent(node, type, keyOrKeyCode, target) {\n    return dispatchEvent(node, createKeyboardEvent(type, keyOrKeyCode, target));\n}\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n *\n *  dispatchMouseEvent(rippleTarget, 'mousedown', 50, 75);\n *  dispatchMouseEvent(rippleTarget, 'mouseup');\n *\n *  @publicApi\n */\nfunction dispatchMouseEvent(node, type, x = 0, y = 0, event = createMouseEvent(type, x, y)) {\n    return dispatchEvent(node, event);\n}\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n *\n * dispatchTouchEvent(rippleTarget, 'touchstart');\n *\n * @publicApi\n */\nfunction dispatchTouchEvent(node, type, x = 0, y = 0) {\n    return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n\nclass DOMSelector {\n    // Wrap selector functions in a class to make reflection easier in getChild\n    constructor(execute) {\n        this.execute = execute;\n    }\n}\nconst byLabel = (matcher, options) => new DOMSelector((el) => queries.queryAllByLabelText(el, matcher, options));\nconst byPlaceholder = (matcher, options) => new DOMSelector((el) => queries.queryAllByPlaceholderText(el, matcher, options));\nconst byText = (matcher, options) => new DOMSelector((el) => queries.queryAllByText(el, matcher, options));\nconst byTextContent = (matcher, options) => {\n    let textContentMatcher;\n    const normalizer = options?.normalizer || getDefaultNormalizer(options);\n    const getTextContent = (elem) => normalizer(elem?.textContent ?? '');\n    if (typeof matcher === 'string' || typeof matcher === 'number') {\n        textContentMatcher = (_, elem) => {\n            if (options?.exact === false) {\n                return getTextContent(elem).toLowerCase().indexOf(matcher.toString().toLowerCase()) >= 0;\n            }\n            return getTextContent(elem) === matcher.toString();\n        };\n    }\n    else if (matcher instanceof RegExp) {\n        textContentMatcher = (_, elem) => matcher.test(getTextContent(elem));\n    }\n    else if (typeof matcher === 'function') {\n        textContentMatcher = (_, elem) => matcher(getTextContent(elem), elem);\n    }\n    else {\n        throw new Error(`Matcher type not supported: ${typeof matcher}`);\n    }\n    return new DOMSelector((el) => queries.queryAllByText(el, textContentMatcher, options));\n};\nconst byAltText = (matcher, options) => new DOMSelector((el) => queries.queryAllByAltText(el, matcher, options));\nconst byTitle = (matcher, options) => new DOMSelector((el) => queries.queryAllByTitle(el, matcher, options));\nconst byTestId = (matcher, options) => new DOMSelector((el) => queries.queryAllByTestId(el, matcher, options));\nconst byValue = (matcher, options) => new DOMSelector((el) => queries.queryAllByDisplayValue(el, matcher, options));\nconst byRole = (matcher, options) => new DOMSelector((el) => queries.queryAllByRole(el, matcher, options));\n\nfunction isRunningInJsDom() {\n    return navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom');\n}\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\nfunction declareInModule(moduleMetadata, type) {\n    if (isStandalone(type)) {\n        moduleMetadata.imports.push(type);\n    }\n    else {\n        moduleMetadata.declarations.push(type);\n    }\n}\n\n/** Property added to HTML Elements to ensure we don't double-patch focus methods on an element. */\nconst IS_FOCUS_PATCHED_PROP = Symbol('isFocusPatched');\n/** Ensures that a single set of matching focus and blur events occur when HTMLElement.focus() is called. */\nclass FocusEventWatcher {\n    constructor(element) {\n        this.element = element;\n        /** Set to true when browser sends a blur event for priorActiveElement */\n        this._blurred = false;\n        /** Set to true when browser sends a focus event for element */\n        this._focused = false;\n        this.element.addEventListener('focus', this);\n        this.priorActiveElement = element.ownerDocument.activeElement;\n        this.priorActiveElement?.addEventListener('blur', this);\n    }\n    handleEvent({ type }) {\n        if (type === 'focus') {\n            this._focused = true;\n        }\n        else if (type === 'blur') {\n            this._blurred = true;\n        }\n    }\n    /**\n     * If focus and blur events haven't occurred, fire fake ones.\n     */\n    ensureFocusEvents() {\n        this.element.removeEventListener('focus', this);\n        this.priorActiveElement?.removeEventListener('blur', this);\n        // Ensure priorActiveElement is blurred\n        if (!this._blurred && this.priorActiveElement) {\n            dispatchFakeEvent(this.priorActiveElement, 'blur');\n        }\n        if (!this._focused) {\n            dispatchFakeEvent(this.element, 'focus'); // Needed to cause focus event\n        }\n    }\n}\n/**\n * Patches an element's focus and blur methods to emit events consistently and predictably in tests.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n *\n * patchElementFocus(triggerEl);\n */\nfunction patchElementFocus(element) {\n    // https://github.com/ngneat/spectator/issues/373 - Don't patch when using JSDOM, eg in Jest\n    if (!isRunningInJsDom() && element[IS_FOCUS_PATCHED_PROP] === undefined) {\n        const originalFocus = element.focus.bind(element);\n        element.focus = (options) => {\n            const focusEventWatcher = new FocusEventWatcher(element);\n            // Sets document.activeElement. May or may not send focus + blur events\n            originalFocus(options);\n            focusEventWatcher.ensureFocusEvents();\n        };\n        element.blur = () => dispatchFakeEvent(element, 'blur');\n        element[IS_FOCUS_PATCHED_PROP] = true;\n    }\n}\n\nfunction getChildren(debugElementRoot) {\n    return (directiveOrSelector, options = { root: false, read: undefined }) => {\n        if (directiveOrSelector instanceof DOMSelector) {\n            return directiveOrSelector.execute(debugElementRoot.nativeElement);\n        }\n        const debugElements = debugElementRoot.queryAll(isString(directiveOrSelector) ? By.css(directiveOrSelector) : By.directive(directiveOrSelector));\n        if (options.read) {\n            return debugElements.map((debug) => debug.injector.get(options.read));\n        }\n        if (isString(directiveOrSelector)) {\n            return debugElements.map((debug) => debug.nativeElement);\n        }\n        return debugElements.map((debug) => debug.injector.get(directiveOrSelector));\n    };\n}\nfunction setProps(componentRef, keyOrKeyValues, value) {\n    if (isString(keyOrKeyValues)) {\n        componentRef.setInput(keyOrKeyValues, value);\n    }\n    else {\n        // eslint-disable-next-line guard-for-in\n        for (const p in keyOrKeyValues) {\n            componentRef.setInput(p, keyOrKeyValues[p]);\n        }\n    }\n    return componentRef.instance;\n}\nfunction setHostProps(componentRef, keyOrKeyValues, value) {\n    if (isString(keyOrKeyValues)) {\n        componentRef.instance[keyOrKeyValues] = value;\n    }\n    else {\n        // eslint-disable-next-line guard-for-in\n        for (const p in keyOrKeyValues) {\n            componentRef.instance[p] = keyOrKeyValues[p];\n        }\n    }\n    return componentRef.instance;\n}\n\n/**\n * Focuses a select element, selects the correct options and dispatches\n * the `change` event, simulating the user selecting an option\n * @param options Options to be selected.\n * @param element Element onto which to select the options.\n * @param config Object with extra config to dispatch change event when option selected\n *\n * selectOption('al' | ['al', 'ab'], select, config);\n */\nfunction selectOption(options, element, config) {\n    if (!(element instanceof HTMLSelectElement)) {\n        return;\n    }\n    element.focus();\n    if (isString(options)) {\n        const option = element.querySelector(`option[value=\"${options}\"]`);\n        if (!option) {\n            return;\n        }\n        setOptionSelected(option, element, config);\n    }\n    else if (options instanceof HTMLOptionElement) {\n        setOptionSelected(options, element, config);\n    }\n    else {\n        if (!element.multiple) {\n            return;\n        }\n        if (isHTMLOptionElementArray(options)) {\n            options.forEach((option) => setOptionSelected(option, element, config));\n        }\n        else {\n            element.querySelectorAll('option').forEach((opt) => {\n                if (options.includes(opt.value)) {\n                    setOptionSelected(opt, element, config);\n                }\n            });\n        }\n    }\n}\n/**\n * Set the option in the HTMLSelectElement to selected\n * @param option HTMLOptionElement to select\n * @param select HTMLSelectElement to add the options to\n * @param config Object with extra config to dispatch change event when option selected\n *\n * setOptionSelected(option, element, config);\n */\nfunction setOptionSelected(option, select, config) {\n    option.selected = true;\n    if (config.emitEvents) {\n        dispatchFakeEvent(select, 'change', true);\n    }\n}\n\n/**\n * Focuses an input or textarea, sets its value and dispatches\n * the `input` or `textarea` event, simulating the user typing.\n * @param value Value to be set on the input.\n * @param element Element onto which to set the value.\n *\n * typeInElement('al', input);\n */\nfunction typeInElement(value, element) {\n    if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLTextAreaElement)) {\n        return;\n    }\n    element.focus();\n    element.value = value;\n    dispatchFakeEvent(element, 'input', true);\n}\n\n/**\n * @internal\n */\nclass BaseSpectator {\n    inject(token) {\n        return TestBed.inject ? TestBed.inject(token) : TestBed.get(token);\n    }\n    /**\n     * Execute any pending effects.\n     */\n    flushEffects() {\n        TestBed.flushEffects();\n    }\n}\n\nconst KEY_UP = 'keyup';\n/**\n * @internal\n */\nclass DomSpectator extends BaseSpectator {\n    constructor(fixture, debugElement, instance, element) {\n        super();\n        this.fixture = fixture;\n        this.debugElement = debugElement;\n        this.instance = instance;\n        this.element = element;\n    }\n    inject(token) {\n        return super.inject(token);\n    }\n    detectChanges() {\n        this.fixture.detectChanges();\n    }\n    query(directiveOrSelector, options) {\n        if ((options || {}).root) {\n            if (isString(directiveOrSelector)) {\n                return document.querySelector(directiveOrSelector);\n            }\n            if (directiveOrSelector instanceof DOMSelector) {\n                return directiveOrSelector.execute(document)[0] || null;\n            }\n            return getChildren(this.getRootDebugElement())(directiveOrSelector, options)[0] || null;\n        }\n        if (options?.parentSelector) {\n            const debugElement = this.getDebugElement(options.parentSelector);\n            if (!debugElement) {\n                /* eslint-disable no-console */\n                console.error(`${directiveOrSelector} does not exists`);\n                return null;\n            }\n            return (getChildren(debugElement)(directiveOrSelector, {\n                root: options.root,\n                read: options.read,\n            })[0] || null);\n        }\n        return getChildren(this.debugElement)(directiveOrSelector, options)[0] || null;\n    }\n    queryAll(directiveOrSelector, options) {\n        if ((options || {}).root) {\n            if (isString(directiveOrSelector)) {\n                return Array.from(document.querySelectorAll(directiveOrSelector));\n            }\n            if (directiveOrSelector instanceof DOMSelector) {\n                return directiveOrSelector.execute(document);\n            }\n            return getChildren(this.getRootDebugElement())(directiveOrSelector, options);\n        }\n        if (options?.parentSelector) {\n            const debugElement = this.getDebugElement(options.parentSelector);\n            if (!debugElement) {\n                /* eslint-disable no-console */\n                console.error(`${directiveOrSelector} does not exists`);\n                return [];\n            }\n            return getChildren(debugElement)(directiveOrSelector, {\n                root: options.root,\n                read: options.read,\n            });\n        }\n        return getChildren(this.debugElement)(directiveOrSelector, options);\n    }\n    queryLast(directiveOrSelector, options) {\n        let result = [];\n        if ((options || {}).root) {\n            if (isString(directiveOrSelector)) {\n                result = Array.from(document.querySelectorAll(directiveOrSelector));\n            }\n            else if (directiveOrSelector instanceof DOMSelector) {\n                result = directiveOrSelector.execute(document);\n            }\n            else {\n                result = getChildren(this.getRootDebugElement())(directiveOrSelector, options);\n            }\n        }\n        else if (options?.parentSelector) {\n            const debugElement = this.getDebugElement(options.parentSelector);\n            if (!debugElement) {\n                /* eslint-disable no-console */\n                console.error(`${directiveOrSelector} does not exists`);\n                result = [];\n            }\n            else {\n                result = getChildren(debugElement)(directiveOrSelector, {\n                    root: options.root,\n                    read: options.read,\n                });\n            }\n        }\n        else {\n            result = getChildren(this.debugElement)(directiveOrSelector, options);\n        }\n        if (result && result.length) {\n            return result[result.length - 1];\n        }\n        return null;\n    }\n    output(output) {\n        const observable = this.instance[output];\n        if (!(observable instanceof Observable)) {\n            throw new Error(`${String(output)} is not an @Output`);\n        }\n        return observable;\n    }\n    tick(millis) {\n        tick(millis);\n        this.detectChanges();\n    }\n    click(selector = this.element) {\n        const element = this.getNativeElement(selector);\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(`Cannot click: ${selector} is not a HTMLElement`);\n        }\n        element.click();\n        this.detectChanges();\n    }\n    blur(selector = this.element) {\n        const element = this.getNativeElement(selector);\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(`Cannot blur: ${selector} is not a HTMLElement`);\n        }\n        patchElementFocus(element);\n        element.blur();\n        this.detectChanges();\n    }\n    focus(selector = this.element) {\n        const element = this.getNativeElement(selector);\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(`Cannot focus: ${selector} is not a HTMLElement`);\n        }\n        patchElementFocus(element);\n        element.focus();\n        this.detectChanges();\n    }\n    dispatchMouseEvent(selector = this.element, type, x = 0, y = 0, event = createMouseEvent(type, x, y)) {\n        const element = this.getNativeElement(selector);\n        if (!(element instanceof Node)) {\n            throw new Error(`Cannot dispatch mouse event: ${selector} is not a node`);\n        }\n        const dispatchedEvent = dispatchMouseEvent(element, type, x, y, event);\n        this.detectChanges();\n        return dispatchedEvent;\n    }\n    dispatchKeyboardEvent(selector = this.element, type, keyOrKeyCode, target) {\n        const element = this.getNativeElement(selector);\n        if (!(element instanceof Node)) {\n            throw new Error(`Cannot dispatch keyboard event: ${selector} is not a node`);\n        }\n        const event = dispatchKeyboardEvent(element, type, keyOrKeyCode, target);\n        this.detectChanges();\n        return event;\n    }\n    dispatchFakeEvent(selector = this.element, type, canBubble) {\n        const event = dispatchFakeEvent(this.getNativeElement(selector), type, canBubble);\n        this.detectChanges();\n        return event;\n    }\n    triggerEventHandler(directiveOrSelector, eventName, eventObj, options) {\n        const triggerDebugElement = this.getDebugElement(directiveOrSelector, options);\n        if (!triggerDebugElement) {\n            /* eslint-disable no-console */\n            console.error(`${directiveOrSelector} does not exists`);\n            return;\n        }\n        triggerDebugElement.triggerEventHandler(eventName, eventObj);\n        this.detectChanges();\n    }\n    get keyboard() {\n        return {\n            pressKey: (key, selector = this.element, event = KEY_UP) => {\n                this.dispatchKeyboardEvent(selector, event, key);\n            },\n            pressEscape: (selector = this.element, event = KEY_UP) => {\n                this.dispatchKeyboardEvent(selector, event, { key: 'Escape', keyCode: 27 });\n            },\n            pressEnter: (selector = this.element, event = KEY_UP) => {\n                this.dispatchKeyboardEvent(selector, event, { key: 'Enter', keyCode: 13 });\n            },\n            pressTab: (selector = this.element, event = KEY_UP) => {\n                this.dispatchKeyboardEvent(selector, event, { key: 'Tab', keyCode: 9 });\n            },\n            pressBackspace: (selector = this.element, event = KEY_UP) => {\n                this.dispatchKeyboardEvent(selector, event, { key: 'Backspace', keyCode: 8 });\n            },\n        };\n    }\n    get mouse() {\n        return {\n            contextmenu: (selector = this.element) => {\n                this.dispatchMouseEvent(selector, 'contextmenu');\n            },\n            dblclick: (selector = this.element) => {\n                this.dispatchMouseEvent(selector, 'dblclick');\n            },\n        };\n    }\n    dispatchTouchEvent(selector = this.element, type, x = 0, y = 0) {\n        dispatchTouchEvent(this.getNativeElement(selector), type, x, y);\n        this.detectChanges();\n    }\n    typeInElement(value, selector = this.element) {\n        typeInElement(value, this.getNativeElement(selector));\n        this.detectChanges();\n    }\n    selectOption(selector = this.element, options, config = { emitEvents: true }) {\n        if (!selector) {\n            throw new Error(`Cannot find select: ${selector}`);\n        }\n        selectOption(options, this.getNativeElement(selector), config);\n        this.detectChanges();\n    }\n    getNativeElement(selector) {\n        let element;\n        // Support global objects window and document\n        if (selector === window || selector === document) {\n            return selector;\n        }\n        if (isString(selector)) {\n            const exists = this.debugElement.query(By.css(selector));\n            if (exists) {\n                element = exists.nativeElement;\n            }\n            else {\n                /* eslint-disable no-console */\n                console.error(`${selector} does not exists`);\n            }\n        }\n        else if (selector instanceof DOMSelector) {\n            element = selector.execute(document)[0] || null;\n        }\n        else {\n            if (selector instanceof DebugElement || selector instanceof ElementRef) {\n                element = selector.nativeElement;\n            }\n            else {\n                element = selector;\n            }\n        }\n        return element;\n    }\n    getDebugElement(directiveOrSelector, options) {\n        const debugElement = options?.root ? this.getRootDebugElement() : this.debugElement;\n        if (isString(directiveOrSelector)) {\n            return debugElement.query(By.css(directiveOrSelector));\n        }\n        else if (directiveOrSelector instanceof DebugElement) {\n            return directiveOrSelector;\n        }\n        else {\n            return debugElement.query(By.directive(directiveOrSelector));\n        }\n    }\n    getRootDebugElement() {\n        let element = this.debugElement;\n        /**\n         * This bounded loop call is required to access the debug element for\n         * root dom element\n         */\n        while (true) {\n            if (!element) {\n                throw Error('Unable to find root element');\n            }\n            if (!element.parent) {\n                // Found the root element\n                return element;\n            }\n            element = element.parent;\n        }\n    }\n}\n\n/**\n * @publicApi\n */\nclass Spectator extends DomSpectator {\n    constructor(fixture, debugElement, instance, element) {\n        super(fixture, debugElement, instance, element);\n        this.fixture = fixture;\n        this.debugElement = debugElement;\n        this.instance = instance;\n        this.element = element;\n    }\n    get component() {\n        return this.instance;\n    }\n    inject(token, fromComponentInjector = false) {\n        if (fromComponentInjector) {\n            return this.debugElement.injector.get(token);\n        }\n        return super.inject(token);\n    }\n    detectComponentChanges() {\n        if (this.debugElement) {\n            this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n        }\n        else {\n            this.detectChanges();\n        }\n    }\n    setInput(input, value) {\n        setProps(this.fixture.componentRef, input, value);\n        // Force cd on the host component for cases such as: https://github.com/ngneat/spectator/issues/539\n        this.detectChanges();\n        // Force cd on the tested component\n        this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n    }\n    deferBlock(deferBlockIndex = 0) {\n        return this._deferBlocksForGivenFixture(deferBlockIndex, this.fixture.getDeferBlocks());\n    }\n    /**\n     *\n     * @param deferBlockFixtures Defer block fixture\n     * @returns deferBlock object with methods to access the defer blocks\n     */\n    _deferBlocksForGivenFixture(deferBlockIndex = 0, deferBlockFixtures) {\n        return {\n            renderComplete: async () => {\n                const renderedDeferFixture = await this._renderDeferStateAndGetFixture(DeferBlockState.Complete, deferBlockIndex, deferBlockFixtures);\n                return this._childrenDeferFixtures(renderedDeferFixture);\n            },\n            renderPlaceholder: async () => {\n                const renderedDeferFixture = await this._renderDeferStateAndGetFixture(DeferBlockState.Placeholder, deferBlockIndex, deferBlockFixtures);\n                return this._childrenDeferFixtures(renderedDeferFixture);\n            },\n            renderLoading: async () => {\n                const renderedDeferFixture = await this._renderDeferStateAndGetFixture(DeferBlockState.Loading, deferBlockIndex, deferBlockFixtures);\n                return this._childrenDeferFixtures(renderedDeferFixture);\n            },\n            renderError: async () => {\n                const renderedDeferFixture = await this._renderDeferStateAndGetFixture(DeferBlockState.Error, deferBlockIndex, deferBlockFixtures);\n                return this._childrenDeferFixtures(renderedDeferFixture);\n            },\n        };\n    }\n    /**\n     * Renders the given defer block state and returns the defer block fixture\n     *\n     * @param deferBlockState complete, placeholder, loading or error\n     * @param deferBlockIndex index of the defer block to render\n     * @param deferBlockFixtures Defer block fixture\n     * @returns Defer block fixture\n     */\n    async _renderDeferStateAndGetFixture(deferBlockState, deferBlockIndex = 0, deferBlockFixtures) {\n        const deferFixture = (await deferBlockFixtures)[deferBlockIndex];\n        await deferFixture.render(deferBlockState);\n        return deferFixture;\n    }\n    /**\n     *\n     * @param deferFixture Defer block fixture\n     * @returns deferBlock object with methods to access the nested defer blocks\n     */\n    _childrenDeferFixtures(deferFixture) {\n        return {\n            deferBlock: (deferBlockIndex = 0) => this._deferBlocksForGivenFixture(deferBlockIndex, deferFixture.getDeferBlocks()),\n        };\n    }\n}\n\nfunction addMatchers(matchers) {\n    if (!matchers)\n        return;\n    if (typeof jasmine !== 'undefined') {\n        jasmine.addMatchers(matchers);\n    }\n    else {\n        // Jest isn't on the global scope when using ESM so we\n        // assume that it's Jest if Jasmine is not defined\n        const jestExpectExtend = {};\n        for (const key of Object.keys(matchers)) {\n            if (key.startsWith('to'))\n                jestExpectExtend[key] = matchers[key]().compare;\n        }\n        expect.extend(jestExpectExtend);\n    }\n}\n\n/**\n * @license\n * Copyright Netanel Basal. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NetanelBasal/spectator/blob/master/LICENSE\n */\nfunction hex2rgb(hex) {\n    const h = hex.replace('#', '');\n    const matches = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'));\n    const [r, g, b] = matches.map((match) => parseInt(match.length === 1 ? match + match : match, 16));\n    return `rgb(${r},${g},${b})`;\n}\nfunction isHex(value) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value);\n}\nfunction trim(value) {\n    return (value || '').replace(/\\s/g, '');\n}\n\n/** Credit: https://github.com/unindented/custom-jquery-matchers/tree/master/packages/custom-jquery-matchers */\n// This should be imported before `jquery` since this library unpatches the `setTimeout`,\n// so jQuery won't setup a timer, that might be captured by zone.js.\nrestoreSetTimeout();\nconst hasProperty = (actual, expected) => {\n    return expected === undefined ? actual !== undefined : actual === expected;\n};\nconst containsProperty = (actual, expected) => {\n    return expected === undefined ? true : actual.includes(expected);\n};\nconst checkProperty = (el, prop, predicate) => {\n    let pass = false;\n    let failing = '';\n    for (const key of Object.keys(prop)) {\n        const actual = $(el).prop(key);\n        const addendum = prop[key] !== undefined ? ` with value '${prop[key]}'` : '';\n        pass = predicate(actual, prop[key]);\n        failing = !pass ? `'${prop}'${addendum}, but had '${actual}'` : '';\n    }\n    const message = () => `Expected element${pass ? ' not' : ''} to have property ${failing}`;\n    return { pass, message };\n};\nconst hasCss = (el, css) => {\n    let prop;\n    let value;\n    const $el = $(el);\n    for (prop in css) {\n        if (css.hasOwnProperty(prop)) {\n            value = css[prop];\n            if (isHex(value)) {\n                value = hex2rgb(css[prop]);\n            }\n            if (value === 'auto' && $el.get(0).style[prop] === 'auto') {\n                continue;\n            }\n            if (trim($el.get(0).style[prop]) !== trim(value) &&\n                trim(el.style[prop]) !== trim(value) &&\n                trim(el.style.getPropertyValue(prop)) !== trim(value)) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nconst hasSameText = (el, expected, options) => {\n    if (expected && Array.isArray(expected)) {\n        let actual;\n        let pass = false;\n        let failing;\n        $(el).each((i, e) => {\n            actual = options.exact && !options.trim ? $(e).text() : $.trim($(e).text());\n            pass = options.exact ? actual === expected[i] : actual.includes(expected[i]);\n            if (!pass) {\n                failing = expected[i];\n                return false;\n            }\n        });\n        const message = () => `Expected element${pass ? ' not' : ''} to have${options.exact ? ' exact' : ''} text '${failing}', but had '${actual}'`;\n        return { pass, message };\n    }\n    const actual = options.exact && !options.trim ? $(el).text() : $.trim($(el).text());\n    if (expected && typeof expected !== 'string') {\n        const pass = expected(actual);\n        const message = () => `Expected element${pass ? ' not' : ''} to have${options.exact ? ' exact' : ''} text matching '${expected}',` + ` but had '${actual}'`;\n        return { pass, message };\n    }\n    const pass = options.exact && !Array.isArray(expected) ? actual === expected : actual.indexOf(expected) !== -1;\n    const message = () => `Expected element${pass ? ' not' : ''} to have${options.exact ? ' exact' : ''} text '${expected}', but had '${actual}'`;\n    return { pass, message };\n};\nconst comparator = (func) => () => ({\n    compare: func,\n});\n/**\n *\n * expect('.zippy__content').not.toExist();\n */\nconst toExist = comparator((el) => {\n    const actual = $(el).length;\n    const pass = actual > 0;\n    const message = () => `Expected ${el} element${pass ? ' not' : ''} to exist`;\n    return { pass, message };\n});\n/**\n *\n * expect('.zippy__content').toHaveLength(3);\n */\nconst toHaveLength = comparator((el, expected) => {\n    const actual = $(el).length;\n    const pass = actual === expected;\n    const message = () => `Expected element${pass ? ' not' : ''} to have length ${expected}, but had ${actual}`;\n    return { pass, message };\n});\n/**\n *\n * expect('.zippy__content').toHaveId('ID');\n */\nconst toHaveId = comparator((el, expected) => {\n    const actual = $(el).attr('id');\n    const pass = actual === expected;\n    const message = () => `Expected element${pass ? ' not' : ''} to have ID '${expected}', but had '${actual}'`;\n    return { pass, message };\n});\n/**\n * This validates classes in strict order. If you want to validate classes in any order,\n * just set the strict config option to false.\n *\n * expect('.zippy__content').toHaveClass('class');\n * expect('.zippy__content').toHaveClass('class-a, class-b');\n * expect('.zippy__content').toHaveClass(['class-a, class-b']);\n * expect('.zippy__content').toHaveClass(['class-b, class-a']);\n * expect('.zippy__content').not.toHaveClass(['class-b, class-a'], { strict: true });\n */\nconst toHaveClass = comparator((el, expected, options = { strict: true }) => {\n    if (expected && Array.isArray(expected)) {\n        const actual = $(el).attr('class');\n        const expectedClasses = expected.join(' ');\n        const pass = options.strict ? $(el).hasClass(expectedClasses) : expected.every((e) => $(el).hasClass(e));\n        const message = () => `Expected element${pass ? ' not' : ''} to have value '${expectedClasses}', but had '${actual}'`;\n        return { pass, message };\n    }\n    const actual = $(el).attr('class');\n    const pass = $(el).hasClass(expected);\n    const message = () => `Expected element${pass ? ' not' : ''} to have class '${expected}', but had '${actual}'`;\n    return { pass, message };\n});\n/**\n * expect(host.query('.zippy')).toHaveAttribute('id', 'zippy');\n */\nconst toHaveAttribute = comparator((el, attr, val) => {\n    if (isObject(attr)) {\n        let pass = false;\n        let failing;\n        for (const key of Object.keys(attr)) {\n            const actual = $(el).attr(key);\n            const addendum = attr[key] !== undefined ? ` with value '${attr[key]}'` : '';\n            pass = hasProperty(actual, attr[key]);\n            failing = !pass ? `'${attr}'${addendum}, but had '${actual}'` : '';\n        }\n        const message = () => `Expected element${pass ? ' not' : ''} to have attribute ${failing}`;\n        return { pass, message };\n    }\n    const actual = $(el).attr(attr);\n    const addendum = val !== undefined ? ` with value '${val}'` : '';\n    const pass = hasProperty(actual, val);\n    const message = () => `Expected element${pass ? ' not' : ''} to have attribute '${attr}'${addendum}, but had '${actual}'`;\n    return { pass, message };\n});\n/**\n *  expect(host.query('.checkbox')).toHaveProperty('checked', true);\n *  expect(host.query('.checkbox')).toHaveProperty({checked: true});\n */\nconst toHaveProperty = comparator((el, prop, val) => {\n    if (isObject(prop)) {\n        return checkProperty(el, prop, hasProperty);\n    }\n    const actual = $(el).prop(prop);\n    const addendum = val !== undefined ? ` with value '${val}'` : '';\n    const pass = hasProperty(actual, val);\n    const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n    return { pass, message };\n});\nconst toContainProperty = comparator((el, prop, val) => {\n    if (isObject(prop)) {\n        return checkProperty(el, prop, containsProperty);\n    }\n    const actual = $(el).prop(prop);\n    const addendum = val !== undefined ? ` with value '${val}'` : '';\n    const pass = containsProperty(actual, val);\n    const message = () => `Expected element${pass ? ' not' : ''} to have property '${prop}'${addendum}, but had '${actual}'`;\n    return { pass, message };\n});\n/**\n *\n * expect('.zippy__content').toHaveText('Content');\n * expect('.zippy__content').toHaveText(['Content A', 'Content B']);\n *\n * expect('.zippy__content').toHaveText((text) => text.includes('..');\n */\nconst toHaveText = comparator((el, expected, exact = false) => hasSameText(el, expected, { exact, trim: false }));\nconst toHaveExactText = comparator((el, expected, options = { trim: false }) => hasSameText(el, expected, { exact: true, trim: options.trim }));\nconst toHaveExactTrimmedText = comparator((el, expected) => hasSameText(el, expected, { exact: true, trim: true }));\nconst toContainText = toHaveText;\n/**\n *\n * expect('.zippy__content').toHaveValue('value');\n * expect('.zippy__content').toHaveValue(['value a', 'value b']);\n */\nconst toHaveValue = comparator((el, expected) => {\n    if (expected && Array.isArray(expected)) {\n        let actual;\n        let pass = false;\n        let failing;\n        $(el).each((i, e) => {\n            actual = $(e).val();\n            pass = actual === expected[i];\n            if (!pass) {\n                failing = expected[i];\n                return false;\n            }\n        });\n        const message = () => `Expected element${pass ? ' not' : ''} to have value '${failing}', but had '${actual}'`;\n        return { pass, message };\n    }\n    const actual = $(el).val();\n    const pass = actual === expected;\n    const message = () => `Expected element${pass ? ' not' : ''} to have value '${expected}', but had '${actual}'`;\n    return { pass, message };\n});\nconst toContainValue = toHaveValue;\n/**\n *\n *  expect(host.element).toHaveStyle({\n *    backgroundColor: 'rgba(0, 0, 0, 0.1)'\n *  });\n */\nconst toHaveStyle = comparator((el, expected) => {\n    const pass = hasCss(el, expected);\n    const message = () => `Expected element${pass ? ' not' : ''} to have CSS ${JSON.stringify(expected)}`;\n    return { pass, message };\n});\n/**\n *\n * expect('.zippy__content').toHaveData({data: 'role', val: 'admin'});\n */\nconst toHaveData = comparator((el, { data, val }) => {\n    const actual = $(el).data(data);\n    const addendum = val !== undefined ? ` with value '${val}'` : '';\n    const pass = hasProperty(actual, val);\n    const message = () => `Expected element${pass ? ' not' : ''} to have data '${data}'${addendum}, but had '${actual}'`;\n    return { pass, message };\n});\n/**\n *\n * expect('.checkbox').toBeChecked();\n */\nconst toBeChecked = comparator((el) => {\n    const pass = $(el).is(':checked');\n    const message = () => `Expected element${pass ? ' not' : ''} to be checked`;\n    return { pass, message };\n});\n/**\n *\n * expect('.checkbox').toBeIndeterminate();\n */\nconst toBeIndeterminate = comparator((el) => {\n    const pass = $(el).is(':indeterminate');\n    const message = () => `Expected element${pass ? ' not' : ''} to be indeterminate`;\n    return { pass, message };\n});\n/**\n *\n * expect('.checkbox').toBeDisabled();\n */\nconst toBeDisabled = comparator((el) => {\n    const pass = $(el).is(':disabled');\n    const message = () => `Expected element${pass ? ' not' : ''} to be disabled`;\n    return { pass, message };\n});\n/**\n * An empty element is an element without child elements or text.\n *\n * expect('div').toBeEmpty();\n */\nconst toBeEmpty = comparator((el) => {\n    const pass = $(el).is(':empty');\n    const message = () => `Expected element${pass ? ' not' : ''} to be empty`;\n    return { pass, message };\n});\n/**\n * Verify if an object has some expected properties.\n *\n * const actual = { lorem: 'first', ipsum: 'second' };\n * expect(actual).toBePartial({ lorem: 'first' });\n */\nconst toBePartial = comparator((actual, expected) => {\n    const mapToPropsAndValues = (values, properties) => {\n        return properties.map((prop) => {\n            return {\n                name: prop,\n                value: values[prop],\n                type: typeof values[prop],\n            };\n        });\n    };\n    const actualProps = Object.getOwnPropertyNames(actual);\n    const actualPropsAndValues = mapToPropsAndValues(actual, actualProps);\n    const expectedProps = Object.getOwnPropertyNames(expected);\n    const expectedPropsAndValues = mapToPropsAndValues(expected, expectedProps);\n    const pass = expectedProps.every((expectedProp) => actual[expectedProp] === expected[expectedProp]);\n    const message = () => `Expected element${pass ? ' not' : ''} to contain properties: ${JSON.stringify(expectedPropsAndValues)}.`.concat(` Actual properties: ${JSON.stringify(actualPropsAndValues)}`);\n    return { pass, message };\n});\n/**\n * Hidden elements are elements that have:\n * 1. Display or visibility style properties set to \"none\" or \"hidden\"\n * 2. Display or visibility computed styles set to \"none\" or \"hidden\"\n * 3. Width and height set to 0 (check not applied in jest)\n * 4. A hidden parent element (this also hides child elements)\n * 5. Type equal to \"hidden\" (only for form elements)\n * 6. A \"hidden\" attribute\n */\nfunction isHidden(elOrSelector) {\n    let el = $(elOrSelector)[0];\n    if (!el) {\n        return true;\n    }\n    const hiddenWhen = [\n        (el) => !(el.offsetWidth || el.offsetHeight || el.getClientRects().length),\n        (el) => el.style.display === 'none' || window.getComputedStyle(el).getPropertyValue?.('display') === 'none',\n        (el) => el.style.visibility === 'hidden' || window.getComputedStyle(el).getPropertyValue?.('visibility') === 'hidden',\n        (el) => el.type === 'hidden',\n        (el) => el.hasAttribute('hidden'),\n    ];\n    if (isRunningInJsDom()) {\n        // When running in JSDOM (Jest), offset-properties and client rects are always reported as 0\n        // - hence, let's take a more \"naive\" approach here. (https://github.com/jsdom/jsdom/issues/135)\n        hiddenWhen.shift();\n    }\n    while (el) {\n        if (el === document) {\n            break;\n        }\n        if (el.nodeType === Node.ELEMENT_NODE && hiddenWhen.some((rule) => rule(el))) {\n            return true;\n        }\n        el = el.parentNode || el.host;\n    }\n    return false;\n}\n/**\n * Hidden elements are elements that have:\n * 1. Display or visibility style properties set to \"none\" or \"hidden\"\n * 2. Display or visibility computed styles set to \"none\" or \"hidden\"\n * 3. Width and height set to 0 (check not applied in jest)\n * 4. A hidden parent element (this also hides child elements)\n * 5. Type equal to \"hidden\" (only for form elements)\n * 6. A \"hidden\" attribute\n *\n * expect('div').toBeHidden();\n *\n */\nconst toBeHidden = comparator((el) => {\n    const pass = isHidden(el);\n    const message = () => `Expected element${pass ? ' not' : ''} to be hidden`;\n    return { pass, message };\n});\n/**\n * The :selected selector selects option elements that are pre-selected.\n *\n * expect('div').toBeSelected();\n *\n */\nconst toBeSelected = comparator((el) => {\n    const pass = $(el).is(':selected');\n    const message = () => `Expected element${pass ? ' not' : ''} to be selected`;\n    return { pass, message };\n});\n/**\n * Hidden elements are elements that have:\n * 1. Display property set to \"none\"\n * 2. Width and height set to 0\n * 3. A hidden parent element (this also hides child elements)\n * 4. Type equal to \"hidden\" (only for form elements)\n * 5. A \"hidden\" attribute\n *\n * expect('div').toBeVisible();\n *\n */\nconst toBeVisible = comparator((el) => {\n    const pass = !isHidden(el);\n    const message = () => `Expected element${pass ? ' not' : ''} to be visible`;\n    return { pass, message };\n});\n/**\n * The :focus selector selects the element that currently has focus.\n *\n * expect('input').toBeFocused();\n */\nconst toBeFocused = comparator((el) => {\n    const element = $(el).get(0);\n    const pass = element === element.ownerDocument.activeElement;\n    const message = () => `Expected element${pass ? ' not' : ''} to be focused`;\n    return { pass, message };\n});\n/**\n * Check to see if the set of matched elements matches the given selector\n * returns true if the dom contains the element\n *\n * expect('div').toBeMatchedBy('.js-something')\n */\nconst toBeMatchedBy = comparator((el, expected) => {\n    const actual = $(el).filter(expected).length;\n    const pass = actual > 0;\n    const message = () => `Expected element${pass ? ' not' : ''} to be matched by '${expected}'`;\n    return { pass, message };\n});\n/**\n *\n * expect('div').toHaveDescendant('.child')\n */\nconst toHaveDescendant = comparator((el, selector) => {\n    const actual = $(el).find(selector).length;\n    const pass = actual > 0;\n    const message = () => `Expected element${pass ? ' not' : ''} to contain child '${selector}'`;\n    return { pass, message };\n});\n/**\n *\n * expect('div').toHaveDescendantWithText({selector: '.child', text: 'text'})\n */\nconst toHaveDescendantWithText = comparator((el, { selector, text }) => {\n    const actual = $.trim($(el).find(selector).text());\n    if (text && $.isFunction(text.test)) {\n        const pass = text.test(actual);\n        const message = () => `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text matching '${text}',` + ` but had '${actual}'`;\n        return { pass, message };\n    }\n    const pass = actual.indexOf(text) !== -1;\n    const message = () => `Expected element${pass ? ' not' : ''} to have descendant '${selector}' with text '${text}', but had '${actual}'`;\n    return { pass, message };\n});\nconst toHaveSelectedOptions = comparator((el, expected) => {\n    if (expected instanceof HTMLOptionElement) {\n        const actual = $(el).find(':selected');\n        const pass = actual.is($(expected));\n        const message = () => `Expected element${pass ? ' not' : ''} to have options '[${expected.outerHTML}]' but had '[${actual[0].outerHTML}]'`;\n        return { pass, message };\n    }\n    if (isHTMLOptionElementArray(expected)) {\n        const actual = $(el).find(':selected');\n        const pass = actual.length === expected.length && actual.toArray().every((_, index) => $(actual[index]).is(expected[index]));\n        const expectedOptionsString = $(expected)\n            .get()\n            .map((option) => option.outerHTML)\n            .join(',');\n        const actualOptionsString = actual\n            .get()\n            .map((option) => option.outerHTML)\n            .join(',');\n        const message = () => `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actualOptionsString}]'`;\n        return { pass, message };\n    }\n    const actual = $(el).val();\n    const pass = coerceArray(expected)?.every((v) => actual.includes(v));\n    const expectedOptionsString = Array.isArray(expected)\n        ? expected.reduce((acc, val, i) => acc + `${i === expected.length ? '' : ','}${val}`)\n        : expected;\n    const message = () => `Expected element${pass ? ' not' : ''} to have options '[${expectedOptionsString}]' but had '[${actual}]'`;\n    return { pass, message };\n});\n\nvar customMatchers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    toBeChecked: toBeChecked,\n    toBeDisabled: toBeDisabled,\n    toBeEmpty: toBeEmpty,\n    toBeFocused: toBeFocused,\n    toBeHidden: toBeHidden,\n    toBeIndeterminate: toBeIndeterminate,\n    toBeMatchedBy: toBeMatchedBy,\n    toBePartial: toBePartial,\n    toBeSelected: toBeSelected,\n    toBeVisible: toBeVisible,\n    toContainProperty: toContainProperty,\n    toContainText: toContainText,\n    toContainValue: toContainValue,\n    toExist: toExist,\n    toHaveAttribute: toHaveAttribute,\n    toHaveClass: toHaveClass,\n    toHaveData: toHaveData,\n    toHaveDescendant: toHaveDescendant,\n    toHaveDescendantWithText: toHaveDescendantWithText,\n    toHaveExactText: toHaveExactText,\n    toHaveExactTrimmedText: toHaveExactTrimmedText,\n    toHaveId: toHaveId,\n    toHaveLength: toHaveLength,\n    toHaveProperty: toHaveProperty,\n    toHaveSelectedOptions: toHaveSelectedOptions,\n    toHaveStyle: toHaveStyle,\n    toHaveText: toHaveText,\n    toHaveValue: toHaveValue\n});\n\nlet globals = {\n    providers: [],\n    declarations: [],\n    imports: [],\n};\nfunction defineGlobalsInjections(config) {\n    globals = { ...globals, ...config };\n}\nfunction getGlobalsInjections() {\n    return globals;\n}\n\n/**\n * @internal\n */\nfunction initialModule(options) {\n    const globals = { imports: [], declarations: [], providers: [], ...getGlobalsInjections() };\n    return {\n        declarations: [...globals.declarations, ...options.declarations, ...options.entryComponents],\n        imports: [...(options.disableAnimations ? [NoopAnimationsModule] : []), ...globals.imports, ...options.imports],\n        providers: [...globals.providers, ...options.providers, ...options.mocks.map((type) => options.mockProvider(type))],\n        entryComponents: [...options.entryComponents],\n        teardown: \n        // Caretaker note: we don't want to merge the `globals.teardown` and `options.teardown`, since `options.teardown`\n        // is always defined. If the user calls `defineGlobalsInjections({ teardown: { ... } })` and we merge it with\n        // `options.teardown`, then `options.teardown` will always override global options.\n        { ...(globals.teardown || options.teardown) },\n        deferBlockBehavior: globals.deferBlockBehavior || options.deferBlockBehavior,\n        errorOnUnknownElements: globals.errorOnUnknownElements || options.errorOnUnknownElements,\n        errorOnUnknownProperties: globals.errorOnUnknownProperties || options.errorOnUnknownProperties,\n    };\n}\n\n/**\n * @internal\n */\nfunction initialSpectatorModule(options) {\n    const moduleMetadata = initialModule(options);\n    if (options.declareComponent) {\n        declareInModule(moduleMetadata, options.component);\n    }\n    moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n    return moduleMetadata;\n}\n\n/**\n * @internal\n */\nfunction merge(defaults, overrides) {\n    return { ...defaults, ...overrides };\n}\n\n/**\n * @internal\n */\nfunction installProtoMethods(mock, proto, createSpyFn) {\n    if (proto === null || proto === Object.prototype) {\n        return;\n    }\n    for (const key of Object.getOwnPropertyNames(proto)) {\n        const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n        if (!descriptor) {\n            continue;\n        }\n        if (typeof descriptor.value === 'function' && key !== 'constructor' && typeof mock[key] === 'undefined') {\n            mock[key] = createSpyFn(key);\n        }\n        else if (descriptor.get && !mock.hasOwnProperty(key)) {\n            Object.defineProperty(mock, key, {\n                set: (value) => (mock[`_${key}`] = value),\n                get: () => mock[`_${key}`],\n                configurable: true,\n            });\n        }\n    }\n    installProtoMethods(mock, Object.getPrototypeOf(proto), createSpyFn);\n    mock.castToWritable = () => mock;\n}\n/**\n * @publicApi\n */\nfunction createSpyObject(type, template) {\n    const mock = { ...template } || {};\n    installProtoMethods(mock, type.prototype, (name) => {\n        const newSpy = jasmine.createSpy(name);\n        newSpy.andCallFake = (fn) => newSpy.and.callFake(fn);\n        newSpy.andReturn = (val) => newSpy.and.returnValue(val);\n        newSpy.reset = () => newSpy.calls.reset();\n        // revisit return null here (previously needed for rtts_assert).\n        newSpy.and.returnValue(null);\n        return newSpy;\n    });\n    return mock;\n}\n/**\n * @publicApi\n */\nfunction mockProvider(type, properties) {\n    return {\n        provide: type,\n        useFactory: () => createSpyObject(type, properties),\n    };\n}\n\nconst defaultOptions = {\n    disableAnimations: true,\n    entryComponents: [],\n    mocks: [],\n    mockProvider,\n    providers: [],\n    declarations: [],\n    imports: [],\n    schemas: [],\n    overrideModules: [],\n    overrideComponents: [],\n    overrideDirectives: [],\n    overridePipes: [],\n    teardown: { destroyAfterEach: false },\n    errorOnUnknownElements: false,\n    errorOnUnknownProperties: false,\n    deferBlockBehavior: DeferBlockBehavior.Playthrough,\n};\n/**\n * @internal\n */\nfunction getDefaultBaseOptions(options) {\n    return merge(defaultOptions, options);\n}\n\nconst defaultSpectatorOptions = {\n    ...getDefaultBaseOptions(),\n    shallow: false,\n    declareComponent: true,\n    detectChanges: true,\n    componentProviders: [],\n    componentViewProviders: [],\n    componentMocks: [],\n    componentViewProvidersMocks: [],\n};\n/**\n * @internal\n */\nfunction getSpectatorDefaultOptions(overrides) {\n    return merge(defaultSpectatorOptions, overrides);\n}\n\n/**\n * @internal\n */\nfunction overrideComponentIfProviderOverridesSpecified(options) {\n    const hasProviderOverrides = options.componentProviders.length || options.componentMocks.length;\n    const hasViewProviders = options.componentViewProviders.length || options.componentViewProvidersMocks.length;\n    if (hasProviderOverrides || hasViewProviders) {\n        let providerConfiguration = {};\n        if (hasProviderOverrides) {\n            providerConfiguration = {\n                providers: [...options.componentProviders, ...options.componentMocks.map((p) => options.mockProvider(p))],\n            };\n        }\n        if (hasViewProviders) {\n            providerConfiguration = {\n                ...providerConfiguration,\n                viewProviders: [...options.componentViewProviders, ...options.componentViewProvidersMocks.map((p) => options.mockProvider(p))],\n            };\n        }\n        TestBed.overrideComponent(options.component, {\n            set: providerConfiguration,\n        });\n    }\n}\n/**\n * @internal\n */\nfunction overrideModules(options) {\n    if (options.overrideModules.length) {\n        options.overrideModules.forEach((overrideModule) => {\n            const [ngModule, override] = overrideModule;\n            TestBed.overrideModule(ngModule, override);\n        });\n    }\n}\n/**\n * @internal\n */\nfunction overrideComponents(options) {\n    if (options.overrideComponents.length) {\n        options.overrideComponents.forEach((overrideComponent) => {\n            const [component, override] = overrideComponent;\n            if (!reflectComponentType(component)?.isStandalone) {\n                throw new Error(`Can not override non standalone component`);\n            }\n            TestBed.overrideComponent(component, override);\n        });\n    }\n}\n/**\n * @internal\n */\nfunction overrideDirectives(options) {\n    if (options.overrideDirectives.length) {\n        options.overrideDirectives.forEach((overrideDirective) => {\n            const [directive, override] = overrideDirective;\n            if (!isStandalone(directive)) {\n                throw new Error(`Can not override non standalone directive`);\n            }\n            TestBed.overrideDirective(directive, override);\n        });\n    }\n}\n/**\n * @internal\n */\nfunction overridePipes(options) {\n    if (options.overridePipes.length) {\n        options.overridePipes.forEach((overridePipe) => {\n            const [pipe, override] = overridePipe;\n            if (!isStandalone(pipe)) {\n                throw new Error(`Can not override non standalone pipe`);\n            }\n            TestBed.overridePipe(pipe, override);\n        });\n    }\n}\n/**\n * @publicApi\n */\nfunction createComponentFactory(typeOrOptions) {\n    const options = isType(typeOrOptions)\n        ? getSpectatorDefaultOptions({ component: typeOrOptions })\n        : getSpectatorDefaultOptions(typeOrOptions);\n    const moduleMetadata = initialSpectatorModule(options);\n    beforeEach(waitForAsync(() => {\n        addMatchers(customMatchers);\n        TestBed.configureTestingModule(moduleMetadata).overrideModule(BrowserDynamicTestingModule, {});\n        overrideModules(options);\n        overrideComponents(options);\n        overrideDirectives(options);\n        overridePipes(options);\n        overrideComponentIfProviderOverridesSpecified(options);\n        TestBed.compileComponents();\n    }));\n    return (overrides) => {\n        const defaults = { props: {}, detectChanges: true, providers: [] };\n        const { detectChanges, props, providers } = { ...defaults, ...overrides };\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        const spectator = createSpectator(options, props);\n        if (options.detectChanges && detectChanges) {\n            spectator.detectChanges();\n        }\n        return spectator;\n    };\n}\nfunction createSpectator(options, props) {\n    const fixture = TestBed.createComponent(options.component);\n    const debugElement = fixture.debugElement;\n    const component = setProps(fixture.componentRef, props);\n    return new Spectator(fixture, debugElement, component, debugElement.nativeElement);\n}\n\n/**\n * @publicApi\n */\nclass SpectatorHost extends DomSpectator {\n    constructor(hostComponent, hostDebugElement, hostElement, hostFixture, debugElement, componentInstance, element) {\n        super(hostFixture, debugElement, componentInstance, element);\n        this.hostComponent = hostComponent;\n        this.hostDebugElement = hostDebugElement;\n        this.hostElement = hostElement;\n        this.hostFixture = hostFixture;\n        this.debugElement = debugElement;\n        this.element = element;\n    }\n    get component() {\n        return this.instance;\n    }\n    inject(token, fromComponentInjector = false) {\n        if (fromComponentInjector) {\n            return this.debugElement.injector.get(token);\n        }\n        return super.inject(token);\n    }\n    detectComponentChanges() {\n        if (this.debugElement) {\n            this.debugElement.injector.get(ChangeDetectorRef).detectChanges();\n        }\n        else {\n            this.detectChanges();\n        }\n    }\n    queryHost(directiveOrSelector, options) {\n        if ((options || {}).root && isString(directiveOrSelector)) {\n            return document.querySelector(directiveOrSelector);\n        }\n        return getChildren(this.hostDebugElement)(directiveOrSelector, options)[0] || null;\n    }\n    queryHostAll(directiveOrSelector, options) {\n        if ((options || {}).root && isString(directiveOrSelector)) {\n            return Array.from(document.querySelectorAll(directiveOrSelector));\n        }\n        return getChildren(this.hostDebugElement)(directiveOrSelector, options);\n    }\n    setHostInput(input, value) {\n        setHostProps(this.fixture.componentRef, input, value);\n        this.detectChanges();\n    }\n}\n\n// TODO (dirkluijk): remove after upgrading to Angular 8.2\n// see: https://github.com/angular/angular/commit/10a1e1974b816ebb979dc10586b160ee07ad8356\nfunction nodeByDirective(type) {\n    return (debugNode) => debugNode.providerTokens.includes(type);\n}\n\n/**\n * @internal\n */\nfunction initialSpectatorWithHostModule(options) {\n    const moduleMetadata = initialSpectatorModule(options);\n    moduleMetadata.declarations.push(options.host);\n    return moduleMetadata;\n}\n\nclass HostComponent {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: HostComponent, deps: [], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.1\", type: HostComponent, selector: \"lib-ngneat-host-component\", ngImport: i0, template: '', isInline: true }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: HostComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-ngneat-host-component',\n                    template: '',\n                }]\n        }] });\n/*\n  This is an unused module to resolve the ng build error:\n    'Cannot determine the module for class HostComponent'\n\n  Reference: https://github.com/angular/issues/13590\n*/\nclass HostModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: HostModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.1\", ngImport: i0, type: HostModule, declarations: [HostComponent] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: HostModule }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: HostModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [HostComponent],\n                }]\n        }] });\n\nconst defaultSpectatorHostOptions = {\n    ...getSpectatorDefaultOptions(),\n    host: HostComponent,\n    template: '',\n};\n/**\n * @internal\n */\nfunction getSpectatorHostDefaultOptions(overrides) {\n    return merge(defaultSpectatorHostOptions, overrides);\n}\n\nfunction createHostFactory(typeOrOptions) {\n    const options = isType(typeOrOptions)\n        ? getSpectatorHostDefaultOptions({ component: typeOrOptions })\n        : getSpectatorHostDefaultOptions(typeOrOptions);\n    const moduleMetadata = initialSpectatorWithHostModule(options);\n    beforeEach(waitForAsync(() => {\n        addMatchers(customMatchers);\n        TestBed.configureTestingModule(moduleMetadata).overrideModule(BrowserDynamicTestingModule, {});\n        overrideModules(options);\n        overrideComponents(options);\n        overrideDirectives(options);\n        overridePipes(options);\n        overrideComponentIfProviderOverridesSpecified(options);\n        if (options.template) {\n            TestBed.overrideComponent(options.host, {\n                set: { template: options.template },\n            });\n        }\n    }));\n    return (template, overrides) => {\n        const defaults = { hostProps: {}, detectChanges: true, providers: [] };\n        const { detectChanges, hostProps, providers } = { ...defaults, ...overrides };\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        if (template) {\n            TestBed.overrideComponent(options.host, {\n                set: { template: template },\n            });\n        }\n        const spectator = createSpectatorHost(options, hostProps);\n        if (options.detectChanges && detectChanges) {\n            spectator.detectChanges();\n        }\n        return spectator;\n    };\n}\nfunction createSpectatorHost(options, hostProps) {\n    const hostFixture = TestBed.createComponent(options.host);\n    const debugElement = hostFixture.debugElement.query(By.directive(options.component)) || hostFixture.debugElement;\n    const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.component))[0];\n    if (!debugNode) {\n        throw new Error(`Cannot find component/directive ${options.component} in host template \uD83D\uDE14`);\n    }\n    const hostComponent = setHostProps(hostFixture.componentRef, hostProps);\n    const component = debugNode.injector.get(options.component);\n    return new SpectatorHost(hostComponent, hostFixture.debugElement, hostFixture.nativeElement, hostFixture, debugElement, component, debugElement.nativeElement);\n}\n\n/**\n * @publicApi\n */\nclass SpectatorDirective extends DomSpectator {\n    constructor(hostComponent, fixture, debugElement, instance, element) {\n        super(fixture, debugElement, instance, element);\n        this.hostComponent = hostComponent;\n        this.fixture = fixture;\n        this.debugElement = debugElement;\n        this.instance = instance;\n        this.element = element;\n    }\n    get directive() {\n        return this.instance;\n    }\n    inject(token, fromDirectiveInjector = false) {\n        if (fromDirectiveInjector) {\n            return this.debugElement.injector.get(token);\n        }\n        return super.inject(token);\n    }\n    setHostInput(input, value) {\n        setHostProps(this.fixture.componentRef, input, value);\n        this.detectChanges();\n    }\n}\n\n/**\n * @internal\n */\nfunction initialSpectatorDirectiveModule(options) {\n    const moduleMetadata = initialModule(options);\n    if (options.declareDirective) {\n        declareInModule(moduleMetadata, options.directive);\n    }\n    moduleMetadata.declarations.push(options.host);\n    moduleMetadata.schemas = [options.shallow ? NO_ERRORS_SCHEMA : options.schemas || []];\n    return moduleMetadata;\n}\n\nconst defaultSpectatorRoutingOptions = {\n    ...getDefaultBaseOptions(),\n    host: HostComponent,\n    template: '',\n    shallow: false,\n    detectChanges: true,\n    directiveProviders: [],\n    directiveMocks: [],\n    declareDirective: true,\n};\n/**\n * @internal\n */\nfunction getSpectatorDirectiveDefaultOptions(overrides) {\n    return merge(defaultSpectatorRoutingOptions, overrides);\n}\n\nfunction createDirectiveFactory(typeOrOptions) {\n    const options = isType(typeOrOptions)\n        ? getSpectatorDirectiveDefaultOptions({ directive: typeOrOptions })\n        : getSpectatorDirectiveDefaultOptions(typeOrOptions);\n    const moduleMetadata = initialSpectatorDirectiveModule(options);\n    beforeEach(waitForAsync(() => {\n        addMatchers(customMatchers);\n        TestBed.configureTestingModule(moduleMetadata);\n        overrideModules(options);\n        overrideComponents(options);\n        overrideDirectives(options);\n        overridePipes(options);\n    }));\n    return (template, overrides) => {\n        const defaults = {\n            hostProps: {},\n            detectChanges: true,\n            providers: [],\n        };\n        const { detectChanges, hostProps, providers } = { ...defaults, ...overrides };\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        TestBed.overrideModule(BrowserDynamicTestingModule, {}).overrideComponent(options.host, {\n            set: { template: template || options.template },\n        });\n        if (options.directiveProviders.length || options.directiveMocks.length) {\n            TestBed.overrideDirective(options.directive, {\n                set: { providers: [...options.directiveProviders, ...options.directiveMocks.map((p) => options.mockProvider(p))] },\n            });\n        }\n        const spectator = createSpectatorDirective(options, hostProps);\n        if (options.detectChanges && detectChanges) {\n            spectator.detectChanges();\n        }\n        return spectator;\n    };\n}\nfunction createSpectatorDirective(options, hostProps) {\n    const hostFixture = TestBed.createComponent(options.host);\n    const debugElement = hostFixture.debugElement.query(By.directive(options.directive)) || hostFixture.debugElement;\n    const debugNode = hostFixture.debugElement.queryAllNodes(nodeByDirective(options.directive))[0];\n    if (!debugNode) {\n        throw new Error(`Cannot find directive ${options.directive} in host template \uD83D\uDE14`);\n    }\n    const hostComponent = setHostProps(hostFixture.componentRef, hostProps);\n    const directive = debugNode.injector.get(options.directive);\n    return new SpectatorDirective(hostComponent, hostFixture, hostFixture.debugElement, directive, debugElement.nativeElement);\n}\n\n/**\n * @publicApi\n */\nclass SpectatorService extends BaseSpectator {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\n\n/**\n * @internal\n */\nfunction initialServiceModule(options) {\n    const moduleMetadata = initialModule(options);\n    moduleMetadata.providers.push(options.service);\n    return moduleMetadata;\n}\n\nconst defaultServiceOptions = {\n    ...getDefaultBaseOptions(),\n};\n/**\n * @internal\n */\nfunction getDefaultServiceOptions(overrides) {\n    return merge(defaultServiceOptions, overrides);\n}\n\n/**\n * @publicApi\n */\nfunction createServiceFactory(typeOrOptions) {\n    const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n    const options = isType(typeOrOptions) ? getDefaultServiceOptions({ service }) : getDefaultServiceOptions(typeOrOptions);\n    const moduleMetadata = initialServiceModule(options);\n    beforeEach(() => {\n        TestBed.configureTestingModule(moduleMetadata);\n        overrideModules(options);\n    });\n    afterEach(() => {\n        const testedService = TestBed.inject\n            ? TestBed.inject(service)\n            : TestBed.get(service);\n        if (doesServiceImplementsOnDestroy(testedService)) {\n            // eslint-disable-next-line\n            testedService.ngOnDestroy();\n        }\n    });\n    return (overrides) => {\n        const defaults = { providers: [] };\n        const { providers } = { ...defaults, ...overrides };\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        return new SpectatorService(TestBed.inject ? TestBed.inject(service) : TestBed.get(service));\n    };\n}\n\nclass RouterStub extends Router {\n}\nfunction isRouterStub(router) {\n    return 'emitRouterEvent' in router;\n}\n\n/**\n * @publicApi\n */\nclass SpectatorRouting extends Spectator {\n    constructor(fixture, debugElement, instance, router, activatedRouteStub) {\n        super(fixture, debugElement, instance, debugElement.nativeElement);\n        this.router = router;\n        this.activatedRouteStub = activatedRouteStub;\n    }\n    /**\n     * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n     */\n    triggerNavigation(options) {\n        if (!this.checkStubPresent()) {\n            return;\n        }\n        if (options && options.params) {\n            this.activatedRouteStub.setParams(options.params);\n        }\n        if (options && options.queryParams) {\n            this.activatedRouteStub.setQueryParams(options.queryParams);\n        }\n        if (options && options.data) {\n            this.activatedRouteStub.setAllData(options.data);\n        }\n        if (options && options.fragment) {\n            this.activatedRouteStub.setFragment(options.fragment);\n        }\n        this.triggerNavigationAndUpdate();\n    }\n    /**\n     * Updates the route params and triggers a route navigation.\n     */\n    setRouteParam(name, value) {\n        if (this.checkStubPresent()) {\n            this.activatedRouteStub.setParam(name, value);\n            this.triggerNavigationAndUpdate();\n        }\n    }\n    /**\n     * Updates the route query params and triggers a route navigation.\n     */\n    setRouteQueryParam(name, value) {\n        if (this.checkStubPresent()) {\n            this.activatedRouteStub.setQueryParam(name, value);\n            this.triggerNavigationAndUpdate();\n        }\n    }\n    /**\n     * Updates the route data and triggers a route navigation.\n     * The `value` is typed as `any` since the `Route#data` is a record with `any` values.\n     * There's no sense to make it generic until `Route#data` starts supporting generic types.\n     */\n    setRouteData(name, value) {\n        if (this.checkStubPresent()) {\n            this.activatedRouteStub.setData(name, value);\n            this.triggerNavigationAndUpdate();\n        }\n    }\n    /**\n     * Updates the route fragment and triggers a route navigation.\n     */\n    setRouteFragment(fragment) {\n        if (this.checkStubPresent()) {\n            this.activatedRouteStub.setFragment(fragment);\n            this.triggerNavigationAndUpdate();\n        }\n    }\n    /**\n     * Updates the route url and triggers a route navigation.\n     */\n    setRouteUrl(url) {\n        if (this.checkStubPresent()) {\n            this.activatedRouteStub.setUrl(url);\n            this.triggerNavigationAndUpdate();\n        }\n    }\n    /**\n     * Emits a router event\n     */\n    emitRouterEvent(event) {\n        if (!isRouterStub(this.router)) {\n            // eslint-disable-next-line no-console\n            console.warn('No stub for Router present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n                'helper, or use Router navigation to trigger events.');\n            return;\n        }\n        this.router.emitRouterEvent(event);\n    }\n    triggerNavigationAndUpdate() {\n        this.activatedRouteStub.triggerNavigation();\n        this.detectChanges();\n    }\n    checkStubPresent() {\n        if (!this.activatedRouteStub) {\n            // eslint-disable-next-line no-console\n            console.warn('No stub for ActivatedRoute present. Set Spectator option \"stubsEnabled\" to true if you want to use this ' +\n                'helper, or use Router to trigger navigation.');\n            return false;\n        }\n        return true;\n    }\n}\n\n/**\n * @publicApi\n *\n * Utility class for stubbing ActivatedRoute of @angular/router\n */\nclass ActivatedRouteStub extends ActivatedRoute {\n    constructor(options) {\n        super();\n        this.testParams = {};\n        this.testQueryParams = {};\n        this.testData = {};\n        this.testFragment = null;\n        this.testUrl = [];\n        this.testRoot = null;\n        this.testParent = null;\n        this.testFirstChild = null;\n        this.testChildren = null;\n        this.paramsSubject = new ReplaySubject(1);\n        this.queryParamsSubject = new ReplaySubject(1);\n        this.dataSubject = new ReplaySubject(1);\n        this.fragmentSubject = new ReplaySubject(1);\n        this.urlSubject = new ReplaySubject(1);\n        if (options) {\n            this.testParams = options.params || {};\n            this.testQueryParams = options.queryParams || {};\n            this.testData = options.data || {};\n            this.testFragment = options.fragment || null;\n            this.testUrl = options.url || [];\n            this.testRoot = options.root || null;\n            this.testParent = options.parent || null;\n            this.testFirstChild = options.firstChild || null;\n            this.testChildren = options.children || null;\n        }\n        this.params = this.paramsSubject.asObservable();\n        this.queryParams = this.queryParamsSubject.asObservable();\n        this.data = this.dataSubject.asObservable();\n        this.fragment = this.fragmentSubject.asObservable();\n        this.url = this.urlSubject.asObservable();\n        this.snapshot = this.buildSnapshot();\n        this.triggerNavigation();\n    }\n    get paramMap() {\n        return this.paramsSubject.asObservable().pipe(map((params) => convertToParamMap(params)));\n    }\n    setParams(params) {\n        this.testParams = params;\n        this.snapshot = this.buildSnapshot();\n    }\n    setParam(name, value) {\n        this.testParams = { ...this.testParams, [name]: value };\n        this.snapshot = this.buildSnapshot();\n    }\n    setQueryParams(queryParams) {\n        this.testQueryParams = queryParams;\n        this.snapshot = this.buildSnapshot();\n    }\n    setQueryParam(name, value) {\n        this.testQueryParams = { ...this.testQueryParams, [name]: value };\n        this.snapshot = this.buildSnapshot();\n    }\n    setAllData(data) {\n        this.testData = data;\n        this.snapshot = this.buildSnapshot();\n    }\n    setData(name, value) {\n        this.testData = { ...this.testData, [name]: value };\n        this.snapshot = this.buildSnapshot();\n    }\n    setFragment(fragment) {\n        this.testFragment = fragment;\n        this.snapshot = this.buildSnapshot();\n    }\n    setUrl(url) {\n        this.testUrl = url;\n        this.snapshot = this.buildSnapshot();\n    }\n    get root() {\n        return this.testRoot || this;\n    }\n    get parent() {\n        return this.testParent || null;\n    }\n    get children() {\n        return this.testChildren || [this];\n    }\n    get firstChild() {\n        return this.testFirstChild || null;\n    }\n    /**\n     * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n     */\n    triggerNavigation() {\n        this.paramsSubject.next(this.testParams);\n        this.queryParamsSubject.next(this.testQueryParams);\n        this.dataSubject.next(this.testData);\n        this.fragmentSubject.next(this.testFragment);\n        this.urlSubject.next(this.testUrl);\n    }\n    toString() {\n        return 'activatedRouteStub';\n    }\n    buildSnapshot() {\n        const snapshot = new ActivatedRouteSnapshot();\n        snapshot.params = this.testParams;\n        snapshot.queryParams = this.testQueryParams;\n        snapshot.data = this.testData;\n        snapshot.fragment = this.testFragment;\n        snapshot.url = this.testUrl;\n        return snapshot;\n    }\n}\n\n/**\n * @internal\n */\nfunction initialRoutingModule(options) {\n    const moduleMetadata = initialSpectatorModule(options);\n    if (options.stubsEnabled) {\n        moduleMetadata.imports.push(RouterTestingModule);\n        moduleMetadata.providers.push(options.mockProvider(RouterStub, {\n            events: new Subject(),\n            emitRouterEvent(event) {\n                this.events.next(event);\n            },\n            serializeUrl() {\n                return '/';\n            },\n        }), {\n            provide: Router,\n            useExisting: RouterStub,\n        });\n        moduleMetadata.providers.push({\n            provide: ActivatedRouteStub,\n            useValue: new ActivatedRouteStub({\n                params: options.params,\n                queryParams: options.queryParams,\n                data: options.data,\n            }),\n        }, {\n            provide: ActivatedRoute,\n            useExisting: ActivatedRouteStub,\n        });\n    }\n    else {\n        moduleMetadata.imports.push(RouterTestingModule.withRoutes(options.routes));\n    }\n    return moduleMetadata;\n}\n\nconst defaultRoutingOptions = {\n    ...getSpectatorDefaultOptions(),\n    params: {},\n    queryParams: {},\n    data: {},\n    fragment: null,\n    stubsEnabled: true,\n    routes: [],\n    url: [],\n    root: null,\n    parent: null,\n    children: null,\n    firstChild: null,\n};\n/**\n * @internal\n */\nfunction getRoutingDefaultOptions(overrides) {\n    return merge(defaultRoutingOptions, overrides);\n}\n\n/**\n * @publicApi\n */\nfunction createRoutingFactory(typeOrOptions) {\n    const options = isType(typeOrOptions)\n        ? getRoutingDefaultOptions({ component: typeOrOptions })\n        : getRoutingDefaultOptions(typeOrOptions);\n    const moduleMetadata = initialRoutingModule(options);\n    beforeEach(waitForAsync(() => {\n        addMatchers(customMatchers);\n        TestBed.configureTestingModule(moduleMetadata);\n        overrideModules(options);\n        overrideComponents(options);\n        overrideDirectives(options);\n        overridePipes(options);\n        overrideComponentIfProviderOverridesSpecified(options);\n        TestBed.compileComponents();\n    }));\n    return (overrides) => {\n        const defaults = {\n            props: {},\n            detectChanges: true,\n            providers: [],\n        };\n        const { detectChanges, props, providers } = { ...defaults, ...overrides };\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        const { params, queryParams, data, fragment, url, root, parent, children, firstChild } = { ...options, ...overrides };\n        TestBed.overrideProvider(ActivatedRoute, {\n            useValue: new ActivatedRouteStub({ params, queryParams, data, fragment, url, root, parent, children, firstChild }),\n        });\n        const ngZone = TestBed.inject ? TestBed.inject(NgZone) : TestBed.get(NgZone);\n        return ngZone.run(() => {\n            const spectator = createSpectatorRouting(options, props);\n            spectator.router.initialNavigation();\n            if (options.detectChanges && detectChanges) {\n                spectator.detectChanges();\n            }\n            return spectator;\n        });\n    };\n}\nfunction createSpectatorRouting(options, props) {\n    const fixture = TestBed.createComponent(options.component);\n    const debugElement = fixture.debugElement;\n    const component = setProps(fixture.componentRef, props);\n    /**\n     * Back compatibility, angular under 9 version doesnt have a inject function\n     */\n    if (!TestBed.inject) {\n        return new SpectatorRouting(fixture, debugElement, component, TestBed.get(Router), TestBed.get(ActivatedRoute));\n    }\n    return new SpectatorRouting(fixture, debugElement, component, TestBed.inject(Router), TestBed.inject(ActivatedRoute));\n}\n\n/**\n * @publicApi\n */\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"GET\"] = \"GET\";\n    HttpMethod[\"POST\"] = \"POST\";\n    HttpMethod[\"DELETE\"] = \"DELETE\";\n    HttpMethod[\"PUT\"] = \"PUT\";\n    HttpMethod[\"PATCH\"] = \"PATCH\";\n    HttpMethod[\"HEAD\"] = \"HEAD\";\n    HttpMethod[\"JSONP\"] = \"JSONP\";\n    HttpMethod[\"OPTIONS\"] = \"OPTIONS\";\n})(HttpMethod || (HttpMethod = {}));\n/**\n * @publicApi\n */\nclass SpectatorHttp extends BaseSpectator {\n    constructor(service, httpClient, controller) {\n        super();\n        this.service = service;\n        this.httpClient = httpClient;\n        this.controller = controller;\n        // small workaround to prevent issues if destructuring SpectatorHttp, which was common in Spectator 3\n        // remove in v5?\n        this.expectOne = this.expectOne.bind(this);\n        this.expectConcurrent = this.expectConcurrent.bind(this);\n    }\n    expectOne(url, method) {\n        expect(true).toBe(true); // workaround to avoid `Spec has no expectations` https://github.com/NetanelBasal/spectator/issues/75\n        const req = this.controller.expectOne({\n            url,\n            method,\n        });\n        // assert that there are no outstanding requests.\n        this.controller.verify();\n        return req;\n    }\n    expectConcurrent(expectations) {\n        const requests = expectations.map((expectation) => {\n            return this.controller.expectOne({\n                url: expectation.url,\n                method: expectation.method,\n            });\n        });\n        this.controller.verify();\n        return requests;\n    }\n    flushAll(requests, args) {\n        requests.forEach((request, idx) => {\n            request.flush(args[idx]);\n        });\n    }\n}\n\n/**\n * @internal\n */\nfunction initialHttpModule(options) {\n    const moduleMetadata = initialModule(options);\n    moduleMetadata.providers.push(options.service);\n    moduleMetadata.imports.push(HttpClientTestingModule);\n    return moduleMetadata;\n}\n\nconst defaultHttpOptions = {\n    ...getDefaultBaseOptions(),\n};\n/**\n * @internal\n */\nfunction getDefaultHttpOptions(overrides) {\n    return merge(defaultHttpOptions, overrides);\n}\n\n/**\n * @publicApi\n */\nfunction createHttpFactory(typeOrOptions) {\n    const service = isType(typeOrOptions) ? typeOrOptions : typeOrOptions.service;\n    const options = isType(typeOrOptions) ? getDefaultHttpOptions({ service }) : getDefaultHttpOptions(typeOrOptions);\n    const moduleMetadata = initialHttpModule(options);\n    beforeEach(() => {\n        TestBed.configureTestingModule(moduleMetadata);\n        overrideModules(options);\n    });\n    afterEach(() => {\n        if (TestBed.inject) {\n            TestBed.inject(HttpTestingController).verify();\n        }\n        else {\n            TestBed.get(HttpTestingController).verify();\n        }\n    });\n    return (overrides) => {\n        const defaults = { providers: [] };\n        const { providers } = { ...defaults, ...overrides };\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        /**\n         * Back compatibility, angular under 9 version doesnt have a inject function\n         */\n        if (!TestBed.inject) {\n            return new SpectatorHttp(TestBed.get(service), TestBed.get(HttpClient), TestBed.get(HttpTestingController));\n        }\n        return new SpectatorHttp(TestBed.inject(service), TestBed.inject(HttpClient), TestBed.inject(HttpTestingController));\n    };\n}\n\n/**\n * @publicApi\n */\nclass SpectatorPipe extends BaseSpectator {\n    constructor(hostComponent, fixture, debugElement, element) {\n        super();\n        this.hostComponent = hostComponent;\n        this.fixture = fixture;\n        this.debugElement = debugElement;\n        this.element = element;\n    }\n    detectChanges() {\n        this.fixture.detectChanges();\n    }\n    setHostInput(input, value) {\n        setHostProps(this.fixture.componentRef, input, value);\n        this.detectChanges();\n    }\n}\n\n/**\n * @internal\n */\nfunction initialSpectatorPipeModule(options) {\n    const moduleMetadata = initialModule(options);\n    declareInModule(moduleMetadata, options.pipe);\n    moduleMetadata.declarations.push(options.host);\n    return moduleMetadata;\n}\n\nconst defaultSpectatorPipeOptions = {\n    ...getDefaultBaseOptions(),\n    host: HostComponent,\n    detectChanges: true,\n    template: '',\n};\n/**\n * @internal\n */\nfunction getSpectatorPipeDefaultOptions(overrides) {\n    return merge(defaultSpectatorPipeOptions, overrides);\n}\n\n/**\n * @publicApi\n */\nfunction createPipeFactory(typeOrOptions) {\n    const options = isType(typeOrOptions)\n        ? getSpectatorPipeDefaultOptions({ pipe: typeOrOptions })\n        : getSpectatorPipeDefaultOptions(typeOrOptions);\n    const moduleMetadata = initialSpectatorPipeModule(options);\n    beforeEach(waitForAsync(() => {\n        addMatchers(customMatchers);\n        TestBed.configureTestingModule(moduleMetadata);\n        overrideModules(options);\n        overridePipes(options);\n    }));\n    return (templateOrOverrides, overrides) => {\n        const defaults = {\n            hostProps: {},\n            detectChanges: true,\n            providers: [],\n        };\n        const resolvedOverrides = typeof templateOrOverrides === 'object' ? templateOrOverrides : overrides;\n        const { detectChanges, hostProps, providers } = { ...defaults, ...resolvedOverrides };\n        const template = typeof templateOrOverrides === 'string' ? templateOrOverrides : options.template;\n        if (providers && providers.length) {\n            providers.forEach((provider) => {\n                TestBed.overrideProvider(provider.provide, provider);\n            });\n        }\n        if (template) {\n            TestBed.overrideModule(BrowserDynamicTestingModule, {}).overrideComponent(options.host, {\n                set: { template },\n            });\n        }\n        const spectator = createSpectatorPipe(options, hostProps);\n        if (options.detectChanges && detectChanges) {\n            spectator.detectChanges();\n        }\n        return spectator;\n    };\n}\nfunction createSpectatorPipe(options, hostProps) {\n    const hostFixture = TestBed.createComponent(options.host);\n    const debugElement = hostFixture.debugElement;\n    const hostComponent = setHostProps(hostFixture.componentRef, hostProps);\n    return new SpectatorPipe(hostComponent, hostFixture, hostFixture.debugElement, debugElement.nativeElement);\n}\n\n/// <reference path=\"./lib/matchers-types.ts\" />\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRouteStub, DOMSelector, HostComponent, HostModule, HttpMethod, Spectator, SpectatorDirective, SpectatorHost, SpectatorHttp, SpectatorPipe, SpectatorRouting, SpectatorService, byAltText, byLabel, byPlaceholder, byRole, byTestId, byText, byTextContent, byTitle, byValue, createComponentFactory, createDirectiveFactory, createFakeEvent, createHostFactory, createHttpFactory, createKeyboardEvent, createMouseEvent, createPipeFactory, createRoutingFactory, createServiceFactory, createSpyObject, createTouchEvent, defineGlobalsInjections, dispatchEvent, dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent, doesServiceImplementsOnDestroy, initialSpectatorDirectiveModule, initialSpectatorModule, initialSpectatorPipeModule, initialSpectatorWithHostModule, installProtoMethods, isHTMLOptionElementArray, isNumber, isObject, isString, isType, mockProvider, toBeChecked, toBeDisabled, toBeEmpty, toBeFocused, toBeHidden, toBeIndeterminate, toBeMatchedBy, toBePartial, toBeSelected, toBeVisible, toContainProperty, toContainText, toContainValue, toExist, toHaveAttribute, toHaveClass, toHaveData, toHaveDescendant, toHaveDescendantWithText, toHaveExactText, toHaveExactTrimmedText, toHaveId, toHaveLength, toHaveProperty, toHaveSelectedOptions, toHaveStyle, toHaveText, toHaveValue, typeInElement };\n//# sourceMappingURL=ngneat-spectator.mjs.map\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AACpB,kBAA+I;AAC/I,qBAAiF;AACjF,8BAAmB;AACnB,kBAAmD;AACnD,iBAA8C;AAC9C,IAAAA,kBAA4C;AAC5C,uBAAkC;AAClC,oBAAc;AACd,wBAAqC;AACrC,oBAAkF;AAClF,uBAAoB;AACpB,IAAAA,kBAAoC;AACpC,kBAA2B;AAC3B,IAAAA,kBAA+D;AAE/D,SAAS,+BAA+B,eAAe;AACnD,SAAO,iBAAiB,iBAAiB,OAAO,cAAc,aAAa,MAAM;AACrF;AACA,SAAS,SAAS,OAAO;AACrB,SAAO,OAAO,UAAU;AAC5B;AACA,SAAS,SAAS,OAAO;AACrB,SAAO,OAAO,UAAU;AAC5B;AACA,SAAS,OAAO,GAAG;AACf,SAAO,OAAO,MAAM;AACxB;AACA,SAAS,yBAAyB,OAAO;AACrC,SAAO,MAAM,QAAQ,KAAK,KAAK,CAAC,CAAC,MAAM,UAAU,MAAM,MAAM,CAAC,SAAS,gBAAgB,iBAAiB;AAC5G;AACA,SAAS,SAAS,GAAG;AACjB,SAAO,KAAK,OAAO,MAAM;AAC7B;AAEA,MAAM,kBAAkB,CAAC,iBAAiB;AACtC,MAAI,SAAS,YAAY,KAAK,cAAc;AACxC,WAAO,EAAE,KAAK,OAAO,SAAS,cAAc,WAAW,CAAC,EAAE;AAAA,EAC9D;AACA,MAAI,SAAS,YAAY,KAAK,cAAc;AACxC,WAAO,SAAS,YAAY;AAAA,EAChC;AACA,MAAI,SAAS,YAAY,GAAG;AACxB,UAAM,YAAY,SAAS,aAAa,GAAG;AAC3C,WAAO,iCACA,YADA;AAAA,MAEH,SAAS,aAAa;AAAA,IAC1B;AAAA,EACJ;AACA,QAAM,IAAI,MAAM,qDAAqD;AACzE;AACA,MAAM,WAAW,CAAC,WAAW;AACzB,MAAI,OAAO,QAAQ,GAAG,IAAI,KAAK,QAAQ,QAAQ;AAC3C,WAAO,EAAE,KAAK,QAAQ,SAAS,OAAO,WAAW,CAAC,EAAE;AAAA,EACxD;AACA,QAAM,WAAW,OAAO,MAAM,GAAG;AACjC,QAAM,MAAM,SAAS,IAAI;AACzB,QAAM,YAAY,SAAS,OAAO,CAAC,MAAM,SAAS;AAC9C,YAAQ,MAAM;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AACD,aAAK,UAAU;AACf,eAAO;AAAA,MACX,KAAK;AACD,aAAK,QAAQ;AACb,eAAO;AAAA,MACX,KAAK;AACD,aAAK,MAAM;AACX,eAAO;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AACI,cAAM,IAAI,MAAM,yBAAyB,OAAO,OAAO,WAAW,aAAa,MAAM,EAAE;AAAA,IAC/F;AAAA,EACJ,GAAG,EAAE,KAAK,OAAO,SAAS,OAAO,OAAO,OAAO,MAAM,MAAM,CAAC;AAC5D,SAAO,EAAE,KAAK,SAAS,OAAO,UAAU;AAC5C;AAMA,SAAS,iBAAiB,MAAM,IAAI,GAAG,IAAI,GAAG,SAAS,GAAG;AACtD,QAAM,QAAQ,SAAS,YAAY,YAAY;AAC/C,QAAM,eAAe,MAAM,MAAM,OAAO,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO,OAAO,OAAO,OAAO,QAAQ,IAAI;AAGvG,SAAO,eAAe,OAAO,WAAW,EAAE,KAAK,MAAM,EAAE,CAAC;AACxD,SAAO;AACX;AAIA,SAAS,iBAAiB,MAAM,QAAQ,GAAG,QAAQ,GAAG;AAGlD,QAAM,QAAQ,IAAI,QAAQ,MAAM;AAAA,IAC5B,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,QAAQ;AAAA,EACZ,CAAC;AAGD,SAAO,iBAAiB,OAAO;AAAA,IAC3B,SAAS,EAAE,OAAO,CAAC,EAAE,OAAO,MAAM,CAAC,EAAE;AAAA,EACzC,CAAC;AACD,SAAO;AACX;AAEA,SAAS,oBAAoB,MAAM,cAAc,QAAQ;AACrD,QAAM,EAAE,KAAK,SAAS,UAAU,IAAI,gBAAgB,YAAY;AAChE,QAAM,QAAQ,SAAS,YAAY,eAAe;AAClD,QAAM,yBAAyB,MAAM;AAErC,MAAI,MAAM,cAAc;AACpB,UAAM,aAAa,MAAM,MAAM,MAAM,QAAQ,UAAU,SAAS,UAAU,KAAK,UAAU,OAAO,UAAU,MAAM,OAAO;AAAA,EAC3H,OACK;AAGD,UAAM,gBAAgB,UAAU,UAAU,aAAa,KAAK,UAAU,MAAM,SAAS,KAAK,UAAU,QAAQ,WAAW,KAAK,UAAU,OAAO,SAAS,IAAI,KAAK;AAC/J,UAAM;AAAA,MAAkB;AAAA,MAAM;AAAA,MAAsB;AAAA,MAAuB;AAAA,MAAmB;AAAA,MAAc;AAAA,MAAe;AAAA,MAAkB;AAAA,MAAkC;AAAA;AAAA,IAAkB;AAAA,EACrM;AAGA,SAAO,iBAAiB,OAAO;AAAA,IAC3B,MAAM,EAAE,KAAK,MAAM,QAAQ;AAAA,IAC3B,SAAS,EAAE,KAAK,MAAM,QAAQ;AAAA,IAC9B,KAAK,EAAE,KAAK,MAAM,IAAI;AAAA,IACtB,QAAQ,EAAE,KAAK,MAAM,OAAO;AAAA,IAC5B,QAAQ,EAAE,KAAK,MAAM,CAAC,CAAC,UAAU,IAAI;AAAA,IACrC,SAAS,EAAE,KAAK,MAAM,CAAC,CAAC,UAAU,QAAQ;AAAA,IAC1C,UAAU,EAAE,KAAK,MAAM,CAAC,CAAC,UAAU,MAAM;AAAA,IACzC,SAAS,EAAE,KAAK,MAAM,CAAC,CAAC,UAAU,KAAK;AAAA,EAC3C,CAAC;AAGD,QAAM,iBAAiB,WAAY;AAC/B,WAAO,eAAe,OAAO,oBAAoB,EAAE,cAAc,MAAM,KAAK,MAAM,KAAK,CAAC;AACxF,WAAO,uBAAuB,MAAM,MAAM,SAAS;AAAA,EACvD;AACA,SAAO;AACX;AAEA,SAAS,gBAAgB,MAAM,YAAY,OAAO,aAAa,MAAM;AACjE,QAAM,QAAQ,SAAS,YAAY,OAAO;AAC1C,QAAM,UAAU,MAAM,WAAW,UAAU;AAC3C,SAAO;AACX;AAUA,SAAS,cAAc,MAAM,OAAO;AAChC,OAAK,cAAc,KAAK;AACxB,SAAO;AACX;AAQA,SAAS,kBAAkB,MAAM,MAAM,WAAW;AAC9C,SAAO,cAAc,MAAM,gBAAgB,MAAM,SAAS,CAAC;AAC/D;AAQA,SAAS,sBAAsB,MAAM,MAAM,cAAc,QAAQ;AAC7D,SAAO,cAAc,MAAM,oBAAoB,MAAM,cAAc,MAAM,CAAC;AAC9E;AASA,SAAS,mBAAmB,MAAM,MAAM,IAAI,GAAG,IAAI,GAAG,QAAQ,iBAAiB,MAAM,GAAG,CAAC,GAAG;AACxF,SAAO,cAAc,MAAM,KAAK;AACpC;AAQA,SAAS,mBAAmB,MAAM,MAAM,IAAI,GAAG,IAAI,GAAG;AAClD,SAAO,cAAc,MAAM,iBAAiB,MAAM,GAAG,CAAC,CAAC;AAC3D;AAEA,MAAM,YAAY;AAAA;AAAA,EAEd,YAAY,SAAS;AACjB,SAAK,UAAU;AAAA,EACnB;AACJ;AACA,MAAM,UAAU,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,oBAAoB,IAAI,SAAS,OAAO,CAAC;AAC/G,MAAM,gBAAgB,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,0BAA0B,IAAI,SAAS,OAAO,CAAC;AAC3H,MAAM,SAAS,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,eAAe,IAAI,SAAS,OAAO,CAAC;AACzG,MAAM,gBAAgB,CAAC,SAAS,YAAY;AACxC,MAAI;AACJ,QAAM,cAAa,mCAAS,mBAAc,iCAAqB,OAAO;AACtE,QAAM,iBAAiB,CAAC,SAAM;AA5NlC;AA4NqC,uBAAW,kCAAM,gBAAN,YAAqB,EAAE;AAAA;AACnE,MAAI,OAAO,YAAY,YAAY,OAAO,YAAY,UAAU;AAC5D,yBAAqB,CAAC,GAAG,SAAS;AAC9B,WAAI,mCAAS,WAAU,OAAO;AAC1B,eAAO,eAAe,IAAI,EAAE,YAAY,EAAE,QAAQ,QAAQ,SAAS,EAAE,YAAY,CAAC,KAAK;AAAA,MAC3F;AACA,aAAO,eAAe,IAAI,MAAM,QAAQ,SAAS;AAAA,IACrD;AAAA,EACJ,WACS,mBAAmB,QAAQ;AAChC,yBAAqB,CAAC,GAAG,SAAS,QAAQ,KAAK,eAAe,IAAI,CAAC;AAAA,EACvE,WACS,OAAO,YAAY,YAAY;AACpC,yBAAqB,CAAC,GAAG,SAAS,QAAQ,eAAe,IAAI,GAAG,IAAI;AAAA,EACxE,OACK;AACD,UAAM,IAAI,MAAM,+BAA+B,OAAO,OAAO,EAAE;AAAA,EACnE;AACA,SAAO,IAAI,YAAY,CAAC,OAAO,mBAAQ,eAAe,IAAI,oBAAoB,OAAO,CAAC;AAC1F;AACA,MAAM,YAAY,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,kBAAkB,IAAI,SAAS,OAAO,CAAC;AAC/G,MAAM,UAAU,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,gBAAgB,IAAI,SAAS,OAAO,CAAC;AAC3G,MAAM,WAAW,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,iBAAiB,IAAI,SAAS,OAAO,CAAC;AAC7G,MAAM,UAAU,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,uBAAuB,IAAI,SAAS,OAAO,CAAC;AAClH,MAAM,SAAS,CAAC,SAAS,YAAY,IAAI,YAAY,CAAC,OAAO,mBAAQ,eAAe,IAAI,SAAS,OAAO,CAAC;AAEzG,SAAS,mBAAmB;AACxB,SAAO,UAAU,UAAU,SAAS,SAAS,KAAK,UAAU,UAAU,SAAS,OAAO;AAC1F;AACA,SAAS,YAAY,OAAO;AACxB,SAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAChD;AACA,SAAS,gBAAgB,gBAAgB,MAAM;AAC3C,UAAI,0BAAa,IAAI,GAAG;AACpB,mBAAe,QAAQ,KAAK,IAAI;AAAA,EACpC,OACK;AACD,mBAAe,aAAa,KAAK,IAAI;AAAA,EACzC;AACJ;AAGA,MAAM,wBAAwB,OAAO,gBAAgB;AAErD,MAAM,kBAAkB;AAAA,EACpB,YAAY,SAAS;AAzQzB;AA0QQ,SAAK,UAAU;AAEf,SAAK,WAAW;AAEhB,SAAK,WAAW;AAChB,SAAK,QAAQ,iBAAiB,SAAS,IAAI;AAC3C,SAAK,qBAAqB,QAAQ,cAAc;AAChD,eAAK,uBAAL,mBAAyB,iBAAiB,QAAQ;AAAA,EACtD;AAAA,EACA,YAAY,EAAE,KAAK,GAAG;AAClB,QAAI,SAAS,SAAS;AAClB,WAAK,WAAW;AAAA,IACpB,WACS,SAAS,QAAQ;AACtB,WAAK,WAAW;AAAA,IACpB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB;AA9RxB;AA+RQ,SAAK,QAAQ,oBAAoB,SAAS,IAAI;AAC9C,eAAK,uBAAL,mBAAyB,oBAAoB,QAAQ;AAErD,QAAI,CAAC,KAAK,YAAY,KAAK,oBAAoB;AAC3C,wBAAkB,KAAK,oBAAoB,MAAM;AAAA,IACrD;AACA,QAAI,CAAC,KAAK,UAAU;AAChB,wBAAkB,KAAK,SAAS,OAAO;AAAA,IAC3C;AAAA,EACJ;AACJ;AAQA,SAAS,kBAAkB,SAAS;AAEhC,MAAI,CAAC,iBAAiB,KAAK,QAAQ,qBAAqB,MAAM,QAAW;AACrE,UAAM,gBAAgB,QAAQ,MAAM,KAAK,OAAO;AAChD,YAAQ,QAAQ,CAAC,YAAY;AACzB,YAAM,oBAAoB,IAAI,kBAAkB,OAAO;AAEvD,oBAAc,OAAO;AACrB,wBAAkB,kBAAkB;AAAA,IACxC;AACA,YAAQ,OAAO,MAAM,kBAAkB,SAAS,MAAM;AACtD,YAAQ,qBAAqB,IAAI;AAAA,EACrC;AACJ;AAEA,SAAS,YAAY,kBAAkB;AACnC,SAAO,CAAC,qBAAqB,UAAU,EAAE,MAAM,OAAO,MAAM,OAAU,MAAM;AACxE,QAAI,+BAA+B,aAAa;AAC5C,aAAO,oBAAoB,QAAQ,iBAAiB,aAAa;AAAA,IACrE;AACA,UAAM,gBAAgB,iBAAiB,SAAS,SAAS,mBAAmB,IAAI,2BAAG,IAAI,mBAAmB,IAAI,2BAAG,UAAU,mBAAmB,CAAC;AAC/I,QAAI,QAAQ,MAAM;AACd,aAAO,cAAc,IAAI,CAAC,UAAU,MAAM,SAAS,IAAI,QAAQ,IAAI,CAAC;AAAA,IACxE;AACA,QAAI,SAAS,mBAAmB,GAAG;AAC/B,aAAO,cAAc,IAAI,CAAC,UAAU,MAAM,aAAa;AAAA,IAC3D;AACA,WAAO,cAAc,IAAI,CAAC,UAAU,MAAM,SAAS,IAAI,mBAAmB,CAAC;AAAA,EAC/E;AACJ;AACA,SAAS,SAAS,cAAc,gBAAgB,OAAO;AACnD,MAAI,SAAS,cAAc,GAAG;AAC1B,iBAAa,SAAS,gBAAgB,KAAK;AAAA,EAC/C,OACK;AAED,eAAW,KAAK,gBAAgB;AAC5B,mBAAa,SAAS,GAAG,eAAe,CAAC,CAAC;AAAA,IAC9C;AAAA,EACJ;AACA,SAAO,aAAa;AACxB;AACA,SAAS,aAAa,cAAc,gBAAgB,OAAO;AACvD,MAAI,SAAS,cAAc,GAAG;AAC1B,iBAAa,SAAS,cAAc,IAAI;AAAA,EAC5C,OACK;AAED,eAAW,KAAK,gBAAgB;AAC5B,mBAAa,SAAS,CAAC,IAAI,eAAe,CAAC;AAAA,IAC/C;AAAA,EACJ;AACA,SAAO,aAAa;AACxB;AAWA,SAAS,aAAa,SAAS,SAAS,QAAQ;AAC5C,MAAI,EAAE,mBAAmB,oBAAoB;AACzC;AAAA,EACJ;AACA,UAAQ,MAAM;AACd,MAAI,SAAS,OAAO,GAAG;AACnB,UAAM,SAAS,QAAQ,cAAc,iBAAiB,OAAO,IAAI;AACjE,QAAI,CAAC,QAAQ;AACT;AAAA,IACJ;AACA,sBAAkB,QAAQ,SAAS,MAAM;AAAA,EAC7C,WACS,mBAAmB,mBAAmB;AAC3C,sBAAkB,SAAS,SAAS,MAAM;AAAA,EAC9C,OACK;AACD,QAAI,CAAC,QAAQ,UAAU;AACnB;AAAA,IACJ;AACA,QAAI,yBAAyB,OAAO,GAAG;AACnC,cAAQ,QAAQ,CAAC,WAAW,kBAAkB,QAAQ,SAAS,MAAM,CAAC;AAAA,IAC1E,OACK;AACD,cAAQ,iBAAiB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAChD,YAAI,QAAQ,SAAS,IAAI,KAAK,GAAG;AAC7B,4BAAkB,KAAK,SAAS,MAAM;AAAA,QAC1C;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;AASA,SAAS,kBAAkB,QAAQ,QAAQ,QAAQ;AAC/C,SAAO,WAAW;AAClB,MAAI,OAAO,YAAY;AACnB,sBAAkB,QAAQ,UAAU,IAAI;AAAA,EAC5C;AACJ;AAUA,SAAS,cAAc,OAAO,SAAS;AACnC,MAAI,EAAE,mBAAmB,qBAAqB,EAAE,mBAAmB,sBAAsB;AACrF;AAAA,EACJ;AACA,UAAQ,MAAM;AACd,UAAQ,QAAQ;AAChB,oBAAkB,SAAS,SAAS,IAAI;AAC5C;AAKA,MAAM,cAAc;AAAA,EAChB,OAAO,OAAO;AACV,WAAO,uBAAQ,SAAS,uBAAQ,OAAO,KAAK,IAAI,uBAAQ,IAAI,KAAK;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACX,2BAAQ,aAAa;AAAA,EACzB;AACJ;AAEA,MAAM,SAAS;AAIf,MAAM,qBAAqB,cAAc;AAAA,EACrC,YAAY,SAAS,cAAc,UAAU,SAAS;AAClD,UAAM;AACN,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,OAAO,OAAO;AACV,WAAO,MAAM,OAAO,KAAK;AAAA,EAC7B;AAAA,EACA,gBAAgB;AACZ,SAAK,QAAQ,cAAc;AAAA,EAC/B;AAAA,EACA,MAAM,qBAAqB,SAAS;AAChC,SAAK,WAAW,CAAC,GAAG,MAAM;AACtB,UAAI,SAAS,mBAAmB,GAAG;AAC/B,eAAO,SAAS,cAAc,mBAAmB;AAAA,MACrD;AACA,UAAI,+BAA+B,aAAa;AAC5C,eAAO,oBAAoB,QAAQ,QAAQ,EAAE,CAAC,KAAK;AAAA,MACvD;AACA,aAAO,YAAY,KAAK,oBAAoB,CAAC,EAAE,qBAAqB,OAAO,EAAE,CAAC,KAAK;AAAA,IACvF;AACA,QAAI,mCAAS,gBAAgB;AACzB,YAAM,eAAe,KAAK,gBAAgB,QAAQ,cAAc;AAChE,UAAI,CAAC,cAAc;AAEf,gBAAQ,MAAM,GAAG,mBAAmB,kBAAkB;AACtD,eAAO;AAAA,MACX;AACA,aAAQ,YAAY,YAAY,EAAE,qBAAqB;AAAA,QACnD,MAAM,QAAQ;AAAA,QACd,MAAM,QAAQ;AAAA,MAClB,CAAC,EAAE,CAAC,KAAK;AAAA,IACb;AACA,WAAO,YAAY,KAAK,YAAY,EAAE,qBAAqB,OAAO,EAAE,CAAC,KAAK;AAAA,EAC9E;AAAA,EACA,SAAS,qBAAqB,SAAS;AACnC,SAAK,WAAW,CAAC,GAAG,MAAM;AACtB,UAAI,SAAS,mBAAmB,GAAG;AAC/B,eAAO,MAAM,KAAK,SAAS,iBAAiB,mBAAmB,CAAC;AAAA,MACpE;AACA,UAAI,+BAA+B,aAAa;AAC5C,eAAO,oBAAoB,QAAQ,QAAQ;AAAA,MAC/C;AACA,aAAO,YAAY,KAAK,oBAAoB,CAAC,EAAE,qBAAqB,OAAO;AAAA,IAC/E;AACA,QAAI,mCAAS,gBAAgB;AACzB,YAAM,eAAe,KAAK,gBAAgB,QAAQ,cAAc;AAChE,UAAI,CAAC,cAAc;AAEf,gBAAQ,MAAM,GAAG,mBAAmB,kBAAkB;AACtD,eAAO,CAAC;AAAA,MACZ;AACA,aAAO,YAAY,YAAY,EAAE,qBAAqB;AAAA,QAClD,MAAM,QAAQ;AAAA,QACd,MAAM,QAAQ;AAAA,MAClB,CAAC;AAAA,IACL;AACA,WAAO,YAAY,KAAK,YAAY,EAAE,qBAAqB,OAAO;AAAA,EACtE;AAAA,EACA,UAAU,qBAAqB,SAAS;AACpC,QAAI,SAAS,CAAC;AACd,SAAK,WAAW,CAAC,GAAG,MAAM;AACtB,UAAI,SAAS,mBAAmB,GAAG;AAC/B,iBAAS,MAAM,KAAK,SAAS,iBAAiB,mBAAmB,CAAC;AAAA,MACtE,WACS,+BAA+B,aAAa;AACjD,iBAAS,oBAAoB,QAAQ,QAAQ;AAAA,MACjD,OACK;AACD,iBAAS,YAAY,KAAK,oBAAoB,CAAC,EAAE,qBAAqB,OAAO;AAAA,MACjF;AAAA,IACJ,WACS,mCAAS,gBAAgB;AAC9B,YAAM,eAAe,KAAK,gBAAgB,QAAQ,cAAc;AAChE,UAAI,CAAC,cAAc;AAEf,gBAAQ,MAAM,GAAG,mBAAmB,kBAAkB;AACtD,iBAAS,CAAC;AAAA,MACd,OACK;AACD,iBAAS,YAAY,YAAY,EAAE,qBAAqB;AAAA,UACpD,MAAM,QAAQ;AAAA,UACd,MAAM,QAAQ;AAAA,QAClB,CAAC;AAAA,MACL;AAAA,IACJ,OACK;AACD,eAAS,YAAY,KAAK,YAAY,EAAE,qBAAqB,OAAO;AAAA,IACxE;AACA,QAAI,UAAU,OAAO,QAAQ;AACzB,aAAO,OAAO,OAAO,SAAS,CAAC;AAAA,IACnC;AACA,WAAO;AAAA,EACX;AAAA,EACA,OAAO,QAAQ;AACX,UAAM,aAAa,KAAK,SAAS,MAAM;AACvC,QAAI,EAAE,sBAAsB,yBAAa;AACrC,YAAM,IAAI,MAAM,GAAG,OAAO,MAAM,CAAC,oBAAoB;AAAA,IACzD;AACA,WAAO;AAAA,EACX;AAAA,EACA,KAAK,QAAQ;AACT,6BAAK,MAAM;AACX,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,MAAM,WAAW,KAAK,SAAS;AAC3B,UAAM,UAAU,KAAK,iBAAiB,QAAQ;AAC9C,QAAI,EAAE,mBAAmB,cAAc;AACnC,YAAM,IAAI,MAAM,iBAAiB,QAAQ,uBAAuB;AAAA,IACpE;AACA,YAAQ,MAAM;AACd,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,KAAK,WAAW,KAAK,SAAS;AAC1B,UAAM,UAAU,KAAK,iBAAiB,QAAQ;AAC9C,QAAI,EAAE,mBAAmB,cAAc;AACnC,YAAM,IAAI,MAAM,gBAAgB,QAAQ,uBAAuB;AAAA,IACnE;AACA,sBAAkB,OAAO;AACzB,YAAQ,KAAK;AACb,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,MAAM,WAAW,KAAK,SAAS;AAC3B,UAAM,UAAU,KAAK,iBAAiB,QAAQ;AAC9C,QAAI,EAAE,mBAAmB,cAAc;AACnC,YAAM,IAAI,MAAM,iBAAiB,QAAQ,uBAAuB;AAAA,IACpE;AACA,sBAAkB,OAAO;AACzB,YAAQ,MAAM;AACd,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,mBAAmB,WAAW,KAAK,SAAS,MAAM,IAAI,GAAG,IAAI,GAAG,QAAQ,iBAAiB,MAAM,GAAG,CAAC,GAAG;AAClG,UAAM,UAAU,KAAK,iBAAiB,QAAQ;AAC9C,QAAI,EAAE,mBAAmB,OAAO;AAC5B,YAAM,IAAI,MAAM,gCAAgC,QAAQ,gBAAgB;AAAA,IAC5E;AACA,UAAM,kBAAkB,mBAAmB,SAAS,MAAM,GAAG,GAAG,KAAK;AACrE,SAAK,cAAc;AACnB,WAAO;AAAA,EACX;AAAA,EACA,sBAAsB,WAAW,KAAK,SAAS,MAAM,cAAc,QAAQ;AACvE,UAAM,UAAU,KAAK,iBAAiB,QAAQ;AAC9C,QAAI,EAAE,mBAAmB,OAAO;AAC5B,YAAM,IAAI,MAAM,mCAAmC,QAAQ,gBAAgB;AAAA,IAC/E;AACA,UAAM,QAAQ,sBAAsB,SAAS,MAAM,cAAc,MAAM;AACvE,SAAK,cAAc;AACnB,WAAO;AAAA,EACX;AAAA,EACA,kBAAkB,WAAW,KAAK,SAAS,MAAM,WAAW;AACxD,UAAM,QAAQ,kBAAkB,KAAK,iBAAiB,QAAQ,GAAG,MAAM,SAAS;AAChF,SAAK,cAAc;AACnB,WAAO;AAAA,EACX;AAAA,EACA,oBAAoB,qBAAqB,WAAW,UAAU,SAAS;AACnE,UAAM,sBAAsB,KAAK,gBAAgB,qBAAqB,OAAO;AAC7E,QAAI,CAAC,qBAAqB;AAEtB,cAAQ,MAAM,GAAG,mBAAmB,kBAAkB;AACtD;AAAA,IACJ;AACA,wBAAoB,oBAAoB,WAAW,QAAQ;AAC3D,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,IAAI,WAAW;AACX,WAAO;AAAA,MACH,UAAU,CAAC,KAAK,WAAW,KAAK,SAAS,QAAQ,WAAW;AACxD,aAAK,sBAAsB,UAAU,OAAO,GAAG;AAAA,MACnD;AAAA,MACA,aAAa,CAAC,WAAW,KAAK,SAAS,QAAQ,WAAW;AACtD,aAAK,sBAAsB,UAAU,OAAO,EAAE,KAAK,UAAU,SAAS,GAAG,CAAC;AAAA,MAC9E;AAAA,MACA,YAAY,CAAC,WAAW,KAAK,SAAS,QAAQ,WAAW;AACrD,aAAK,sBAAsB,UAAU,OAAO,EAAE,KAAK,SAAS,SAAS,GAAG,CAAC;AAAA,MAC7E;AAAA,MACA,UAAU,CAAC,WAAW,KAAK,SAAS,QAAQ,WAAW;AACnD,aAAK,sBAAsB,UAAU,OAAO,EAAE,KAAK,OAAO,SAAS,EAAE,CAAC;AAAA,MAC1E;AAAA,MACA,gBAAgB,CAAC,WAAW,KAAK,SAAS,QAAQ,WAAW;AACzD,aAAK,sBAAsB,UAAU,OAAO,EAAE,KAAK,aAAa,SAAS,EAAE,CAAC;AAAA,MAChF;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI,QAAQ;AACR,WAAO;AAAA,MACH,aAAa,CAAC,WAAW,KAAK,YAAY;AACtC,aAAK,mBAAmB,UAAU,aAAa;AAAA,MACnD;AAAA,MACA,UAAU,CAAC,WAAW,KAAK,YAAY;AACnC,aAAK,mBAAmB,UAAU,UAAU;AAAA,MAChD;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,mBAAmB,WAAW,KAAK,SAAS,MAAM,IAAI,GAAG,IAAI,GAAG;AAC5D,uBAAmB,KAAK,iBAAiB,QAAQ,GAAG,MAAM,GAAG,CAAC;AAC9D,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,cAAc,OAAO,WAAW,KAAK,SAAS;AAC1C,kBAAc,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AACpD,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,aAAa,WAAW,KAAK,SAAS,SAAS,SAAS,EAAE,YAAY,KAAK,GAAG;AAC1E,QAAI,CAAC,UAAU;AACX,YAAM,IAAI,MAAM,uBAAuB,QAAQ,EAAE;AAAA,IACrD;AACA,iBAAa,SAAS,KAAK,iBAAiB,QAAQ,GAAG,MAAM;AAC7D,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,iBAAiB,UAAU;AACvB,QAAI;AAEJ,QAAI,aAAa,UAAU,aAAa,UAAU;AAC9C,aAAO;AAAA,IACX;AACA,QAAI,SAAS,QAAQ,GAAG;AACpB,YAAM,SAAS,KAAK,aAAa,MAAM,2BAAG,IAAI,QAAQ,CAAC;AACvD,UAAI,QAAQ;AACR,kBAAU,OAAO;AAAA,MACrB,OACK;AAED,gBAAQ,MAAM,GAAG,QAAQ,kBAAkB;AAAA,MAC/C;AAAA,IACJ,WACS,oBAAoB,aAAa;AACtC,gBAAU,SAAS,QAAQ,QAAQ,EAAE,CAAC,KAAK;AAAA,IAC/C,OACK;AACD,UAAI,oBAAoB,4BAAgB,oBAAoB,wBAAY;AACpE,kBAAU,SAAS;AAAA,MACvB,OACK;AACD,kBAAU;AAAA,MACd;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,gBAAgB,qBAAqB,SAAS;AAC1C,UAAM,gBAAe,mCAAS,QAAO,KAAK,oBAAoB,IAAI,KAAK;AACvE,QAAI,SAAS,mBAAmB,GAAG;AAC/B,aAAO,aAAa,MAAM,2BAAG,IAAI,mBAAmB,CAAC;AAAA,IACzD,WACS,+BAA+B,0BAAc;AAClD,aAAO;AAAA,IACX,OACK;AACD,aAAO,aAAa,MAAM,2BAAG,UAAU,mBAAmB,CAAC;AAAA,IAC/D;AAAA,EACJ;AAAA,EACA,sBAAsB;AAClB,QAAI,UAAU,KAAK;AAKnB,WAAO,MAAM;AACT,UAAI,CAAC,SAAS;AACV,cAAM,MAAM,6BAA6B;AAAA,MAC7C;AACA,UAAI,CAAC,QAAQ,QAAQ;AAEjB,eAAO;AAAA,MACX;AACA,gBAAU,QAAQ;AAAA,IACtB;AAAA,EACJ;AACJ;AAKA,MAAM,kBAAkB,aAAa;AAAA,EACjC,YAAY,SAAS,cAAc,UAAU,SAAS;AAClD,UAAM,SAAS,cAAc,UAAU,OAAO;AAC9C,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,OAAO,OAAO,wBAAwB,OAAO;AACzC,QAAI,uBAAuB;AACvB,aAAO,KAAK,aAAa,SAAS,IAAI,KAAK;AAAA,IAC/C;AACA,WAAO,MAAM,OAAO,KAAK;AAAA,EAC7B;AAAA,EACA,yBAAyB;AACrB,QAAI,KAAK,cAAc;AACnB,WAAK,aAAa,SAAS,IAAI,6BAAiB,EAAE,cAAc;AAAA,IACpE,OACK;AACD,WAAK,cAAc;AAAA,IACvB;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,OAAO;AACnB,aAAS,KAAK,QAAQ,cAAc,OAAO,KAAK;AAEhD,SAAK,cAAc;AAEnB,SAAK,aAAa,SAAS,IAAI,6BAAiB,EAAE,cAAc;AAAA,EACpE;AAAA,EACA,WAAW,kBAAkB,GAAG;AAC5B,WAAO,KAAK,4BAA4B,iBAAiB,KAAK,QAAQ,eAAe,CAAC;AAAA,EAC1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,4BAA4B,kBAAkB,GAAG,oBAAoB;AACjE,WAAO;AAAA,MACH,gBAAgB,MAAY;AACxB,cAAM,uBAAuB,MAAM,KAAK,+BAA+B,+BAAgB,UAAU,iBAAiB,kBAAkB;AACpI,eAAO,KAAK,uBAAuB,oBAAoB;AAAA,MAC3D;AAAA,MACA,mBAAmB,MAAY;AAC3B,cAAM,uBAAuB,MAAM,KAAK,+BAA+B,+BAAgB,aAAa,iBAAiB,kBAAkB;AACvI,eAAO,KAAK,uBAAuB,oBAAoB;AAAA,MAC3D;AAAA,MACA,eAAe,MAAY;AACvB,cAAM,uBAAuB,MAAM,KAAK,+BAA+B,+BAAgB,SAAS,iBAAiB,kBAAkB;AACnI,eAAO,KAAK,uBAAuB,oBAAoB;AAAA,MAC3D;AAAA,MACA,aAAa,MAAY;AACrB,cAAM,uBAAuB,MAAM,KAAK,+BAA+B,+BAAgB,OAAO,iBAAiB,kBAAkB;AACjI,eAAO,KAAK,uBAAuB,oBAAoB;AAAA,MAC3D;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASM,+BAA+B,iBAAiB,kBAAkB,GAAG,oBAAoB;AAAA;AAC3F,YAAM,gBAAgB,MAAM,oBAAoB,eAAe;AAC/D,YAAM,aAAa,OAAO,eAAe;AACzC,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,uBAAuB,cAAc;AACjC,WAAO;AAAA,MACH,YAAY,CAAC,kBAAkB,MAAM,KAAK,4BAA4B,iBAAiB,aAAa,eAAe,CAAC;AAAA,IACxH;AAAA,EACJ;AACJ;AAEA,SAAS,YAAY,UAAU;AAC3B,MAAI,CAAC;AACD;AACJ,MAAI,OAAO,YAAY,aAAa;AAChC,YAAQ,YAAY,QAAQ;AAAA,EAChC,OACK;AAGD,UAAM,mBAAmB,CAAC;AAC1B,eAAW,OAAO,OAAO,KAAK,QAAQ,GAAG;AACrC,UAAI,IAAI,WAAW,IAAI;AACnB,yBAAiB,GAAG,IAAI,SAAS,GAAG,EAAE,EAAE;AAAA,IAChD;AACA,WAAO,OAAO,gBAAgB;AAAA,EAClC;AACJ;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,QAAQ,KAAK;AAClB,QAAM,IAAI,IAAI,QAAQ,KAAK,EAAE;AAC7B,QAAM,UAAU,EAAE,MAAM,IAAI,OAAO,QAAQ,EAAE,SAAS,IAAI,MAAM,GAAG,CAAC;AACpE,QAAM,CAAC,GAAG,GAAG,CAAC,IAAI,QAAQ,IAAI,CAAC,UAAU,SAAS,MAAM,WAAW,IAAI,QAAQ,QAAQ,OAAO,EAAE,CAAC;AACjG,SAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B;AACA,SAAS,MAAM,OAAO;AAClB,SAAO,qCAAqC,KAAK,KAAK;AAC1D;AACA,SAAS,KAAK,OAAO;AACjB,UAAQ,SAAS,IAAI,QAAQ,OAAO,EAAE;AAC1C;AAAA,IAKA,oCAAkB;AAClB,MAAM,cAAc,CAAC,QAAQ,aAAa;AACtC,SAAO,aAAa,SAAY,WAAW,SAAY,WAAW;AACtE;AACA,MAAM,mBAAmB,CAAC,QAAQ,aAAa;AAC3C,SAAO,aAAa,SAAY,OAAO,OAAO,SAAS,QAAQ;AACnE;AACA,MAAM,gBAAgB,CAAC,IAAI,MAAM,cAAc;AAC3C,MAAI,OAAO;AACX,MAAI,UAAU;AACd,aAAW,OAAO,OAAO,KAAK,IAAI,GAAG;AACjC,UAAM,aAAS,cAAAC,SAAE,EAAE,EAAE,KAAK,GAAG;AAC7B,UAAM,WAAW,KAAK,GAAG,MAAM,SAAY,gBAAgB,KAAK,GAAG,CAAC,MAAM;AAC1E,WAAO,UAAU,QAAQ,KAAK,GAAG,CAAC;AAClC,cAAU,CAAC,OAAO,IAAI,IAAI,IAAI,QAAQ,cAAc,MAAM,MAAM;AAAA,EACpE;AACA,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,qBAAqB,OAAO;AACvF,SAAO,EAAE,MAAM,QAAQ;AAC3B;AACA,MAAM,SAAS,CAAC,IAAI,QAAQ;AACxB,MAAI;AACJ,MAAI;AACJ,QAAM,UAAM,cAAAA,SAAE,EAAE;AAChB,OAAK,QAAQ,KAAK;AACd,QAAI,IAAI,eAAe,IAAI,GAAG;AAC1B,cAAQ,IAAI,IAAI;AAChB,UAAI,MAAM,KAAK,GAAG;AACd,gBAAQ,QAAQ,IAAI,IAAI,CAAC;AAAA,MAC7B;AACA,UAAI,UAAU,UAAU,IAAI,IAAI,CAAC,EAAE,MAAM,IAAI,MAAM,QAAQ;AACvD;AAAA,MACJ;AACA,UAAI,KAAK,IAAI,IAAI,CAAC,EAAE,MAAM,IAAI,CAAC,MAAM,KAAK,KAAK,KAC3C,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,KAAK,KAAK,KACnC,KAAK,GAAG,MAAM,iBAAiB,IAAI,CAAC,MAAM,KAAK,KAAK,GAAG;AACvD,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AACA,MAAM,cAAc,CAAC,IAAI,UAAU,YAAY;AAC3C,MAAI,YAAY,MAAM,QAAQ,QAAQ,GAAG;AACrC,QAAIC;AACJ,QAAIC,QAAO;AACX,QAAI;AACJ,sBAAAF,SAAE,EAAE,EAAE,KAAK,CAAC,GAAG,MAAM;AACjB,MAAAC,UAAS,QAAQ,SAAS,CAAC,QAAQ,WAAO,cAAAD,SAAE,CAAC,EAAE,KAAK,IAAI,cAAAA,QAAE,SAAK,cAAAA,SAAE,CAAC,EAAE,KAAK,CAAC;AAC1E,MAAAE,QAAO,QAAQ,QAAQD,YAAW,SAAS,CAAC,IAAIA,QAAO,SAAS,SAAS,CAAC,CAAC;AAC3E,UAAI,CAACC,OAAM;AACP,kBAAU,SAAS,CAAC;AACpB,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AACD,UAAMC,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,WAAW,QAAQ,QAAQ,WAAW,EAAE,UAAU,OAAO,eAAeD,OAAM;AACzI,WAAO,EAAE,MAAAC,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,SAAS,QAAQ,SAAS,CAAC,QAAQ,WAAO,cAAAH,SAAE,EAAE,EAAE,KAAK,IAAI,cAAAA,QAAE,SAAK,cAAAA,SAAE,EAAE,EAAE,KAAK,CAAC;AAClF,MAAI,YAAY,OAAO,aAAa,UAAU;AAC1C,UAAME,QAAO,SAAS,MAAM;AAC5B,UAAMC,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,WAAW,QAAQ,QAAQ,WAAW,EAAE,mBAAmB,QAAQ,eAAoB,MAAM;AACxJ,WAAO,EAAE,MAAAA,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,OAAO,QAAQ,SAAS,CAAC,MAAM,QAAQ,QAAQ,IAAI,WAAW,WAAW,OAAO,QAAQ,QAAQ,MAAM;AAC5G,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,WAAW,QAAQ,QAAQ,WAAW,EAAE,UAAU,QAAQ,eAAe,MAAM;AAC1I,SAAO,EAAE,MAAM,QAAQ;AAC3B;AACA,MAAM,aAAa,CAAC,SAAS,OAAO;AAAA,EAChC,SAAS;AACb;AAKA,MAAM,UAAU,WAAW,CAAC,OAAO;AAC/B,QAAM,aAAS,cAAAH,SAAE,EAAE,EAAE;AACrB,QAAM,OAAO,SAAS;AACtB,QAAM,UAAU,MAAM,YAAY,EAAE,WAAW,OAAO,SAAS,EAAE;AACjE,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,eAAe,WAAW,CAAC,IAAI,aAAa;AAC9C,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE;AACrB,QAAM,OAAO,WAAW;AACxB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,mBAAmB,QAAQ,aAAa,MAAM;AACzG,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,WAAW,WAAW,CAAC,IAAI,aAAa;AAC1C,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE,KAAK,IAAI;AAC9B,QAAM,OAAO,WAAW;AACxB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,gBAAgB,QAAQ,eAAe,MAAM;AACxG,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAWD,MAAM,cAAc,WAAW,CAAC,IAAI,UAAU,UAAU,EAAE,QAAQ,KAAK,MAAM;AACzE,MAAI,YAAY,MAAM,QAAQ,QAAQ,GAAG;AACrC,UAAMC,cAAS,cAAAD,SAAE,EAAE,EAAE,KAAK,OAAO;AACjC,UAAM,kBAAkB,SAAS,KAAK,GAAG;AACzC,UAAME,QAAO,QAAQ,aAAS,cAAAF,SAAE,EAAE,EAAE,SAAS,eAAe,IAAI,SAAS,MAAM,CAAC,UAAM,cAAAA,SAAE,EAAE,EAAE,SAAS,CAAC,CAAC;AACvG,UAAMG,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,mBAAmB,eAAe,eAAeD,OAAM;AAClH,WAAO,EAAE,MAAAC,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,aAAS,cAAAH,SAAE,EAAE,EAAE,KAAK,OAAO;AACjC,QAAM,WAAO,cAAAA,SAAE,EAAE,EAAE,SAAS,QAAQ;AACpC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,mBAAmB,QAAQ,eAAe,MAAM;AAC3G,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAID,MAAM,kBAAkB,WAAW,CAAC,IAAI,MAAM,QAAQ;AAClD,MAAI,SAAS,IAAI,GAAG;AAChB,QAAIE,QAAO;AACX,QAAI;AACJ,eAAW,OAAO,OAAO,KAAK,IAAI,GAAG;AACjC,YAAMD,cAAS,cAAAD,SAAE,EAAE,EAAE,KAAK,GAAG;AAC7B,YAAMI,YAAW,KAAK,GAAG,MAAM,SAAY,gBAAgB,KAAK,GAAG,CAAC,MAAM;AAC1E,MAAAF,QAAO,YAAYD,SAAQ,KAAK,GAAG,CAAC;AACpC,gBAAU,CAACC,QAAO,IAAI,IAAI,IAAIE,SAAQ,cAAcH,OAAM,MAAM;AAAA,IACpE;AACA,UAAME,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,sBAAsB,OAAO;AACxF,WAAO,EAAE,MAAAA,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,aAAS,cAAAH,SAAE,EAAE,EAAE,KAAK,IAAI;AAC9B,QAAM,WAAW,QAAQ,SAAY,gBAAgB,GAAG,MAAM;AAC9D,QAAM,OAAO,YAAY,QAAQ,GAAG;AACpC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,uBAAuB,IAAI,IAAI,QAAQ,cAAc,MAAM;AACtH,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,iBAAiB,WAAW,CAAC,IAAI,MAAM,QAAQ;AACjD,MAAI,SAAS,IAAI,GAAG;AAChB,WAAO,cAAc,IAAI,MAAM,WAAW;AAAA,EAC9C;AACA,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE,KAAK,IAAI;AAC9B,QAAM,WAAW,QAAQ,SAAY,gBAAgB,GAAG,MAAM;AAC9D,QAAM,OAAO,YAAY,QAAQ,GAAG;AACpC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,sBAAsB,IAAI,IAAI,QAAQ,cAAc,MAAM;AACrH,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AACD,MAAM,oBAAoB,WAAW,CAAC,IAAI,MAAM,QAAQ;AACpD,MAAI,SAAS,IAAI,GAAG;AAChB,WAAO,cAAc,IAAI,MAAM,gBAAgB;AAAA,EACnD;AACA,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE,KAAK,IAAI;AAC9B,QAAM,WAAW,QAAQ,SAAY,gBAAgB,GAAG,MAAM;AAC9D,QAAM,OAAO,iBAAiB,QAAQ,GAAG;AACzC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,sBAAsB,IAAI,IAAI,QAAQ,cAAc,MAAM;AACrH,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAQD,MAAM,aAAa,WAAW,CAAC,IAAI,UAAU,QAAQ,UAAU,YAAY,IAAI,UAAU,EAAE,OAAO,MAAM,MAAM,CAAC,CAAC;AAChH,MAAM,kBAAkB,WAAW,CAAC,IAAI,UAAU,UAAU,EAAE,MAAM,MAAM,MAAM,YAAY,IAAI,UAAU,EAAE,OAAO,MAAM,MAAM,QAAQ,KAAK,CAAC,CAAC;AAC9I,MAAM,yBAAyB,WAAW,CAAC,IAAI,aAAa,YAAY,IAAI,UAAU,EAAE,OAAO,MAAM,MAAM,KAAK,CAAC,CAAC;AAClH,MAAM,gBAAgB;AAMtB,MAAM,cAAc,WAAW,CAAC,IAAI,aAAa;AAC7C,MAAI,YAAY,MAAM,QAAQ,QAAQ,GAAG;AACrC,QAAIC;AACJ,QAAIC,QAAO;AACX,QAAI;AACJ,sBAAAF,SAAE,EAAE,EAAE,KAAK,CAAC,GAAG,MAAM;AACjB,MAAAC,cAAS,cAAAD,SAAE,CAAC,EAAE,IAAI;AAClB,MAAAE,QAAOD,YAAW,SAAS,CAAC;AAC5B,UAAI,CAACC,OAAM;AACP,kBAAU,SAAS,CAAC;AACpB,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AACD,UAAMC,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,mBAAmB,OAAO,eAAeD,OAAM;AAC1G,WAAO,EAAE,MAAAC,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,aAAS,cAAAH,SAAE,EAAE,EAAE,IAAI;AACzB,QAAM,OAAO,WAAW;AACxB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,mBAAmB,QAAQ,eAAe,MAAM;AAC3G,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AACD,MAAM,iBAAiB;AAOvB,MAAM,cAAc,WAAW,CAAC,IAAI,aAAa;AAC7C,QAAM,OAAO,OAAO,IAAI,QAAQ;AAChC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,gBAAgB,KAAK,UAAU,QAAQ,CAAC;AACnG,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,aAAa,WAAW,CAAC,IAAI,EAAE,MAAM,IAAI,MAAM;AACjD,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE,KAAK,IAAI;AAC9B,QAAM,WAAW,QAAQ,SAAY,gBAAgB,GAAG,MAAM;AAC9D,QAAM,OAAO,YAAY,QAAQ,GAAG;AACpC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,kBAAkB,IAAI,IAAI,QAAQ,cAAc,MAAM;AACjH,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,cAAc,WAAW,CAAC,OAAO;AACnC,QAAM,WAAO,cAAAA,SAAE,EAAE,EAAE,GAAG,UAAU;AAChC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,oBAAoB,WAAW,CAAC,OAAO;AACzC,QAAM,WAAO,cAAAA,SAAE,EAAE,EAAE,GAAG,gBAAgB;AACtC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,eAAe,WAAW,CAAC,OAAO;AACpC,QAAM,WAAO,cAAAA,SAAE,EAAE,EAAE,GAAG,WAAW;AACjC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAMD,MAAM,YAAY,WAAW,CAAC,OAAO;AACjC,QAAM,WAAO,cAAAA,SAAE,EAAE,EAAE,GAAG,QAAQ;AAC9B,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAOD,MAAM,cAAc,WAAW,CAAC,QAAQ,aAAa;AACjD,QAAM,sBAAsB,CAAC,QAAQ,eAAe;AAChD,WAAO,WAAW,IAAI,CAAC,SAAS;AAC5B,aAAO;AAAA,QACH,MAAM;AAAA,QACN,OAAO,OAAO,IAAI;AAAA,QAClB,MAAM,OAAO,OAAO,IAAI;AAAA,MAC5B;AAAA,IACJ,CAAC;AAAA,EACL;AACA,QAAM,cAAc,OAAO,oBAAoB,MAAM;AACrD,QAAM,uBAAuB,oBAAoB,QAAQ,WAAW;AACpE,QAAM,gBAAgB,OAAO,oBAAoB,QAAQ;AACzD,QAAM,yBAAyB,oBAAoB,UAAU,aAAa;AAC1E,QAAM,OAAO,cAAc,MAAM,CAAC,iBAAiB,OAAO,YAAY,MAAM,SAAS,YAAY,CAAC;AAClG,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,2BAA2B,KAAK,UAAU,sBAAsB,CAAC,IAAI,OAAO,uBAAuB,KAAK,UAAU,oBAAoB,CAAC,EAAE;AACpM,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAUD,SAAS,SAAS,cAAc;AAC5B,MAAI,SAAK,cAAAA,SAAE,YAAY,EAAE,CAAC;AAC1B,MAAI,CAAC,IAAI;AACL,WAAO;AAAA,EACX;AACA,QAAM,aAAa;AAAA,IACf,CAACK,QAAO,EAAEA,IAAG,eAAeA,IAAG,gBAAgBA,IAAG,eAAe,EAAE;AAAA,IACnE,CAACA,QAAI;AAroCb;AAqoCgB,aAAAA,IAAG,MAAM,YAAY,YAAU,kBAAO,iBAAiBA,GAAE,GAAE,qBAA5B,4BAA+C,gBAAe;AAAA;AAAA,IACrG,CAACA,QAAI;AAtoCb;AAsoCgB,aAAAA,IAAG,MAAM,eAAe,cAAY,kBAAO,iBAAiBA,GAAE,GAAE,qBAA5B,4BAA+C,mBAAkB;AAAA;AAAA,IAC7G,CAACA,QAAOA,IAAG,SAAS;AAAA,IACpB,CAACA,QAAOA,IAAG,aAAa,QAAQ;AAAA,EACpC;AACA,MAAI,iBAAiB,GAAG;AAGpB,eAAW,MAAM;AAAA,EACrB;AACA,SAAO,IAAI;AACP,QAAI,OAAO,UAAU;AACjB;AAAA,IACJ;AACA,QAAI,GAAG,aAAa,KAAK,gBAAgB,WAAW,KAAK,CAAC,SAAS,KAAK,EAAE,CAAC,GAAG;AAC1E,aAAO;AAAA,IACX;AACA,SAAK,GAAG,cAAc,GAAG;AAAA,EAC7B;AACA,SAAO;AACX;AAaA,MAAM,aAAa,WAAW,CAAC,OAAO;AAClC,QAAM,OAAO,SAAS,EAAE;AACxB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAOD,MAAM,eAAe,WAAW,CAAC,OAAO;AACpC,QAAM,WAAO,cAAAL,SAAE,EAAE,EAAE,GAAG,WAAW;AACjC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAYD,MAAM,cAAc,WAAW,CAAC,OAAO;AACnC,QAAM,OAAO,CAAC,SAAS,EAAE;AACzB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAMD,MAAM,cAAc,WAAW,CAAC,OAAO;AACnC,QAAM,cAAU,cAAAA,SAAE,EAAE,EAAE,IAAI,CAAC;AAC3B,QAAM,OAAO,YAAY,QAAQ,cAAc;AAC/C,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE;AAC3D,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAOD,MAAM,gBAAgB,WAAW,CAAC,IAAI,aAAa;AAC/C,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE,OAAO,QAAQ,EAAE;AACtC,QAAM,OAAO,SAAS;AACtB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,sBAAsB,QAAQ;AACzF,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,mBAAmB,WAAW,CAAC,IAAI,aAAa;AAClD,QAAM,aAAS,cAAAA,SAAE,EAAE,EAAE,KAAK,QAAQ,EAAE;AACpC,QAAM,OAAO,SAAS;AACtB,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,sBAAsB,QAAQ;AACzF,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAKD,MAAM,2BAA2B,WAAW,CAAC,IAAI,EAAE,UAAU,KAAK,MAAM;AACpE,QAAM,SAAS,cAAAA,QAAE,SAAK,cAAAA,SAAE,EAAE,EAAE,KAAK,QAAQ,EAAE,KAAK,CAAC;AACjD,MAAI,QAAQ,cAAAA,QAAE,WAAW,KAAK,IAAI,GAAG;AACjC,UAAME,QAAO,KAAK,KAAK,MAAM;AAC7B,UAAMC,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,wBAAwB,QAAQ,yBAAyB,IAAI,eAAoB,MAAM;AAClJ,WAAO,EAAE,MAAAA,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,OAAO,OAAO,QAAQ,IAAI,MAAM;AACtC,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,wBAAwB,QAAQ,gBAAgB,IAAI,eAAe,MAAM;AACpI,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AACD,MAAM,wBAAwB,WAAW,CAAC,IAAI,aAAa;AAtvC3D;AAuvCI,MAAI,oBAAoB,mBAAmB;AACvC,UAAMF,cAAS,cAAAD,SAAE,EAAE,EAAE,KAAK,WAAW;AACrC,UAAME,QAAOD,QAAO,OAAG,cAAAD,SAAE,QAAQ,CAAC;AAClC,UAAMG,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,sBAAsB,SAAS,SAAS,gBAAgBD,QAAO,CAAC,EAAE,SAAS;AACtI,WAAO,EAAE,MAAAC,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,MAAI,yBAAyB,QAAQ,GAAG;AACpC,UAAMF,cAAS,cAAAD,SAAE,EAAE,EAAE,KAAK,WAAW;AACrC,UAAME,QAAOD,QAAO,WAAW,SAAS,UAAUA,QAAO,QAAQ,EAAE,MAAM,CAAC,GAAG,cAAU,cAAAD,SAAEC,QAAO,KAAK,CAAC,EAAE,GAAG,SAAS,KAAK,CAAC,CAAC;AAC3H,UAAMK,6BAAwB,cAAAN,SAAE,QAAQ,EACnC,IAAI,EACJ,IAAI,CAAC,WAAW,OAAO,SAAS,EAChC,KAAK,GAAG;AACb,UAAM,sBAAsBC,QACvB,IAAI,EACJ,IAAI,CAAC,WAAW,OAAO,SAAS,EAChC,KAAK,GAAG;AACb,UAAME,WAAU,MAAM,mBAAmBD,QAAO,SAAS,EAAE,sBAAsBI,sBAAqB,gBAAgB,mBAAmB;AACzI,WAAO,EAAE,MAAAJ,OAAM,SAAAC,SAAQ;AAAA,EAC3B;AACA,QAAM,aAAS,cAAAH,SAAE,EAAE,EAAE,IAAI;AACzB,QAAM,QAAO,iBAAY,QAAQ,MAApB,mBAAuB,MAAM,CAAC,MAAM,OAAO,SAAS,CAAC;AAClE,QAAM,wBAAwB,MAAM,QAAQ,QAAQ,IAC9C,SAAS,OAAO,CAAC,KAAK,KAAK,MAAM,MAAM,GAAG,MAAM,SAAS,SAAS,KAAK,GAAG,GAAG,GAAG,EAAE,IAClF;AACN,QAAM,UAAU,MAAM,mBAAmB,OAAO,SAAS,EAAE,sBAAsB,qBAAqB,gBAAgB,MAAM;AAC5H,SAAO,EAAE,MAAM,QAAQ;AAC3B,CAAC;AAED,IAAI,iBAA8B,uBAAO,OAAO;AAAA,EAC5C,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAED,IAAI,UAAU;AAAA,EACV,WAAW,CAAC;AAAA,EACZ,cAAc,CAAC;AAAA,EACf,SAAS,CAAC;AACd;AACA,SAAS,wBAAwB,QAAQ;AACrC,YAAU,kCAAK,UAAY;AAC/B;AACA,SAAS,uBAAuB;AAC5B,SAAO;AACX;AAKA,SAAS,cAAc,SAAS;AAC5B,QAAMO,WAAU,iBAAE,SAAS,CAAC,GAAG,cAAc,CAAC,GAAG,WAAW,CAAC,KAAM,qBAAqB;AACxF,SAAO;AAAA,IACH,cAAc,CAAC,GAAGA,SAAQ,cAAc,GAAG,QAAQ,cAAc,GAAG,QAAQ,eAAe;AAAA,IAC3F,SAAS,CAAC,GAAI,QAAQ,oBAAoB,CAAC,sCAAoB,IAAI,CAAC,GAAI,GAAGA,SAAQ,SAAS,GAAG,QAAQ,OAAO;AAAA,IAC9G,WAAW,CAAC,GAAGA,SAAQ,WAAW,GAAG,QAAQ,WAAW,GAAG,QAAQ,MAAM,IAAI,CAAC,SAAS,QAAQ,aAAa,IAAI,CAAC,CAAC;AAAA,IAClH,iBAAiB,CAAC,GAAG,QAAQ,eAAe;AAAA,IAC5C;AAAA;AAAA;AAAA;AAAA,MAIA,mBAAMA,SAAQ,YAAY,QAAQ;AAAA;AAAA,IAClC,oBAAoBA,SAAQ,sBAAsB,QAAQ;AAAA,IAC1D,wBAAwBA,SAAQ,0BAA0B,QAAQ;AAAA,IAClE,0BAA0BA,SAAQ,4BAA4B,QAAQ;AAAA,EAC1E;AACJ;AAKA,SAAS,uBAAuB,SAAS;AACrC,QAAM,iBAAiB,cAAc,OAAO;AAC5C,MAAI,QAAQ,kBAAkB;AAC1B,oBAAgB,gBAAgB,QAAQ,SAAS;AAAA,EACrD;AACA,iBAAe,UAAU,CAAC,QAAQ,UAAU,+BAAmB,QAAQ,WAAW,CAAC,CAAC;AACpF,SAAO;AACX;AAKA,SAAS,MAAM,UAAU,WAAW;AAChC,SAAO,kCAAK,WAAa;AAC7B;AAKA,SAAS,oBAAoB,MAAM,OAAO,aAAa;AACnD,MAAI,UAAU,QAAQ,UAAU,OAAO,WAAW;AAC9C;AAAA,EACJ;AACA,aAAW,OAAO,OAAO,oBAAoB,KAAK,GAAG;AACjD,UAAM,aAAa,OAAO,yBAAyB,OAAO,GAAG;AAC7D,QAAI,CAAC,YAAY;AACb;AAAA,IACJ;AACA,QAAI,OAAO,WAAW,UAAU,cAAc,QAAQ,iBAAiB,OAAO,KAAK,GAAG,MAAM,aAAa;AACrG,WAAK,GAAG,IAAI,YAAY,GAAG;AAAA,IAC/B,WACS,WAAW,OAAO,CAAC,KAAK,eAAe,GAAG,GAAG;AAClD,aAAO,eAAe,MAAM,KAAK;AAAA,QAC7B,KAAK,CAAC,UAAW,KAAK,IAAI,GAAG,EAAE,IAAI;AAAA,QACnC,KAAK,MAAM,KAAK,IAAI,GAAG,EAAE;AAAA,QACzB,cAAc;AAAA,MAClB,CAAC;AAAA,IACL;AAAA,EACJ;AACA,sBAAoB,MAAM,OAAO,eAAe,KAAK,GAAG,WAAW;AACnE,OAAK,iBAAiB,MAAM;AAChC;AAIA,SAAS,gBAAgB,MAAM,UAAU;AACrC,QAAM,OAAO,mBAAK,aAAc,CAAC;AACjC,sBAAoB,MAAM,KAAK,WAAW,CAAC,SAAS;AAChD,UAAM,SAAS,QAAQ,UAAU,IAAI;AACrC,WAAO,cAAc,CAAC,OAAO,OAAO,IAAI,SAAS,EAAE;AACnD,WAAO,YAAY,CAAC,QAAQ,OAAO,IAAI,YAAY,GAAG;AACtD,WAAO,QAAQ,MAAM,OAAO,MAAM,MAAM;AAExC,WAAO,IAAI,YAAY,IAAI;AAC3B,WAAO;AAAA,EACX,CAAC;AACD,SAAO;AACX;AAIA,SAAS,aAAa,MAAM,YAAY;AACpC,SAAO;AAAA,IACH,SAAS;AAAA,IACT,YAAY,MAAM,gBAAgB,MAAM,UAAU;AAAA,EACtD;AACJ;AAEA,MAAM,iBAAiB;AAAA,EACnB,mBAAmB;AAAA,EACnB,iBAAiB,CAAC;AAAA,EAClB,OAAO,CAAC;AAAA,EACR;AAAA,EACA,WAAW,CAAC;AAAA,EACZ,cAAc,CAAC;AAAA,EACf,SAAS,CAAC;AAAA,EACV,SAAS,CAAC;AAAA,EACV,iBAAiB,CAAC;AAAA,EAClB,oBAAoB,CAAC;AAAA,EACrB,oBAAoB,CAAC;AAAA,EACrB,eAAe,CAAC;AAAA,EAChB,UAAU,EAAE,kBAAkB,MAAM;AAAA,EACpC,wBAAwB;AAAA,EACxB,0BAA0B;AAAA,EAC1B,oBAAoB,kCAAmB;AAC3C;AAIA,SAAS,sBAAsB,SAAS;AACpC,SAAO,MAAM,gBAAgB,OAAO;AACxC;AAEA,MAAM,0BAA0B,iCACzB,sBAAsB,IADG;AAAA,EAE5B,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,oBAAoB,CAAC;AAAA,EACrB,wBAAwB,CAAC;AAAA,EACzB,gBAAgB,CAAC;AAAA,EACjB,6BAA6B,CAAC;AAClC;AAIA,SAAS,2BAA2B,WAAW;AAC3C,SAAO,MAAM,yBAAyB,SAAS;AACnD;AAKA,SAAS,8CAA8C,SAAS;AAC5D,QAAM,uBAAuB,QAAQ,mBAAmB,UAAU,QAAQ,eAAe;AACzF,QAAM,mBAAmB,QAAQ,uBAAuB,UAAU,QAAQ,4BAA4B;AACtG,MAAI,wBAAwB,kBAAkB;AAC1C,QAAI,wBAAwB,CAAC;AAC7B,QAAI,sBAAsB;AACtB,8BAAwB;AAAA,QACpB,WAAW,CAAC,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,eAAe,IAAI,CAAC,MAAM,QAAQ,aAAa,CAAC,CAAC,CAAC;AAAA,MAC5G;AAAA,IACJ;AACA,QAAI,kBAAkB;AAClB,8BAAwB,iCACjB,wBADiB;AAAA,QAEpB,eAAe,CAAC,GAAG,QAAQ,wBAAwB,GAAG,QAAQ,4BAA4B,IAAI,CAAC,MAAM,QAAQ,aAAa,CAAC,CAAC,CAAC;AAAA,MACjI;AAAA,IACJ;AACA,2BAAQ,kBAAkB,QAAQ,WAAW;AAAA,MACzC,KAAK;AAAA,IACT,CAAC;AAAA,EACL;AACJ;AAIA,SAAS,gBAAgB,SAAS;AAC9B,MAAI,QAAQ,gBAAgB,QAAQ;AAChC,YAAQ,gBAAgB,QAAQ,CAAC,mBAAmB;AAChD,YAAM,CAAC,UAAU,QAAQ,IAAI;AAC7B,6BAAQ,eAAe,UAAU,QAAQ;AAAA,IAC7C,CAAC;AAAA,EACL;AACJ;AAIA,SAAS,mBAAmB,SAAS;AACjC,MAAI,QAAQ,mBAAmB,QAAQ;AACnC,YAAQ,mBAAmB,QAAQ,CAAC,sBAAsB;AA9+ClE;AA++CY,YAAM,CAAC,WAAW,QAAQ,IAAI;AAC9B,UAAI,GAAC,2CAAqB,SAAS,MAA9B,mBAAiC,eAAc;AAChD,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC/D;AACA,6BAAQ,kBAAkB,WAAW,QAAQ;AAAA,IACjD,CAAC;AAAA,EACL;AACJ;AAIA,SAAS,mBAAmB,SAAS;AACjC,MAAI,QAAQ,mBAAmB,QAAQ;AACnC,YAAQ,mBAAmB,QAAQ,CAAC,sBAAsB;AACtD,YAAM,CAAC,WAAW,QAAQ,IAAI;AAC9B,UAAI,KAAC,0BAAa,SAAS,GAAG;AAC1B,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC/D;AACA,6BAAQ,kBAAkB,WAAW,QAAQ;AAAA,IACjD,CAAC;AAAA,EACL;AACJ;AAIA,SAAS,cAAc,SAAS;AAC5B,MAAI,QAAQ,cAAc,QAAQ;AAC9B,YAAQ,cAAc,QAAQ,CAAC,iBAAiB;AAC5C,YAAM,CAAC,MAAM,QAAQ,IAAI;AACzB,UAAI,KAAC,0BAAa,IAAI,GAAG;AACrB,cAAM,IAAI,MAAM,sCAAsC;AAAA,MAC1D;AACA,6BAAQ,aAAa,MAAM,QAAQ;AAAA,IACvC,CAAC;AAAA,EACL;AACJ;AAIA,SAAS,uBAAuB,eAAe;AAC3C,QAAM,UAAU,OAAO,aAAa,IAC9B,2BAA2B,EAAE,WAAW,cAAc,CAAC,IACvD,2BAA2B,aAAa;AAC9C,QAAM,iBAAiB,uBAAuB,OAAO;AACrD,iBAAW,6BAAa,MAAM;AAC1B,gBAAY,cAAc;AAC1B,2BAAQ,uBAAuB,cAAc,EAAE,eAAe,6CAA6B,CAAC,CAAC;AAC7F,oBAAgB,OAAO;AACvB,uBAAmB,OAAO;AAC1B,uBAAmB,OAAO;AAC1B,kBAAc,OAAO;AACrB,kDAA8C,OAAO;AACrD,2BAAQ,kBAAkB;AAAA,EAC9B,CAAC,CAAC;AACF,SAAO,CAAC,cAAc;AAClB,UAAM,WAAW,EAAE,OAAO,CAAC,GAAG,eAAe,MAAM,WAAW,CAAC,EAAE;AACjE,UAAM,EAAE,eAAe,OAAO,UAAU,IAAI,kCAAK,WAAa;AAC9D,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AACA,UAAM,YAAY,gBAAgB,SAAS,KAAK;AAChD,QAAI,QAAQ,iBAAiB,eAAe;AACxC,gBAAU,cAAc;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAAS,gBAAgB,SAAS,OAAO;AACrC,QAAM,UAAU,uBAAQ,gBAAgB,QAAQ,SAAS;AACzD,QAAM,eAAe,QAAQ;AAC7B,QAAM,YAAY,SAAS,QAAQ,cAAc,KAAK;AACtD,SAAO,IAAI,UAAU,SAAS,cAAc,WAAW,aAAa,aAAa;AACrF;AAKA,MAAM,sBAAsB,aAAa;AAAA,EACrC,YAAY,eAAe,kBAAkB,aAAa,aAAa,cAAc,mBAAmB,SAAS;AAC7G,UAAM,aAAa,cAAc,mBAAmB,OAAO;AAC3D,SAAK,gBAAgB;AACrB,SAAK,mBAAmB;AACxB,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,OAAO,OAAO,wBAAwB,OAAO;AACzC,QAAI,uBAAuB;AACvB,aAAO,KAAK,aAAa,SAAS,IAAI,KAAK;AAAA,IAC/C;AACA,WAAO,MAAM,OAAO,KAAK;AAAA,EAC7B;AAAA,EACA,yBAAyB;AACrB,QAAI,KAAK,cAAc;AACnB,WAAK,aAAa,SAAS,IAAI,6BAAiB,EAAE,cAAc;AAAA,IACpE,OACK;AACD,WAAK,cAAc;AAAA,IACvB;AAAA,EACJ;AAAA,EACA,UAAU,qBAAqB,SAAS;AACpC,SAAK,WAAW,CAAC,GAAG,QAAQ,SAAS,mBAAmB,GAAG;AACvD,aAAO,SAAS,cAAc,mBAAmB;AAAA,IACrD;AACA,WAAO,YAAY,KAAK,gBAAgB,EAAE,qBAAqB,OAAO,EAAE,CAAC,KAAK;AAAA,EAClF;AAAA,EACA,aAAa,qBAAqB,SAAS;AACvC,SAAK,WAAW,CAAC,GAAG,QAAQ,SAAS,mBAAmB,GAAG;AACvD,aAAO,MAAM,KAAK,SAAS,iBAAiB,mBAAmB,CAAC;AAAA,IACpE;AACA,WAAO,YAAY,KAAK,gBAAgB,EAAE,qBAAqB,OAAO;AAAA,EAC1E;AAAA,EACA,aAAa,OAAO,OAAO;AACvB,iBAAa,KAAK,QAAQ,cAAc,OAAO,KAAK;AACpD,SAAK,cAAc;AAAA,EACvB;AACJ;AAIA,SAAS,gBAAgB,MAAM;AAC3B,SAAO,CAAC,cAAc,UAAU,eAAe,SAAS,IAAI;AAChE;AAKA,SAAS,+BAA+B,SAAS;AAC7C,QAAM,iBAAiB,uBAAuB,OAAO;AACrD,iBAAe,aAAa,KAAK,QAAQ,IAAI;AAC7C,SAAO;AACX;AAEA,MAAM,iBAAN,MAAM,eAAc;AAGpB;AAFa,eAAK,YAAO,GAAG,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,gBAAe,MAAM,CAAC,GAAG,QAAQ,GAAG,0BAAgB,UAAU,CAAC;AAChK,eAAK,YAAO,GAAG,+BAAqB,EAAE,YAAY,UAAU,SAAS,UAAU,MAAM,gBAAe,UAAU,6BAA6B,UAAU,IAAI,UAAU,IAAI,UAAU,KAAK,CAAC;AAFpM,IAAM,gBAAN;AAIA,GAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,eAAe,YAAY,CAAC;AAAA,EAC3G,MAAM;AAAA,EACN,MAAM,CAAC;AAAA,IACC,UAAU;AAAA,IACV,UAAU;AAAA,EACd,CAAC;AACT,CAAC,EAAE,CAAC;AAOZ,MAAM,cAAN,MAAM,YAAW;AAIjB;AAHa,YAAK,YAAO,GAAG,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,aAAY,MAAM,CAAC,GAAG,QAAQ,GAAG,0BAAgB,SAAS,CAAC;AAC5J,YAAK,YAAO,GAAG,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,aAAY,cAAc,CAAC,aAAa,EAAE,CAAC;AAC7I,YAAK,YAAO,GAAG,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,YAAW,CAAC;AAH3H,IAAM,aAAN;AAKA,GAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,YAAY,YAAY,CAAC;AAAA,EACxG,MAAM;AAAA,EACN,MAAM,CAAC;AAAA,IACC,cAAc,CAAC,aAAa;AAAA,EAChC,CAAC;AACT,CAAC,EAAE,CAAC;AAEZ,MAAM,8BAA8B,iCAC7B,2BAA2B,IADE;AAAA,EAEhC,MAAM;AAAA,EACN,UAAU;AACd;AAIA,SAAS,+BAA+B,WAAW;AAC/C,SAAO,MAAM,6BAA6B,SAAS;AACvD;AAEA,SAAS,kBAAkB,eAAe;AACtC,QAAM,UAAU,OAAO,aAAa,IAC9B,+BAA+B,EAAE,WAAW,cAAc,CAAC,IAC3D,+BAA+B,aAAa;AAClD,QAAM,iBAAiB,+BAA+B,OAAO;AAC7D,iBAAW,6BAAa,MAAM;AAC1B,gBAAY,cAAc;AAC1B,2BAAQ,uBAAuB,cAAc,EAAE,eAAe,6CAA6B,CAAC,CAAC;AAC7F,oBAAgB,OAAO;AACvB,uBAAmB,OAAO;AAC1B,uBAAmB,OAAO;AAC1B,kBAAc,OAAO;AACrB,kDAA8C,OAAO;AACrD,QAAI,QAAQ,UAAU;AAClB,6BAAQ,kBAAkB,QAAQ,MAAM;AAAA,QACpC,KAAK,EAAE,UAAU,QAAQ,SAAS;AAAA,MACtC,CAAC;AAAA,IACL;AAAA,EACJ,CAAC,CAAC;AACF,SAAO,CAAC,UAAU,cAAc;AAC5B,UAAM,WAAW,EAAE,WAAW,CAAC,GAAG,eAAe,MAAM,WAAW,CAAC,EAAE;AACrE,UAAM,EAAE,eAAe,WAAW,UAAU,IAAI,kCAAK,WAAa;AAClE,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AACA,QAAI,UAAU;AACV,6BAAQ,kBAAkB,QAAQ,MAAM;AAAA,QACpC,KAAK,EAAE,SAAmB;AAAA,MAC9B,CAAC;AAAA,IACL;AACA,UAAM,YAAY,oBAAoB,SAAS,SAAS;AACxD,QAAI,QAAQ,iBAAiB,eAAe;AACxC,gBAAU,cAAc;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAAS,oBAAoB,SAAS,WAAW;AAC7C,QAAM,cAAc,uBAAQ,gBAAgB,QAAQ,IAAI;AACxD,QAAM,eAAe,YAAY,aAAa,MAAM,2BAAG,UAAU,QAAQ,SAAS,CAAC,KAAK,YAAY;AACpG,QAAM,YAAY,YAAY,aAAa,cAAc,gBAAgB,QAAQ,SAAS,CAAC,EAAE,CAAC;AAC9F,MAAI,CAAC,WAAW;AACZ,UAAM,IAAI,MAAM,mCAAmC,QAAQ,SAAS,6BAAsB;AAAA,EAC9F;AACA,QAAM,gBAAgB,aAAa,YAAY,cAAc,SAAS;AACtE,QAAM,YAAY,UAAU,SAAS,IAAI,QAAQ,SAAS;AAC1D,SAAO,IAAI,cAAc,eAAe,YAAY,cAAc,YAAY,eAAe,aAAa,cAAc,WAAW,aAAa,aAAa;AACjK;AAKA,MAAM,2BAA2B,aAAa;AAAA,EAC1C,YAAY,eAAe,SAAS,cAAc,UAAU,SAAS;AACjE,UAAM,SAAS,cAAc,UAAU,OAAO;AAC9C,SAAK,gBAAgB;AACrB,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,IAAI,YAAY;AACZ,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,OAAO,OAAO,wBAAwB,OAAO;AACzC,QAAI,uBAAuB;AACvB,aAAO,KAAK,aAAa,SAAS,IAAI,KAAK;AAAA,IAC/C;AACA,WAAO,MAAM,OAAO,KAAK;AAAA,EAC7B;AAAA,EACA,aAAa,OAAO,OAAO;AACvB,iBAAa,KAAK,QAAQ,cAAc,OAAO,KAAK;AACpD,SAAK,cAAc;AAAA,EACvB;AACJ;AAKA,SAAS,gCAAgC,SAAS;AAC9C,QAAM,iBAAiB,cAAc,OAAO;AAC5C,MAAI,QAAQ,kBAAkB;AAC1B,oBAAgB,gBAAgB,QAAQ,SAAS;AAAA,EACrD;AACA,iBAAe,aAAa,KAAK,QAAQ,IAAI;AAC7C,iBAAe,UAAU,CAAC,QAAQ,UAAU,+BAAmB,QAAQ,WAAW,CAAC,CAAC;AACpF,SAAO;AACX;AAEA,MAAM,iCAAiC,iCAChC,sBAAsB,IADU;AAAA,EAEnC,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,eAAe;AAAA,EACf,oBAAoB,CAAC;AAAA,EACrB,gBAAgB,CAAC;AAAA,EACjB,kBAAkB;AACtB;AAIA,SAAS,oCAAoC,WAAW;AACpD,SAAO,MAAM,gCAAgC,SAAS;AAC1D;AAEA,SAAS,uBAAuB,eAAe;AAC3C,QAAM,UAAU,OAAO,aAAa,IAC9B,oCAAoC,EAAE,WAAW,cAAc,CAAC,IAChE,oCAAoC,aAAa;AACvD,QAAM,iBAAiB,gCAAgC,OAAO;AAC9D,iBAAW,6BAAa,MAAM;AAC1B,gBAAY,cAAc;AAC1B,2BAAQ,uBAAuB,cAAc;AAC7C,oBAAgB,OAAO;AACvB,uBAAmB,OAAO;AAC1B,uBAAmB,OAAO;AAC1B,kBAAc,OAAO;AAAA,EACzB,CAAC,CAAC;AACF,SAAO,CAAC,UAAU,cAAc;AAC5B,UAAM,WAAW;AAAA,MACb,WAAW,CAAC;AAAA,MACZ,eAAe;AAAA,MACf,WAAW,CAAC;AAAA,IAChB;AACA,UAAM,EAAE,eAAe,WAAW,UAAU,IAAI,kCAAK,WAAa;AAClE,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AACA,2BAAQ,eAAe,6CAA6B,CAAC,CAAC,EAAE,kBAAkB,QAAQ,MAAM;AAAA,MACpF,KAAK,EAAE,UAAU,YAAY,QAAQ,SAAS;AAAA,IAClD,CAAC;AACD,QAAI,QAAQ,mBAAmB,UAAU,QAAQ,eAAe,QAAQ;AACpE,6BAAQ,kBAAkB,QAAQ,WAAW;AAAA,QACzC,KAAK,EAAE,WAAW,CAAC,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,eAAe,IAAI,CAAC,MAAM,QAAQ,aAAa,CAAC,CAAC,CAAC,EAAE;AAAA,MACrH,CAAC;AAAA,IACL;AACA,UAAM,YAAY,yBAAyB,SAAS,SAAS;AAC7D,QAAI,QAAQ,iBAAiB,eAAe;AACxC,gBAAU,cAAc;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAAS,yBAAyB,SAAS,WAAW;AAClD,QAAM,cAAc,uBAAQ,gBAAgB,QAAQ,IAAI;AACxD,QAAM,eAAe,YAAY,aAAa,MAAM,2BAAG,UAAU,QAAQ,SAAS,CAAC,KAAK,YAAY;AACpG,QAAM,YAAY,YAAY,aAAa,cAAc,gBAAgB,QAAQ,SAAS,CAAC,EAAE,CAAC;AAC9F,MAAI,CAAC,WAAW;AACZ,UAAM,IAAI,MAAM,yBAAyB,QAAQ,SAAS,6BAAsB;AAAA,EACpF;AACA,QAAM,gBAAgB,aAAa,YAAY,cAAc,SAAS;AACtE,QAAM,YAAY,UAAU,SAAS,IAAI,QAAQ,SAAS;AAC1D,SAAO,IAAI,mBAAmB,eAAe,aAAa,YAAY,cAAc,WAAW,aAAa,aAAa;AAC7H;AAKA,MAAM,yBAAyB,cAAc;AAAA,EACzC,YAAY,SAAS;AACjB,UAAM;AACN,SAAK,UAAU;AAAA,EACnB;AACJ;AAKA,SAAS,qBAAqB,SAAS;AACnC,QAAM,iBAAiB,cAAc,OAAO;AAC5C,iBAAe,UAAU,KAAK,QAAQ,OAAO;AAC7C,SAAO;AACX;AAEA,MAAM,wBAAwB,mBACvB,sBAAsB;AAK7B,SAAS,yBAAyB,WAAW;AACzC,SAAO,MAAM,uBAAuB,SAAS;AACjD;AAKA,SAAS,qBAAqB,eAAe;AACzC,QAAM,UAAU,OAAO,aAAa,IAAI,gBAAgB,cAAc;AACtE,QAAM,UAAU,OAAO,aAAa,IAAI,yBAAyB,EAAE,QAAQ,CAAC,IAAI,yBAAyB,aAAa;AACtH,QAAM,iBAAiB,qBAAqB,OAAO;AACnD,aAAW,MAAM;AACb,2BAAQ,uBAAuB,cAAc;AAC7C,oBAAgB,OAAO;AAAA,EAC3B,CAAC;AACD,YAAU,MAAM;AACZ,UAAM,gBAAgB,uBAAQ,SACxB,uBAAQ,OAAO,OAAO,IACtB,uBAAQ,IAAI,OAAO;AACzB,QAAI,+BAA+B,aAAa,GAAG;AAE/C,oBAAc,YAAY;AAAA,IAC9B;AAAA,EACJ,CAAC;AACD,SAAO,CAAC,cAAc;AAClB,UAAM,WAAW,EAAE,WAAW,CAAC,EAAE;AACjC,UAAM,EAAE,UAAU,IAAI,kCAAK,WAAa;AACxC,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AACA,WAAO,IAAI,iBAAiB,uBAAQ,SAAS,uBAAQ,OAAO,OAAO,IAAI,uBAAQ,IAAI,OAAO,CAAC;AAAA,EAC/F;AACJ;AAEA,MAAM,mBAAmB,qBAAO;AAChC;AACA,SAAS,aAAa,QAAQ;AAC1B,SAAO,qBAAqB;AAChC;AAKA,MAAM,yBAAyB,UAAU;AAAA,EACrC,YAAY,SAAS,cAAc,UAAU,QAAQ,oBAAoB;AACrE,UAAM,SAAS,cAAc,UAAU,aAAa,aAAa;AACjE,SAAK,SAAS;AACd,SAAK,qBAAqB;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB,SAAS;AACvB,QAAI,CAAC,KAAK,iBAAiB,GAAG;AAC1B;AAAA,IACJ;AACA,QAAI,WAAW,QAAQ,QAAQ;AAC3B,WAAK,mBAAmB,UAAU,QAAQ,MAAM;AAAA,IACpD;AACA,QAAI,WAAW,QAAQ,aAAa;AAChC,WAAK,mBAAmB,eAAe,QAAQ,WAAW;AAAA,IAC9D;AACA,QAAI,WAAW,QAAQ,MAAM;AACzB,WAAK,mBAAmB,WAAW,QAAQ,IAAI;AAAA,IACnD;AACA,QAAI,WAAW,QAAQ,UAAU;AAC7B,WAAK,mBAAmB,YAAY,QAAQ,QAAQ;AAAA,IACxD;AACA,SAAK,2BAA2B;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,MAAM,OAAO;AACvB,QAAI,KAAK,iBAAiB,GAAG;AACzB,WAAK,mBAAmB,SAAS,MAAM,KAAK;AAC5C,WAAK,2BAA2B;AAAA,IACpC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,MAAM,OAAO;AAC5B,QAAI,KAAK,iBAAiB,GAAG;AACzB,WAAK,mBAAmB,cAAc,MAAM,KAAK;AACjD,WAAK,2BAA2B;AAAA,IACpC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,MAAM,OAAO;AACtB,QAAI,KAAK,iBAAiB,GAAG;AACzB,WAAK,mBAAmB,QAAQ,MAAM,KAAK;AAC3C,WAAK,2BAA2B;AAAA,IACpC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB,UAAU;AACvB,QAAI,KAAK,iBAAiB,GAAG;AACzB,WAAK,mBAAmB,YAAY,QAAQ;AAC5C,WAAK,2BAA2B;AAAA,IACpC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,KAAK;AACb,QAAI,KAAK,iBAAiB,GAAG;AACzB,WAAK,mBAAmB,OAAO,GAAG;AAClC,WAAK,2BAA2B;AAAA,IACpC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB,OAAO;AACnB,QAAI,CAAC,aAAa,KAAK,MAAM,GAAG;AAE5B,cAAQ,KAAK,qJAC4C;AACzD;AAAA,IACJ;AACA,SAAK,OAAO,gBAAgB,KAAK;AAAA,EACrC;AAAA,EACA,6BAA6B;AACzB,SAAK,mBAAmB,kBAAkB;AAC1C,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,mBAAmB;AACf,QAAI,CAAC,KAAK,oBAAoB;AAE1B,cAAQ,KAAK,sJACqC;AAClD,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AACJ;AAOA,MAAM,2BAA2B,6BAAe;AAAA,EAC5C,YAAY,SAAS;AACjB,UAAM;AACN,SAAK,aAAa,CAAC;AACnB,SAAK,kBAAkB,CAAC;AACxB,SAAK,WAAW,CAAC;AACjB,SAAK,eAAe;AACpB,SAAK,UAAU,CAAC;AAChB,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,eAAe;AACpB,SAAK,gBAAgB,IAAI,0BAAc,CAAC;AACxC,SAAK,qBAAqB,IAAI,0BAAc,CAAC;AAC7C,SAAK,cAAc,IAAI,0BAAc,CAAC;AACtC,SAAK,kBAAkB,IAAI,0BAAc,CAAC;AAC1C,SAAK,aAAa,IAAI,0BAAc,CAAC;AACrC,QAAI,SAAS;AACT,WAAK,aAAa,QAAQ,UAAU,CAAC;AACrC,WAAK,kBAAkB,QAAQ,eAAe,CAAC;AAC/C,WAAK,WAAW,QAAQ,QAAQ,CAAC;AACjC,WAAK,eAAe,QAAQ,YAAY;AACxC,WAAK,UAAU,QAAQ,OAAO,CAAC;AAC/B,WAAK,WAAW,QAAQ,QAAQ;AAChC,WAAK,aAAa,QAAQ,UAAU;AACpC,WAAK,iBAAiB,QAAQ,cAAc;AAC5C,WAAK,eAAe,QAAQ,YAAY;AAAA,IAC5C;AACA,SAAK,SAAS,KAAK,cAAc,aAAa;AAC9C,SAAK,cAAc,KAAK,mBAAmB,aAAa;AACxD,SAAK,OAAO,KAAK,YAAY,aAAa;AAC1C,SAAK,WAAW,KAAK,gBAAgB,aAAa;AAClD,SAAK,MAAM,KAAK,WAAW,aAAa;AACxC,SAAK,WAAW,KAAK,cAAc;AACnC,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,cAAc,aAAa,EAAE,SAAK,sBAAI,CAAC,eAAW,iCAAkB,MAAM,CAAC,CAAC;AAAA,EAC5F;AAAA,EACA,UAAU,QAAQ;AACd,SAAK,aAAa;AAClB,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,SAAS,MAAM,OAAO;AAClB,SAAK,aAAa,iCAAK,KAAK,aAAV,EAAsB,CAAC,IAAI,GAAG,MAAM;AACtD,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,eAAe,aAAa;AACxB,SAAK,kBAAkB;AACvB,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,cAAc,MAAM,OAAO;AACvB,SAAK,kBAAkB,iCAAK,KAAK,kBAAV,EAA2B,CAAC,IAAI,GAAG,MAAM;AAChE,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,WAAW,MAAM;AACb,SAAK,WAAW;AAChB,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,QAAQ,MAAM,OAAO;AACjB,SAAK,WAAW,iCAAK,KAAK,WAAV,EAAoB,CAAC,IAAI,GAAG,MAAM;AAClD,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,YAAY,UAAU;AAClB,SAAK,eAAe;AACpB,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,OAAO,KAAK;AACR,SAAK,UAAU;AACf,SAAK,WAAW,KAAK,cAAc;AAAA,EACvC;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,cAAc;AAAA,EAC9B;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,gBAAgB,CAAC,IAAI;AAAA,EACrC;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,kBAAkB;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB;AAChB,SAAK,cAAc,KAAK,KAAK,UAAU;AACvC,SAAK,mBAAmB,KAAK,KAAK,eAAe;AACjD,SAAK,YAAY,KAAK,KAAK,QAAQ;AACnC,SAAK,gBAAgB,KAAK,KAAK,YAAY;AAC3C,SAAK,WAAW,KAAK,KAAK,OAAO;AAAA,EACrC;AAAA,EACA,WAAW;AACP,WAAO;AAAA,EACX;AAAA,EACA,gBAAgB;AACZ,UAAM,WAAW,IAAI,qCAAuB;AAC5C,aAAS,SAAS,KAAK;AACvB,aAAS,cAAc,KAAK;AAC5B,aAAS,OAAO,KAAK;AACrB,aAAS,WAAW,KAAK;AACzB,aAAS,MAAM,KAAK;AACpB,WAAO;AAAA,EACX;AACJ;AAKA,SAAS,qBAAqB,SAAS;AACnC,QAAM,iBAAiB,uBAAuB,OAAO;AACrD,MAAI,QAAQ,cAAc;AACtB,mBAAe,QAAQ,KAAK,mCAAmB;AAC/C,mBAAe,UAAU,KAAK,QAAQ,aAAa,YAAY;AAAA,MAC3D,QAAQ,IAAI,oBAAQ;AAAA,MACpB,gBAAgB,OAAO;AACnB,aAAK,OAAO,KAAK,KAAK;AAAA,MAC1B;AAAA,MACA,eAAe;AACX,eAAO;AAAA,MACX;AAAA,IACJ,CAAC,GAAG;AAAA,MACA,SAAS;AAAA,MACT,aAAa;AAAA,IACjB,CAAC;AACD,mBAAe,UAAU,KAAK;AAAA,MAC1B,SAAS;AAAA,MACT,UAAU,IAAI,mBAAmB;AAAA,QAC7B,QAAQ,QAAQ;AAAA,QAChB,aAAa,QAAQ;AAAA,QACrB,MAAM,QAAQ;AAAA,MAClB,CAAC;AAAA,IACL,GAAG;AAAA,MACC,SAAS;AAAA,MACT,aAAa;AAAA,IACjB,CAAC;AAAA,EACL,OACK;AACD,mBAAe,QAAQ,KAAK,oCAAoB,WAAW,QAAQ,MAAM,CAAC;AAAA,EAC9E;AACA,SAAO;AACX;AAEA,MAAM,wBAAwB,iCACvB,2BAA2B,IADJ;AAAA,EAE1B,QAAQ,CAAC;AAAA,EACT,aAAa,CAAC;AAAA,EACd,MAAM,CAAC;AAAA,EACP,UAAU;AAAA,EACV,cAAc;AAAA,EACd,QAAQ,CAAC;AAAA,EACT,KAAK,CAAC;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,YAAY;AAChB;AAIA,SAAS,yBAAyB,WAAW;AACzC,SAAO,MAAM,uBAAuB,SAAS;AACjD;AAKA,SAAS,qBAAqB,eAAe;AACzC,QAAM,UAAU,OAAO,aAAa,IAC9B,yBAAyB,EAAE,WAAW,cAAc,CAAC,IACrD,yBAAyB,aAAa;AAC5C,QAAM,iBAAiB,qBAAqB,OAAO;AACnD,iBAAW,6BAAa,MAAM;AAC1B,gBAAY,cAAc;AAC1B,2BAAQ,uBAAuB,cAAc;AAC7C,oBAAgB,OAAO;AACvB,uBAAmB,OAAO;AAC1B,uBAAmB,OAAO;AAC1B,kBAAc,OAAO;AACrB,kDAA8C,OAAO;AACrD,2BAAQ,kBAAkB;AAAA,EAC9B,CAAC,CAAC;AACF,SAAO,CAAC,cAAc;AAClB,UAAM,WAAW;AAAA,MACb,OAAO,CAAC;AAAA,MACR,eAAe;AAAA,MACf,WAAW,CAAC;AAAA,IAChB;AACA,UAAM,EAAE,eAAe,OAAO,UAAU,IAAI,kCAAK,WAAa;AAC9D,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AACA,UAAM,EAAE,QAAQ,aAAa,MAAM,UAAU,KAAK,MAAM,QAAQ,UAAU,WAAW,IAAI,kCAAK,UAAY;AAC1G,2BAAQ,iBAAiB,8BAAgB;AAAA,MACrC,UAAU,IAAI,mBAAmB,EAAE,QAAQ,aAAa,MAAM,UAAU,KAAK,MAAM,QAAQ,UAAU,WAAW,CAAC;AAAA,IACrH,CAAC;AACD,UAAM,SAAS,uBAAQ,SAAS,uBAAQ,OAAO,kBAAM,IAAI,uBAAQ,IAAI,kBAAM;AAC3E,WAAO,OAAO,IAAI,MAAM;AACpB,YAAM,YAAY,uBAAuB,SAAS,KAAK;AACvD,gBAAU,OAAO,kBAAkB;AACnC,UAAI,QAAQ,iBAAiB,eAAe;AACxC,kBAAU,cAAc;AAAA,MAC5B;AACA,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AACJ;AACA,SAAS,uBAAuB,SAAS,OAAO;AAC5C,QAAM,UAAU,uBAAQ,gBAAgB,QAAQ,SAAS;AACzD,QAAM,eAAe,QAAQ;AAC7B,QAAM,YAAY,SAAS,QAAQ,cAAc,KAAK;AAItD,MAAI,CAAC,uBAAQ,QAAQ;AACjB,WAAO,IAAI,iBAAiB,SAAS,cAAc,WAAW,uBAAQ,IAAI,oBAAM,GAAG,uBAAQ,IAAI,4BAAc,CAAC;AAAA,EAClH;AACA,SAAO,IAAI,iBAAiB,SAAS,cAAc,WAAW,uBAAQ,OAAO,oBAAM,GAAG,uBAAQ,OAAO,4BAAc,CAAC;AACxH;AAKA,IAAI;AAAA,CACH,SAAUC,aAAY;AACnB,EAAAA,YAAW,KAAK,IAAI;AACpB,EAAAA,YAAW,MAAM,IAAI;AACrB,EAAAA,YAAW,QAAQ,IAAI;AACvB,EAAAA,YAAW,KAAK,IAAI;AACpB,EAAAA,YAAW,OAAO,IAAI;AACtB,EAAAA,YAAW,MAAM,IAAI;AACrB,EAAAA,YAAW,OAAO,IAAI;AACtB,EAAAA,YAAW,SAAS,IAAI;AAC5B,GAAG,eAAe,aAAa,CAAC,EAAE;AAIlC,MAAM,sBAAsB,cAAc;AAAA,EACtC,YAAY,SAAS,YAAY,YAAY;AACzC,UAAM;AACN,SAAK,UAAU;AACf,SAAK,aAAa;AAClB,SAAK,aAAa;AAGlB,SAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AACzC,SAAK,mBAAmB,KAAK,iBAAiB,KAAK,IAAI;AAAA,EAC3D;AAAA,EACA,UAAU,KAAK,QAAQ;AACnB,WAAO,IAAI,EAAE,KAAK,IAAI;AACtB,UAAM,MAAM,KAAK,WAAW,UAAU;AAAA,MAClC;AAAA,MACA;AAAA,IACJ,CAAC;AAED,SAAK,WAAW,OAAO;AACvB,WAAO;AAAA,EACX;AAAA,EACA,iBAAiB,cAAc;AAC3B,UAAM,WAAW,aAAa,IAAI,CAAC,gBAAgB;AAC/C,aAAO,KAAK,WAAW,UAAU;AAAA,QAC7B,KAAK,YAAY;AAAA,QACjB,QAAQ,YAAY;AAAA,MACxB,CAAC;AAAA,IACL,CAAC;AACD,SAAK,WAAW,OAAO;AACvB,WAAO;AAAA,EACX;AAAA,EACA,SAAS,UAAU,MAAM;AACrB,aAAS,QAAQ,CAAC,SAAS,QAAQ;AAC/B,cAAQ,MAAM,KAAK,GAAG,CAAC;AAAA,IAC3B,CAAC;AAAA,EACL;AACJ;AAKA,SAAS,kBAAkB,SAAS;AAChC,QAAM,iBAAiB,cAAc,OAAO;AAC5C,iBAAe,UAAU,KAAK,QAAQ,OAAO;AAC7C,iBAAe,QAAQ,KAAK,uCAAuB;AACnD,SAAO;AACX;AAEA,MAAM,qBAAqB,mBACpB,sBAAsB;AAK7B,SAAS,sBAAsB,WAAW;AACtC,SAAO,MAAM,oBAAoB,SAAS;AAC9C;AAKA,SAAS,kBAAkB,eAAe;AACtC,QAAM,UAAU,OAAO,aAAa,IAAI,gBAAgB,cAAc;AACtE,QAAM,UAAU,OAAO,aAAa,IAAI,sBAAsB,EAAE,QAAQ,CAAC,IAAI,sBAAsB,aAAa;AAChH,QAAM,iBAAiB,kBAAkB,OAAO;AAChD,aAAW,MAAM;AACb,2BAAQ,uBAAuB,cAAc;AAC7C,oBAAgB,OAAO;AAAA,EAC3B,CAAC;AACD,YAAU,MAAM;AACZ,QAAI,uBAAQ,QAAQ;AAChB,6BAAQ,OAAO,qCAAqB,EAAE,OAAO;AAAA,IACjD,OACK;AACD,6BAAQ,IAAI,qCAAqB,EAAE,OAAO;AAAA,IAC9C;AAAA,EACJ,CAAC;AACD,SAAO,CAAC,cAAc;AAClB,UAAM,WAAW,EAAE,WAAW,CAAC,EAAE;AACjC,UAAM,EAAE,UAAU,IAAI,kCAAK,WAAa;AACxC,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AAIA,QAAI,CAAC,uBAAQ,QAAQ;AACjB,aAAO,IAAI,cAAc,uBAAQ,IAAI,OAAO,GAAG,uBAAQ,IAAI,sBAAU,GAAG,uBAAQ,IAAI,qCAAqB,CAAC;AAAA,IAC9G;AACA,WAAO,IAAI,cAAc,uBAAQ,OAAO,OAAO,GAAG,uBAAQ,OAAO,sBAAU,GAAG,uBAAQ,OAAO,qCAAqB,CAAC;AAAA,EACvH;AACJ;AAKA,MAAM,sBAAsB,cAAc;AAAA,EACtC,YAAY,eAAe,SAAS,cAAc,SAAS;AACvD,UAAM;AACN,SAAK,gBAAgB;AACrB,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,UAAU;AAAA,EACnB;AAAA,EACA,gBAAgB;AACZ,SAAK,QAAQ,cAAc;AAAA,EAC/B;AAAA,EACA,aAAa,OAAO,OAAO;AACvB,iBAAa,KAAK,QAAQ,cAAc,OAAO,KAAK;AACpD,SAAK,cAAc;AAAA,EACvB;AACJ;AAKA,SAAS,2BAA2B,SAAS;AACzC,QAAM,iBAAiB,cAAc,OAAO;AAC5C,kBAAgB,gBAAgB,QAAQ,IAAI;AAC5C,iBAAe,aAAa,KAAK,QAAQ,IAAI;AAC7C,SAAO;AACX;AAEA,MAAM,8BAA8B,iCAC7B,sBAAsB,IADO;AAAA,EAEhC,MAAM;AAAA,EACN,eAAe;AAAA,EACf,UAAU;AACd;AAIA,SAAS,+BAA+B,WAAW;AAC/C,SAAO,MAAM,6BAA6B,SAAS;AACvD;AAKA,SAAS,kBAAkB,eAAe;AACtC,QAAM,UAAU,OAAO,aAAa,IAC9B,+BAA+B,EAAE,MAAM,cAAc,CAAC,IACtD,+BAA+B,aAAa;AAClD,QAAM,iBAAiB,2BAA2B,OAAO;AACzD,iBAAW,6BAAa,MAAM;AAC1B,gBAAY,cAAc;AAC1B,2BAAQ,uBAAuB,cAAc;AAC7C,oBAAgB,OAAO;AACvB,kBAAc,OAAO;AAAA,EACzB,CAAC,CAAC;AACF,SAAO,CAAC,qBAAqB,cAAc;AACvC,UAAM,WAAW;AAAA,MACb,WAAW,CAAC;AAAA,MACZ,eAAe;AAAA,MACf,WAAW,CAAC;AAAA,IAChB;AACA,UAAM,oBAAoB,OAAO,wBAAwB,WAAW,sBAAsB;AAC1F,UAAM,EAAE,eAAe,WAAW,UAAU,IAAI,kCAAK,WAAa;AAClE,UAAM,WAAW,OAAO,wBAAwB,WAAW,sBAAsB,QAAQ;AACzF,QAAI,aAAa,UAAU,QAAQ;AAC/B,gBAAU,QAAQ,CAAC,aAAa;AAC5B,+BAAQ,iBAAiB,SAAS,SAAS,QAAQ;AAAA,MACvD,CAAC;AAAA,IACL;AACA,QAAI,UAAU;AACV,6BAAQ,eAAe,6CAA6B,CAAC,CAAC,EAAE,kBAAkB,QAAQ,MAAM;AAAA,QACpF,KAAK,EAAE,SAAS;AAAA,MACpB,CAAC;AAAA,IACL;AACA,UAAM,YAAY,oBAAoB,SAAS,SAAS;AACxD,QAAI,QAAQ,iBAAiB,eAAe;AACxC,gBAAU,cAAc;AAAA,IAC5B;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAAS,oBAAoB,SAAS,WAAW;AAC7C,QAAM,cAAc,uBAAQ,gBAAgB,QAAQ,IAAI;AACxD,QAAM,eAAe,YAAY;AACjC,QAAM,gBAAgB,aAAa,YAAY,cAAc,SAAS;AACtE,SAAO,IAAI,cAAc,eAAe,aAAa,YAAY,cAAc,aAAa,aAAa;AAC7G;",
  "names": ["import_testing", "$", "actual", "pass", "message", "addendum", "el", "expectedOptionsString", "globals", "HttpMethod"]
}
