{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/components/ix-table/ix-table.harness.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/components/ix-table/ix-table.harness.ts"],"sourcesContent":["import {\n  ComponentHarness,\n  ContentContainerComponentHarness,\n  HarnessQuery, parallel,\n  TestElement,\n} from '@angular/cdk/testing';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { IxCellHarness } from 'app/modules/ix-table/components/ix-table/cell.harness';\nimport { IxRowHarness } from 'app/modules/ix-table/components/ix-table/row.harness';\n\nexport class IxTableHarness extends ContentContainerComponentHarness {\n  static hostSelector = 'ix-table';\n\n  readonly getCells = this.locatorForAll(IxCellHarness);\n  readonly getRows = this.locatorForAll(IxRowHarness);\n\n  async getHeaderTexts(): Promise<string[]> {\n    const headerCells = await this.locatorForAll('th')();\n    return Promise.all(headerCells.map((cell) => cell.text()));\n  }\n\n  async getRowCount(): Promise<number> {\n    const rows = await this.locatorForAll('.row')();\n    return rows.length;\n  }\n\n  async getColumnCount(): Promise<number> {\n    const headerCells = await this.locatorForAll('th')();\n    return headerCells.length;\n  }\n\n  async getCell(row: number, column: number): Promise<IxCellHarness> {\n    const cells = await this.getCells();\n    const columnCount = await this.getColumnCount();\n    return cells[row * columnCount + column];\n  }\n\n  async getHarnessInCell<T extends ComponentHarness>(\n    query: HarnessQuery<T>,\n    row: number,\n    column: number,\n  ): Promise<T> {\n    const cell = await this.getCell(row, column);\n\n    if (!cell) {\n      throw new Error(`No cell found at row ${row} and column ${column}`);\n    }\n\n    return cell.getHarness(query);\n  }\n\n  async getAllHarnessesInCell<T extends ComponentHarness>(\n    query: HarnessQuery<T>,\n    row: number,\n    column: number,\n  ): Promise<T[]> {\n    const cell = await this.getCell(row, column);\n\n    if (!cell) {\n      throw new Error(`No cell found at row ${row} and column ${column}`);\n    }\n\n    return cell.getAllHarnesses(query);\n  }\n\n  async getHarnessInRow<T extends ComponentHarness>(\n    query: HarnessQuery<T>,\n    text: string,\n  ): Promise<T> {\n    const rowNumber = await this.getNumberRowByText(text);\n    const row = (await this.getRows())[rowNumber];\n\n    if (!row) {\n      throw new Error(`No row found with number ${rowNumber}`);\n    }\n\n    return row.getHarness(query);\n  }\n\n  async getAllHarnessesInRow<T extends ComponentHarness>(\n    query: HarnessQuery<T>,\n    text: string,\n  ): Promise<T[]> {\n    const rowNumber = await this.getNumberRowByText(text);\n    const row = (await this.getRows())[rowNumber];\n\n    if (!row) {\n      throw new Error(`No row found with number ${rowNumber}`);\n    }\n\n    return row.getAllHarnesses(query);\n  }\n\n  async getNumberRowByText(text: string): Promise<number> {\n    const texts = (await this.getCellTexts()).slice(1);\n    for (let i = 0; i < texts.length; i += 1) {\n      if (texts[i].includes(text)) {\n        return i;\n      }\n    }\n    throw new Error(`No row found with the text '${text}'`);\n  }\n\n  async getRowElement(row: number): Promise<TestElement> {\n    const rows = await this.locatorForAll('.row')();\n    return rows[row];\n  }\n\n  async getToggle(row: number): Promise<MatButtonHarness> {\n    const toggles = await this.locatorForAll(MatButtonHarness.with({ selector: '[ixTest=\"toggle-row\"]' }))();\n    return toggles[row];\n  }\n\n  async getCellTexts(): Promise<string[][]> {\n    const cells = await this.getCells();\n    const texts = await parallel(() => cells.map((cell) => cell.getText()));\n    const columnCount = await this.getColumnCount();\n\n    if (!columnCount) {\n      throw new Error('Could not determine column count');\n    }\n\n    const result: string[][] = [];\n    for (let i = 0; i < texts.length; i += columnCount) {\n      result.push(texts.slice(i, i + columnCount));\n    }\n\n    return result;\n  }\n\n  async clickRow(row: number): Promise<void> {\n    (await this.getRowElement(row)).click();\n  }\n\n  async clickToggle(row: number): Promise<void> {\n    (await this.getToggle(row)).click();\n  }\n}\n"],"version":3}