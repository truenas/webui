{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-permissions/ix-permissions.harness.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-permissions/ix-permissions.harness.ts"],"sourcesContent":["import {\n  BaseHarnessFilters, ComponentHarness, HarnessPredicate, parallel,\n} from '@angular/cdk/testing';\nimport { MatCheckboxHarness } from '@angular/material/checkbox/testing';\nimport { PosixPermission } from 'app/enums/posix-acl.enum';\nimport { parseMode } from 'app/helpers/mode.helper';\nimport { IxLabelHarness } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.harness';\nimport { IxFormControlHarness } from 'app/modules/forms/ix-forms/interfaces/ix-form-control-harness.interface';\nimport { getErrorText } from 'app/modules/forms/ix-forms/utils/harness.utils';\n\nexport interface IxPermissionsHarnessFilters extends BaseHarnessFilters {\n  label: string;\n}\n\nexport class IxPermissionsHarness extends ComponentHarness implements IxFormControlHarness {\n  static hostSelector = 'ix-permissions';\n\n  static with(options: IxPermissionsHarnessFilters): HarnessPredicate<IxPermissionsHarness> {\n    return new HarnessPredicate(IxPermissionsHarness, options)\n      .addOption('label', options.label, (harness, label) => HarnessPredicate.stringMatches(harness.getLabelText(), label));\n  }\n\n  getMatCheckboxHarnesses = this.locatorForAll(MatCheckboxHarness);\n  getErrorText = getErrorText;\n\n  async getLabelText(): Promise<string> {\n    const label = await this.locatorForOptional(IxLabelHarness)();\n    if (!label) {\n      return '';\n    }\n    return label.getLabel();\n  }\n\n  async getValue(): Promise<string> {\n    const permissions = (await this.getMatCheckboxHarnesses());\n    let owner = 0;\n    let grp = 0;\n    let other = 0;\n\n    if ((await permissions[0].isChecked())) {\n      owner += 4;\n    }\n\n    if ((await permissions[1].isChecked())) {\n      owner += 2;\n    }\n\n    if ((await permissions[2].isChecked())) {\n      owner += 1;\n    }\n\n    if ((await permissions[3].isChecked())) {\n      grp += 4;\n    }\n\n    if ((await permissions[4].isChecked())) {\n      grp += 2;\n    }\n\n    if ((await permissions[5].isChecked())) {\n      grp += 1;\n    }\n\n    if (permissions.length > 6) {\n      if ((await permissions[6].isChecked())) {\n        other += 4;\n      }\n\n      if ((await permissions[7].isChecked())) {\n        other += 2;\n      }\n\n      if ((await permissions[8].isChecked())) {\n        other += 1;\n      }\n    }\n\n    return new Promise((resolve) => {\n      resolve(owner.toString() + grp.toString() + other.toString());\n    });\n  }\n\n  async setValue(value: string): Promise<void> {\n    const checkboxes = (await this.getMatCheckboxHarnesses());\n\n    return new Promise((resolve, reject) => {\n      const permissions = parseMode(value);\n      Promise.all([\n        permissions.owner[PosixPermission.Read] ? checkboxes[0].check() : checkboxes[0].uncheck(),\n        permissions.owner[PosixPermission.Write] ? checkboxes[1].check() : checkboxes[1].uncheck(),\n        permissions.owner[PosixPermission.Execute] ? checkboxes[2].check() : checkboxes[2].uncheck(),\n        permissions.group[PosixPermission.Read] ? checkboxes[3].check() : checkboxes[3].uncheck(),\n        permissions.group[PosixPermission.Write] ? checkboxes[4].check() : checkboxes[4].uncheck(),\n        permissions.group[PosixPermission.Execute] ? checkboxes[5].check() : checkboxes[5].uncheck(),\n        permissions.other[PosixPermission.Read] ? checkboxes[6].check() : checkboxes[6].uncheck(),\n        permissions.other[PosixPermission.Write] ? checkboxes[7].check() : checkboxes[7].uncheck(),\n        permissions.other[PosixPermission.Execute] ? checkboxes[8].check() : checkboxes[8].uncheck(),\n      ])\n        .then(() => {\n          resolve();\n        })\n        .catch((errors) => {\n          reject(errors);\n        });\n    });\n  }\n\n  async isDisabled(): Promise<boolean> {\n    const checkboxes = await this.getMatCheckboxHarnesses();\n    const inputState = await parallel(() => checkboxes.map((control) => control.isDisabled()));\n\n    return new Promise((resolve) => {\n      resolve(inputState.every((control) => !!control));\n    });\n  }\n}\n"],"version":3}