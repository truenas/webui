439a9902147ae7d2d7c2b41a8f405a3a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolumeMountsDialogComponent = void 0;
const core_1 = require("@angular/core");
const dialog_1 = require("@angular/material/dialog");
const app_interface_1 = require("app/interfaces/app.interface");
let VolumeMountsDialogComponent = class VolumeMountsDialogComponent {
    constructor(containerDetails) {
        this.containerDetails = containerDetails;
    }
};
exports.VolumeMountsDialogComponent = VolumeMountsDialogComponent;
VolumeMountsDialogComponent.ctorParameters = () => [
    { type: app_interface_1.AppContainerDetails, decorators: [{ type: core_1.Inject, args: [dialog_1.MAT_DIALOG_DATA,] }] }
];
exports.VolumeMountsDialogComponent = VolumeMountsDialogComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-volume-mounts-dialog',
        template: require("./volume-mounts-dialog.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
    })
], VolumeMountsDialogComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3BhZ2VzL2FwcHMvY29tcG9uZW50cy9pbnN0YWxsZWQtYXBwcy9hcHAtd29ya2xvYWRzLWNhcmQvdm9sdW1lLW1vdW50cy1kaWFsb2cvdm9sdW1lLW1vdW50cy1kaWFsb2cuY29tcG9uZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdDQUEyRTtBQUMzRSxxREFBMkQ7QUFDM0QsZ0VBQW1FO0FBUTVELElBQU0sMkJBQTJCLEdBQWpDLE1BQU0sMkJBQTJCO0lBQ3RDLFlBQ3FDLGdCQUFxQztRQUFyQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQXFCO0lBQ3ZFLENBQUM7O0FBSE8sa0VBQTJCOztzRUFFbkMsYUFBTSxTQUFDLHdCQUFlOztzQ0FGZCwyQkFBMkI7SUFOdkMsSUFBQSxnQkFBUyxFQUFDO1FBQ1QsUUFBUSxFQUFFLHlCQUF5QjtRQUVuQywwREFBb0Q7UUFDcEQsZUFBZSxFQUFFLDhCQUF1QixDQUFDLE1BQU07S0FDaEQsQ0FBQztHQUNXLDJCQUEyQixDQUl2QyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjYm9vay9rYXJwb3Ytd29yay9UcnVlTkFTL3dlYnVpL3NyYy9hcHAvcGFnZXMvYXBwcy9jb21wb25lbnRzL2luc3RhbGxlZC1hcHBzL2FwcC13b3JrbG9hZHMtY2FyZC92b2x1bWUtbW91bnRzLWRpYWxvZy92b2x1bWUtbW91bnRzLWRpYWxvZy5jb21wb25lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgQXBwQ29udGFpbmVyRGV0YWlscyB9IGZyb20gJ2FwcC9pbnRlcmZhY2VzL2FwcC5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpeC12b2x1bWUtbW91bnRzLWRpYWxvZycsXG4gIHN0eWxlVXJsczogWycuL3ZvbHVtZS1tb3VudHMtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ10sXG4gIHRlbXBsYXRlVXJsOiAnLi92b2x1bWUtbW91bnRzLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBWb2x1bWVNb3VudHNEaWFsb2dDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHJvdGVjdGVkIGNvbnRhaW5lckRldGFpbHM6IEFwcENvbnRhaW5lckRldGFpbHMsXG4gICkge31cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==