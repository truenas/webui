{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/toSafeInteger.js","mappings":";;;;;AAAA,oEAAwC;AACxC,kEAAuC;AAEvC,yDAAyD;AACzD,IAAI,gBAAgB,GAAG,gBAAgB,CAAC;AAExC;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,SAAS,aAAa,CAAC,KAAK;IAC1B,OAAO,KAAK;QACV,CAAC,CAAC,IAAA,uBAAS,EAAC,IAAA,sBAAS,EAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;QAClE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,kBAAe,aAAa,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/toSafeInteger.js"],"sourcesContent":["import baseClamp from './_baseClamp.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to a safe integer. A safe integer can be compared and\n * represented correctly.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toSafeInteger(3.2);\n * // => 3\n *\n * _.toSafeInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toSafeInteger(Infinity);\n * // => 9007199254740991\n *\n * _.toSafeInteger('3.2');\n * // => 3\n */\nfunction toSafeInteger(value) {\n  return value\n    ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n    : (value === 0 ? value : 0);\n}\n\nexport default toSafeInteger;\n"],"version":3}