{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_mapCacheSet.js","mappings":";;;;;AAAA,sEAA0C;AAE1C;;;;;;;;;GASG;AACH,SAAS,WAAW,CAAC,GAAG,EAAE,KAAK;IAC7B,IAAI,IAAI,GAAG,IAAA,wBAAU,EAAC,IAAI,EAAE,GAAG,CAAC,EAC5B,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAErB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACrB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC;AACd,CAAC;AAED,kBAAe,WAAW,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_mapCacheSet.js"],"sourcesContent":["import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n"],"version":3}