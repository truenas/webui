{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/roles-card/roles-card.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/roles-card/roles-card.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, Component, computed, input,\n} from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { uniq } from 'lodash-es';\nimport { filter } from 'rxjs';\nimport { Role } from 'app/enums/role.enum';\nimport { DatasetDetails } from 'app/interfaces/dataset.interface';\nimport { DatasetTreeStore } from 'app/pages/datasets/store/dataset-store.service';\nimport { ixAppsDataset } from 'app/pages/datasets/utils/dataset.utils';\nimport { NfsFormComponent } from 'app/pages/sharing/nfs/nfs-form/nfs-form.component';\nimport { SmbFormComponent } from 'app/pages/sharing/smb/smb-form/smb-form.component';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-roles-card',\n  templateUrl: './roles-card.component.html',\n  styleUrls: ['./roles-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RolesCardComponent {\n  readonly dataset = input.required<DatasetDetails>();\n  readonly systemDataset = input.required<string>();\n  readonly hasChildrenWithShares = input<boolean>(false);\n\n  protected readonly nfsRequiredRoles = [Role.SharingNfsWrite, Role.SharingWrite];\n  protected readonly smbRequiredRoles = [Role.SharingSmbWrite, Role.SharingWrite];\n\n  readonly isApplications = computed(() => {\n    return this.dataset().name && this.dataset().name.endsWith(ixAppsDataset);\n  });\n\n  readonly appNames = computed(() => {\n    return uniq(this.dataset().apps.map((app) => app.name)).join(', ');\n  });\n\n  readonly vmNames = computed(() => {\n    return uniq(this.dataset().vms.map((app) => app.name)).join(', ');\n  });\n\n  readonly isSystemDataset = computed(() => {\n    return this.dataset().name === this.systemDataset();\n  });\n\n  readonly smbShareNames = computed(() => {\n    if (!this.dataset().smb_shares?.length) {\n      return '';\n    }\n    const shareNames: string[] = this.dataset().smb_shares.map((item) => item.share_name);\n    if (shareNames.length === 1) {\n      return \"'\" + shareNames[0] + \"'\";\n    }\n    let shareNamesPretty = \"'\";\n    for (let i = 0; i < shareNames.length - 1; i++) {\n      if (i + 1 >= shareNames.length - 1) {\n        shareNamesPretty += shareNames[i] + \"', and '\" + shareNames[shareNames.length - 1] + \"'\";\n      } else {\n        shareNamesPretty += shareNames[i] + \"', '\";\n      }\n    }\n    return shareNamesPretty;\n  });\n\n  readonly canCreateShare = computed(() => {\n    return !this.hasChildrenWithShares()\n      && !this.isSystemDataset()\n      && !this.isApplications()\n      && !this.dataset().apps?.length\n      && !this.dataset().vms?.length\n      && !this.dataset().smb_shares?.length\n      && !this.dataset().nfs_shares?.length\n      && !this.dataset().iscsi_shares?.length;\n  });\n\n  constructor(\n    private slideInService: IxSlideInService,\n    private datasetStore: DatasetTreeStore,\n  ) {}\n\n  createSmbShare(): void {\n    const slideInRef = this.slideInService.open(SmbFormComponent, {\n      data: { defaultSmbShare: { path: this.dataset().mountpoint } },\n    });\n    slideInRef.slideInClosed$.pipe(filter(Boolean), untilDestroyed(this)).subscribe(() => {\n      this.datasetStore.datasetUpdated();\n    });\n  }\n\n  createNfsShare(): void {\n    const slideInRef = this.slideInService.open(NfsFormComponent, {\n      data: { defaultNfsShare: { path: this.dataset().mountpoint } },\n    });\n    slideInRef.slideInClosed$.pipe(filter(Boolean), untilDestroyed(this)).subscribe(() => {\n      this.datasetStore.datasetUpdated();\n    });\n  }\n}\n"],"version":3}