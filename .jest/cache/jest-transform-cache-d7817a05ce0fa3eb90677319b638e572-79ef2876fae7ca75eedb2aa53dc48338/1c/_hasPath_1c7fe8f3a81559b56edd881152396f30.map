{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_hasPath.js","mappings":";;;;;AAAA,kEAAsC;AACtC,sEAA2C;AAC3C,8DAAmC;AACnC,gEAAoC;AACpC,gEAAqC;AACrC,4DAAgC;AAEhC;;;;;;;;GAQG;AACH,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO;IACpC,IAAI,GAAG,IAAA,sBAAQ,EAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAE9B,IAAI,KAAK,GAAG,CAAC,CAAC,EACV,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,MAAM,GAAG,KAAK,CAAC;IAEnB,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC;QACxB,IAAI,GAAG,GAAG,IAAA,mBAAK,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;YACvD,MAAM;QACR,CAAC;QACD,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IACD,IAAI,MAAM,IAAI,EAAE,KAAK,IAAI,MAAM,EAAE,CAAC;QAChC,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5C,OAAO,CAAC,CAAC,MAAM,IAAI,IAAA,qBAAQ,EAAC,MAAM,CAAC,IAAI,IAAA,qBAAO,EAAC,GAAG,EAAE,MAAM,CAAC;QACzD,CAAC,IAAA,oBAAO,EAAC,MAAM,CAAC,IAAI,IAAA,wBAAW,EAAC,MAAM,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_hasPath.js"],"sourcesContent":["import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n"],"version":3}