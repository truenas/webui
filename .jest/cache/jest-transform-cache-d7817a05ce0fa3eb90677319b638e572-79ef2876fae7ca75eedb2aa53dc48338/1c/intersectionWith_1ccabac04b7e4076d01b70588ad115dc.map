{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/intersectionWith.js","mappings":";;;;;AAAA,kEAAsC;AACtC,kFAAsD;AACtD,kEAAsC;AACtC,wFAA4D;AAC5D,wDAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,IAAI,gBAAgB,GAAG,IAAA,sBAAQ,EAAC,UAAS,MAAM;IAC7C,IAAI,UAAU,GAAG,IAAA,iBAAI,EAAC,MAAM,CAAC,EACzB,MAAM,GAAG,IAAA,sBAAQ,EAAC,MAAM,EAAE,iCAAmB,CAAC,CAAC;IAEnD,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;IACtE,IAAI,UAAU,EAAE,CAAC;QACf,MAAM,CAAC,GAAG,EAAE,CAAC;IACf,CAAC;IACD,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,IAAA,8BAAgB,EAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC;QACjD,CAAC,CAAC,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,kBAAe,gBAAgB,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/intersectionWith.js"],"sourcesContent":["import arrayMap from './_arrayMap.js';\nimport baseIntersection from './_baseIntersection.js';\nimport baseRest from './_baseRest.js';\nimport castArrayLikeObject from './_castArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nexport default intersectionWith;\n"],"version":3}