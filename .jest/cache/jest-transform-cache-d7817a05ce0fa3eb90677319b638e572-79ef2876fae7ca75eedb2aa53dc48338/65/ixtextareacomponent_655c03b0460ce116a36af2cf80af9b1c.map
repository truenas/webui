{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-textarea/ix-textarea.component.ts","mappings":";;;;;;;;;AAAA,wCAEuB;AACvB,0CAA8E;AAC9E,6DAAuD;AACvD,mDAAmD;AACnD,yDAAqD;AACrD,6GAAwG;AACxG,0GAAqG;AACrG,uGAAkG;AAClG,uEAAmE;AAmB5D,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IAe9B,YACS,gBAA2B,EAC1B,GAAsB;QADvB,qBAAgB,GAAhB,gBAAgB,CAAW;QAC1B,QAAG,GAAH,GAAG,CAAmB;QAXvB,SAAI,GAAG,CAAC;QAGjB,UAAK,GAAG,EAAE,CAAC;QACX,eAAU,GAAG,KAAK,CAAC;QAEnB,aAAQ,GAA4B,GAAS,EAAE,GAAE,CAAC,CAAC;QACnD,YAAO,GAAe,GAAS,EAAE,GAAE,CAAC,CAAC;QAMnC,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,QAAiC;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,iBAAiB,CAAC,SAAqB;QACrC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED,gBAAgB,CAAE,UAAmB;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;;AA3CU,kDAAmB;;;;;;oBAC7B,YAAK;0BACL,YAAK;mBACL,YAAK;sBACL,YAAK;uBACL,YAAK;mBACL,YAAK;uBACL,YAAK;;8BAPK,mBAAmB;IAjB/B,IAAA,4BAAY,GAAE;IACd,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iDAA2C;QAE3C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,qCAAgB;YAChB,gBAAQ;YACR,mBAAW;YACX,uCAAiB;YACjB,oBAAO;YACP,8BAAa;YACb,+CAAqB;SACtB;KACF,CAAC;GACW,mBAAmB,CA4C/B","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-textarea/ix-textarea.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl, FormsModule } from '@angular/forms';\nimport { MatHint } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { IxErrorsComponent } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\nimport { IxLabelComponent } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.component';\nimport { TestOverrideDirective } from 'app/modules/test-id/test-override/test-override.directive';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-textarea',\n  templateUrl: './ix-textarea.component.html',\n  styleUrls: ['./ix-textarea.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxLabelComponent,\n    MatInput,\n    FormsModule,\n    IxErrorsComponent,\n    MatHint,\n    TestDirective,\n    TestOverrideDirective,\n  ],\n})\nexport class IxTextareaComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() hint: string;\n  @Input() tooltip: string;\n  @Input() required: boolean;\n  @Input() rows = 4;\n  @Input() readonly: boolean;\n\n  value = '';\n  isDisabled = false;\n\n  onChange: (value: string) => void = (): void => {};\n  onTouch: () => void = (): void => {};\n\n  constructor(\n    public controlDirective: NgControl,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(onChange: (value: string) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouch = onTouched;\n  }\n\n  resetInput(): void {\n    this.value = '';\n    this.onChange('');\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n"],"version":3}