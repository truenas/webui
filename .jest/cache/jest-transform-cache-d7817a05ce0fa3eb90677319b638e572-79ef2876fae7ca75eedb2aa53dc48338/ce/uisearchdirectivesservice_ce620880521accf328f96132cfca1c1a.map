{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/global-search/services/ui-search-directives.service.ts","mappings":";;;;;;;;;AAAA,wCAA2C;AAC3C,+BAAuC;AAEvC,2GAAqG;AAM9F,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;IAA/B;QACG,eAAU,GAAG,IAAI,GAAG,EAAqB,CAAC;QAElD,oBAAe,GAAG,IAAI,sBAAe,CAAoB,IAAI,CAAC,CAAC;IAgCjE,CAAC;IA9BC,IAAI,yBAAyB;QAC3B,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACtC,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,GAAG,CAAC,OAA4B;QAC9B,MAAM,SAAS,GAAG,IAAA,kDAAsB,EAAC,OAAO,CAAC,CAAC;QAClD,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC;YACjD,IAAI,SAAS,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;gBAC/B,OAAO,SAAS,CAAC;YACnB,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,4BAA4B,CAAC,OAA4B;QACvD,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC;IACzC,CAAC;IAED,QAAQ,CAAC,SAA4B;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,UAAU,CAAC,SAA4B;QACrC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;CACF,CAAA;AAnCY,8DAAyB;oCAAzB,yBAAyB;IAHrC,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,yBAAyB,CAmCrC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/global-search/services/ui-search-directives.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UiSearchDirective } from 'app/directives/ui-search.directive';\nimport { getSearchableElementId } from 'app/modules/global-search/helpers/get-searchable-element-id';\nimport { UiSearchableElement } from 'app/modules/global-search/interfaces/ui-searchable-element.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiSearchDirectivesService {\n  private directives = new Set<UiSearchDirective>();\n  protected pendingHighlightElement: UiSearchableElement;\n  directiveAdded$ = new BehaviorSubject<UiSearchDirective>(null);\n\n  get pendingUiHighlightElement(): UiSearchableElement {\n    return this.pendingHighlightElement;\n  }\n\n  size(): number {\n    return this.directives.size;\n  }\n\n  get(element: UiSearchableElement): UiSearchDirective {\n    const elementId = getSearchableElementId(element);\n    for (const directive of this.directives.values()) {\n      if (directive.id === elementId) {\n        return directive;\n      }\n    }\n    return null;\n  }\n\n  setPendingUiHighlightElement(element: UiSearchableElement): void {\n    this.pendingHighlightElement = element;\n  }\n\n  register(directive: UiSearchDirective): void {\n    this.directives.add(directive);\n    this.directiveAdded$.next(directive);\n  }\n\n  unregister(directive: UiSearchDirective): void {\n    this.directives.delete(directive);\n  }\n}\n"],"version":3}