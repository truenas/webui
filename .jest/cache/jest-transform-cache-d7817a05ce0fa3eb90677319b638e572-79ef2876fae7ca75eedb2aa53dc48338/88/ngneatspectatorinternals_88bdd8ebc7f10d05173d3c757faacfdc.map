{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@ngneat/spectator/fesm2022/ngneat-spectator-internals.mjs"],
  "sourcesContent": ["// This is a public API surface of @ngneat/spectator/internals. It's not intended to be used\n// by consumers. Please, don't import anything from this entry-point.\n// This is done to prevent tests, that are being run in a `fakeAsync` zone, from failing randomly.\n// jQuery setups a timer internally if the `document.readyState` is `complete` by doing\n// `window.setTimeout(jQuery.ready)` (see its source code). Unit tests might fail randomly that\n// there're still timers in the queue, but the timer has been scheduled by jQuery, so we don't\n// want to allow that to happen.\nconst patchedSetTimeout = window.setTimeout;\n// The unpatched `setTimeout` can be retrieved through this property.\n// We might have used `Zone.__symbol__('OriginalDelegate')`, which would also give us\n// the current string, but accessing `Zone` requires messing up with types (like declaring it\n// globally through `declare const Zone`). This is the safest way of doing that.\n// This is done before importing jQuery since it will use the unpatched timer\n// when its code is executed, which will not be captured by zone.js.\nwindow.setTimeout = patchedSetTimeout['__zone_symbol__OriginalDelegate'] || patchedSetTimeout;\nfunction restoreSetTimeout() {\n    window.setTimeout = patchedSetTimeout;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { restoreSetTimeout };\n//# sourceMappingURL=ngneat-spectator-internals.mjs.map\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,MAAM,oBAAoB,OAAO;AAOjC,OAAO,aAAa,kBAAkB,iCAAiC,KAAK;AAC5E,SAAS,oBAAoB;AACzB,SAAO,aAAa;AACxB;",
  "names": []
}
