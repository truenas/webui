{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/validators/ip-validation.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/validators/ip-validation.ts"],"sourcesContent":["import { FormControl, ValidatorFn } from '@angular/forms';\nimport ipRegex from 'ip-regex';\nimport isCidr from 'is-cidr';\nimport { indexOf } from 'lodash-es';\n\n// Accepts ipv4 or ipv6 addresses with no CIDR (ie, /24)\nexport function ipv4or6Validator(): ValidatorFn {\n  let thisControl: FormControl<string>;\n\n  return function ipValidate(control: FormControl<string>) {\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n    }\n\n    if (thisControl.value === '' || thisControl.value === undefined) {\n      return null;\n    }\n\n    if (!ipRegex({ exact: true, includeBoundaries: true }).test(thisControl.value)) {\n      return { ip2: true };\n    }\n\n    return null;\n  };\n}\n\n// Accepts ipv4 or ipv6 addresses with a CIDR (ie, /24)\nexport function ipv4or6cidrValidator(): ValidatorFn {\n  let thisControl: FormControl<string>;\n\n  return function ipValidate(control: FormControl<string>) {\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n    }\n    if (thisControl.value === '' || thisControl.value === undefined) {\n      return null;\n    }\n\n    if (!isCidr.v4(thisControl.value) && !isCidr.v6(thisControl.value)) {\n      return { ip2: true };\n    }\n\n    return null;\n  };\n}\n\n// Accepts ipv4 or ipv6 addresses with an OPTIONAL CIDR (ie, /24)\nexport function ipv4or6OptionalCidrValidator(): ValidatorFn {\n  let thisControl: FormControl<string>;\n\n  return function ipValidate(control: FormControl<string>) {\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n    }\n    if (thisControl.value === '' || thisControl.value === undefined) {\n      return null;\n    }\n\n    if (!isCidr.v4(thisControl.value) && !isCidr.v6(thisControl.value)\n          && !ipRegex({ exact: true, includeBoundaries: true }).test(thisControl.value)) {\n      return { ip2: true };\n    }\n\n    return null;\n  };\n}\n\n// Accepts ipv4 addresses with no CIDR (ie, /24)\nexport function ipv4Validator(): ValidatorFn {\n  let thisControl: FormControl<string>;\n\n  return function ipValidate(control: FormControl<string>) {\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n    }\n\n    if (thisControl.value === '' || thisControl.value === undefined) {\n      return null;\n    }\n\n    if (!ipRegex.v4({ exact: true }).test(thisControl.value)) {\n      return { ip2: true };\n    }\n\n    return null;\n  };\n}\n\n// Accepts ipv6 addresses with no CIDR (ie, /24)\nexport function ipv6Validator(): ValidatorFn {\n  let thisControl: FormControl<string>;\n\n  return function ipValidate(control: FormControl<string>) {\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n    }\n    if (thisControl.value === '' || thisControl.value === undefined) {\n      return null;\n    }\n\n    if (!ipRegex.v6({ exact: true }).test(thisControl.value)) {\n      return { ip2: true };\n    }\n\n    return null;\n  };\n}\n\n// Used only on sharing/iscsi/portal/portal-form\n// TODO: Check what difference with ipv4or6Validator\nexport function ipValidator(type: string = 'ipv4' || 'ipv6' || 'all'): ValidatorFn {\n  const ipv4Regex = ipRegex.v4();\n  const ipv6Regex = ipRegex.v6();\n  let thisControl: FormControl<string>;\n\n  return function isValidIp(control: FormControl<string>) {\n    let error = null;\n\n    if (!control.parent) {\n      return null;\n    }\n\n    thisControl = control;\n\n    if (thisControl.value === '' || thisControl.value === undefined) {\n      return null;\n    }\n\n    function checkIp(ipType = 'ipv4' || 'ipv6'): boolean {\n      const regex = ipType === 'ipv4' ? ipv4Regex : ipv6Regex;\n      const wildcard = ipType === 'ipv4' ? '0.0.0.0' : '::';\n      if (indexOf(thisControl.value, wildcard) !== -1) {\n        for (const ip of thisControl.value) {\n          if (ip !== wildcard && regex.test(ip)) {\n            error = [ipType === 'ipv4' ? 'IPv4' : 'IPv6', wildcard, ip];\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    if (thisControl.value.length > 1) {\n      if (type === 'all') {\n        if (!checkIp('ipv4') || !checkIp('ipv6')) {\n          return { ip: true, info: error };\n        }\n      } else if (!checkIp(type)) {\n        return { ip: true, info: error };\n      }\n    }\n\n    return null;\n  };\n}\n"],"version":3}