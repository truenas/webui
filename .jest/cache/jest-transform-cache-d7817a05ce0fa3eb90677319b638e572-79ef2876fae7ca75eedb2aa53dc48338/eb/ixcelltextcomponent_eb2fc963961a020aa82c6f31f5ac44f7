507b890d1280b9825d24d5195a9969ef
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IxCellTextComponent = void 0;
exports.textColumn = textColumn;
const core_1 = require("@angular/core");
const tooltip_1 = require("@angular/material/tooltip");
const core_2 = require("@ngx-translate/core");
const column_component_class_1 = require("app/modules/ix-table/interfaces/column-component.class");
const test_directive_1 = require("app/modules/test-id/test.directive");
let IxCellTextComponent = class IxCellTextComponent extends column_component_class_1.ColumnComponent {
};
exports.IxCellTextComponent = IxCellTextComponent;
exports.IxCellTextComponent = IxCellTextComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-cell-text',
        template: require("./ix-cell-text.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
        standalone: true,
        imports: [
            tooltip_1.MatTooltip,
            core_2.TranslateModule,
            test_directive_1.TestDirective,
        ],
    })
], IxCellTextComponent);
function textColumn(options) {
    return Object.assign({ type: IxCellTextComponent }, options);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvY29tcG9uZW50cy9peC10YWJsZS1ib2R5L2NlbGxzL2l4LWNlbGwtdGV4dC9peC1jZWxsLXRleHQuY29tcG9uZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQXFCQSxnQ0FFQztBQXZCRCx3Q0FFdUI7QUFDdkIsdURBQXVEO0FBQ3ZELDhDQUFzRDtBQUN0RCxtR0FBaUc7QUFDakcsdUVBQW1FO0FBYTVELElBQU0sbUJBQW1CLEdBQXpCLE1BQU0sbUJBQXVCLFNBQVEsd0NBQWtCO0NBQUcsQ0FBQTtBQUFwRCxrREFBbUI7OEJBQW5CLG1CQUFtQjtJQVgvQixJQUFBLGdCQUFTLEVBQUM7UUFDVCxRQUFRLEVBQUUsY0FBYztRQUN4QixrREFBNEM7UUFDNUMsZUFBZSxFQUFFLDhCQUF1QixDQUFDLE1BQU07UUFDL0MsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFO1lBQ1Asb0JBQVU7WUFDVixzQkFBZTtZQUNmLDhCQUFhO1NBQ2Q7S0FDRixDQUFDO0dBQ1csbUJBQW1CLENBQWlDO0FBRWpFLFNBQWdCLFVBQVUsQ0FBSSxPQUF3QztJQUNwRSx1QkFBUyxJQUFJLEVBQUUsbUJBQW1CLElBQUssT0FBTyxFQUFHO0FBQ25ELENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvaXgtdGFibGUvY29tcG9uZW50cy9peC10YWJsZS1ib2R5L2NlbGxzL2l4LWNlbGwtdGV4dC9peC1jZWxsLXRleHQuY29tcG9uZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0VG9vbHRpcCB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3Rvb2x0aXAnO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBDb2x1bW4sIENvbHVtbkNvbXBvbmVudCB9IGZyb20gJ2FwcC9tb2R1bGVzL2l4LXRhYmxlL2ludGVyZmFjZXMvY29sdW1uLWNvbXBvbmVudC5jbGFzcyc7XG5pbXBvcnQgeyBUZXN0RGlyZWN0aXZlIH0gZnJvbSAnYXBwL21vZHVsZXMvdGVzdC1pZC90ZXN0LmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2l4LWNlbGwtdGV4dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9peC1jZWxsLXRleHQuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE1hdFRvb2x0aXAsXG4gICAgVHJhbnNsYXRlTW9kdWxlLFxuICAgIFRlc3REaXJlY3RpdmUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEl4Q2VsbFRleHRDb21wb25lbnQ8VD4gZXh0ZW5kcyBDb2x1bW5Db21wb25lbnQ8VD4ge31cblxuZXhwb3J0IGZ1bmN0aW9uIHRleHRDb2x1bW48VD4ob3B0aW9uczogUGFydGlhbDxJeENlbGxUZXh0Q29tcG9uZW50PFQ+Pik6IENvbHVtbjxULCBJeENlbGxUZXh0Q29tcG9uZW50PFQ+PiB7XG4gIHJldHVybiB7IHR5cGU6IEl4Q2VsbFRleHRDb21wb25lbnQsIC4uLm9wdGlvbnMgfTtcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==