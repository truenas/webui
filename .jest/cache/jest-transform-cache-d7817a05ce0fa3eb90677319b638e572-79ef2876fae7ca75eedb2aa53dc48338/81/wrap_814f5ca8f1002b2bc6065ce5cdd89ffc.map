{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/wrap.js","mappings":";;;;;AAAA,0EAA8C;AAC9C,8DAAmC;AAEnC;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,SAAS,IAAI,CAAC,KAAK,EAAE,OAAO;IAC1B,OAAO,IAAA,oBAAO,EAAC,IAAA,0BAAY,EAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/C,CAAC;AAED,kBAAe,IAAI,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/wrap.js"],"sourcesContent":["import castFunction from './_castFunction.js';\nimport partial from './partial.js';\n\n/**\n * Creates a function that provides `value` to `wrapper` as its first\n * argument. Any additional arguments provided to the function are appended\n * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n * binding of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {*} value The value to wrap.\n * @param {Function} [wrapper=identity] The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('fred, barney, & pebbles');\n * // => '<p>fred, barney, &amp; pebbles</p>'\n */\nfunction wrap(value, wrapper) {\n  return partial(castFunction(wrapper), value);\n}\n\nexport default wrap;\n"],"version":3}