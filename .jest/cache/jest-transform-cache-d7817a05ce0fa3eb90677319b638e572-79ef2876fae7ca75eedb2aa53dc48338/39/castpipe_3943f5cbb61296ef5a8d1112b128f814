a02698c7e029895386e4c93218b3ac6e
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CastPipe = void 0;
const core_1 = require("@angular/core");
let CastPipe = class CastPipe {
    /**
     * @usage
     * Use this to cast types in templates similarly to as.
     * Picks up type automatically:
     * [formControl]="abstractControl | cast"
     */
    transform(value) {
        return value;
    }
};
exports.CastPipe = CastPipe;
exports.CastPipe = CastPipe = __decorate([
    (0, core_1.Pipe)({
        name: 'cast',
        standalone: true,
    })
], CastPipe);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvcGlwZXMvY2FzdC9jYXN0LnBpcGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsd0NBQW9EO0FBTTdDLElBQU0sUUFBUSxHQUFkLE1BQU0sUUFBUTtJQUNuQjs7Ozs7T0FLRztJQUNILFNBQVMsQ0FBaUIsS0FBUTtRQUNoQyxPQUFPLEtBQVUsQ0FBQztJQUNwQixDQUFDO0NBQ0YsQ0FBQTtBQVZZLDRCQUFRO21CQUFSLFFBQVE7SUFKcEIsSUFBQSxXQUFJLEVBQUM7UUFDSixJQUFJLEVBQUUsTUFBTTtRQUNaLFVBQVUsRUFBRSxJQUFJO0tBQ2pCLENBQUM7R0FDVyxRQUFRLENBVXBCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9tb2R1bGVzL3BpcGVzL2Nhc3QvY2FzdC5waXBlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICBuYW1lOiAnY2FzdCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIENhc3RQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIC8qKlxuICAgKiBAdXNhZ2VcbiAgICogVXNlIHRoaXMgdG8gY2FzdCB0eXBlcyBpbiB0ZW1wbGF0ZXMgc2ltaWxhcmx5IHRvIGFzLlxuICAgKiBQaWNrcyB1cCB0eXBlIGF1dG9tYXRpY2FsbHk6XG4gICAqIFtmb3JtQ29udHJvbF09XCJhYnN0cmFjdENvbnRyb2wgfCBjYXN0XCJcbiAgICovXG4gIHRyYW5zZm9ybTxTLCBUIGV4dGVuZHMgUz4odmFsdWU6IFMpOiBUIHtcbiAgICByZXR1cm4gdmFsdWUgYXMgVDtcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9