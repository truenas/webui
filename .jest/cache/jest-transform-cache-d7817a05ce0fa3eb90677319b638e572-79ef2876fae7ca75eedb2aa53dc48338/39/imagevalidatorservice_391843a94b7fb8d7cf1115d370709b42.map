{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/validators/image-validator/image-validator.service.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/validators/image-validator/image-validator.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, ValidationErrors } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  catchError,\n  concatMap,\n  from,\n  map, Observable, Observer, of, take, toArray,\n} from 'rxjs';\nimport { MiB } from 'app/constants/bytes.constant';\nimport { ValidatedFile } from 'app/interfaces/validated-file.interface';\nimport { ixManualValidateError } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageValidatorService {\n  constructor(\n    private translate: TranslateService,\n  ) { }\n\n  getImagesValidator(fileSizeLimitBytes: number): AsyncValidatorFn {\n    return (control: FormControl<File[]>): Observable<ValidationErrors> | null => {\n      return this.validateImages(control.value, fileSizeLimitBytes).pipe(\n        map((validatedFiles) => {\n          const invalidFiles = validatedFiles\n            .filter((file) => file.error)\n            .map((file) => file.error);\n\n          if (!invalidFiles.length) {\n            return null;\n          }\n\n          const message = invalidFiles.map((error) => `${error.name} â€“ ${error.errorMessage}`).join('\\n');\n          return { [ixManualValidateError]: { message } };\n        }),\n      );\n    };\n  }\n\n  private validateImages(screenshots: File[], sizeLimitBytes: number): Observable<ValidatedFile[]> {\n    return from(screenshots).pipe(\n      take(screenshots.length),\n      concatMap((file: File): Observable<ValidatedFile> => {\n        return this.validateImage(file, sizeLimitBytes).pipe(\n          catchError((error: ValidatedFile) => of(error)),\n        );\n      }),\n      toArray(),\n    );\n  }\n\n  private validateImage(file: File, sizeLimitBytes: number): Observable<ValidatedFile> {\n    const fileReader = new FileReader();\n    const { type, name, size } = file;\n    return new Observable((observer: Observer<ValidatedFile>) => {\n      if (\n        sizeLimitBytes != null\n        && !Number.isNaN(sizeLimitBytes)\n        && size > sizeLimitBytes\n      ) {\n        observer.error({\n          error: {\n            name,\n            errorMessage: this.translate.instant('File size is limited to {n} MiB.', { n: sizeLimitBytes / MiB }),\n          },\n        });\n      }\n\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        if (type.startsWith('image/')) {\n          const image = new Image();\n          image.onload = () => {\n            observer.next({ file });\n            observer.complete();\n          };\n          image.onerror = () => {\n            observer.error({ error: { name, errorMessage: this.translate.instant('Invalid image') } });\n          };\n          image.src = fileReader.result as string;\n        } else {\n          observer.next({ file });\n          observer.complete();\n        }\n      };\n      fileReader.onerror = () => {\n        observer.error({ error: { name, errorMessage: this.translate.instant('Invalid file') } });\n      };\n    });\n  }\n}\n"],"version":3}