{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_baseXor.js","mappings":";;;;;AAAA,8EAAkD;AAClD,wEAA4C;AAC5C,kEAAsC;AAEtC;;;;;;;;;GASG;AACH,SAAS,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU;IAC3C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC3B,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,CAAC,CAAC,IAAA,sBAAQ,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3C,CAAC;IACD,IAAI,KAAK,GAAG,CAAC,CAAC,EACV,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAE3B,OAAO,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC;QACxB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,EACrB,QAAQ,GAAG,CAAC,CAAC,CAAC;QAElB,OAAO,EAAE,QAAQ,GAAG,MAAM,EAAE,CAAC;YAC3B,IAAI,QAAQ,IAAI,KAAK,EAAE,CAAC;gBACtB,MAAM,CAAC,KAAK,CAAC,GAAG,IAAA,4BAAc,EAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;YACjG,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,IAAA,sBAAQ,EAAC,IAAA,yBAAW,EAAC,MAAM,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AAChE,CAAC;AAED,kBAAe,OAAO,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_baseXor.js"],"sourcesContent":["import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n      result = Array(length);\n\n  while (++index < length) {\n    var array = arrays[index],\n        othIndex = -1;\n\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\n\nexport default baseXor;\n"],"version":3}