{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/xorBy.js","mappings":";;;;;AAAA,wEAA4C;AAC5C,0EAA8C;AAC9C,kEAAsC;AACtC,gEAAoC;AACpC,kFAAuD;AACvD,wDAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,IAAI,KAAK,GAAG,IAAA,sBAAQ,EAAC,UAAS,MAAM;IAClC,IAAI,QAAQ,GAAG,IAAA,iBAAI,EAAC,MAAM,CAAC,CAAC;IAC5B,IAAI,IAAA,8BAAiB,EAAC,QAAQ,CAAC,EAAE,CAAC;QAChC,QAAQ,GAAG,SAAS,CAAC;IACvB,CAAC;IACD,OAAO,IAAA,qBAAO,EAAC,IAAA,yBAAW,EAAC,MAAM,EAAE,8BAAiB,CAAC,EAAE,IAAA,0BAAY,EAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC;AAEH,kBAAe,KAAK,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/xorBy.js"],"sourcesContent":["import arrayFilter from './_arrayFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseXor from './_baseXor.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The order of result values is determined\n * by the order they occur in the arrays. The iteratee is invoked with one\n * argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2, 3.4]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar xorBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee, 2));\n});\n\nexport default xorBy;\n"],"version":3}