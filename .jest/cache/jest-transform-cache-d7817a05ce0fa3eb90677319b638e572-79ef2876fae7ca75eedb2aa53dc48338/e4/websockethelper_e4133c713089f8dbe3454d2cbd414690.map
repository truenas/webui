{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/helpers/websocket.helper.ts","mappings":";;;AAaA,4CAQC;AArBD,wCAA+C;AAC/C,8CAA4D;AAG5D,gEAAgE;AACnD,QAAA,SAAS,GAAG,IAAI,qBAAc,CACzC,WAAW,EACX;IACE,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,GAAG,EAAE,CAAC,qBAAa;CAC7B,CACF,CAAC;AAEF,SAAgB,gBAAgB,CAAC,KAAc;IAC7C,IAAI,KAAK,KAAK,IAAI;QAAE,OAAO,KAAK,CAAC;IAEjC,OAAO,OAAO,KAAK,KAAK,QAAQ;WAC3B,OAAO,IAAI,KAAK;WAChB,OAAO,IAAI,KAAK;WAChB,QAAQ,IAAI,KAAK;WACjB,OAAO,IAAI,KAAK,CAAC;AACxB,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/helpers/websocket.helper.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { webSocket as rxjsWebSocket } from 'rxjs/webSocket';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const WEBSOCKET = new InjectionToken<typeof rxjsWebSocket>(\n  'WebSocket',\n  {\n    providedIn: 'root',\n    factory: () => rxjsWebSocket,\n  },\n);\n\nexport function isWebSocketError(error: unknown): error is WebSocketError {\n  if (error === null) return false;\n\n  return typeof error === 'object'\n    && 'error' in error\n    && 'extra' in error\n    && 'reason' in error\n    && 'trace' in error;\n}\n"],"version":3}