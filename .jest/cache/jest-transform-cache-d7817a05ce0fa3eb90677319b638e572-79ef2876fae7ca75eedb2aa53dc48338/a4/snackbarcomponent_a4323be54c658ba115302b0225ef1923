bd52e7d4246c9a7da56c2849cc6d345a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnackbarComponent = void 0;
const core_1 = require("@angular/core");
const snack_bar_1 = require("@angular/material/snack-bar");
const snackbar_config_interface_1 = require("app/modules/snackbar/components/snackbar/snackbar-config.interface");
let SnackbarComponent = class SnackbarComponent {
    constructor(config) {
        this.config = config;
    }
    get iconColor() {
        return this.config.iconCssColor || 'var(--primary)';
    }
};
exports.SnackbarComponent = SnackbarComponent;
SnackbarComponent.ctorParameters = () => [
    { type: snackbar_config_interface_1.SnackbarConfig, decorators: [{ type: core_1.Inject, args: [snack_bar_1.MAT_SNACK_BAR_DATA,] }] }
];
exports.SnackbarComponent = SnackbarComponent = __decorate([
    (0, core_1.Component)({
        selector: 'ix-snackbar',
        template: require("./snackbar.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
    })
], SnackbarComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL21vZHVsZXMvc25hY2tiYXIvY29tcG9uZW50cy9zbmFja2Jhci9zbmFja2Jhci5jb21wb25lbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsd0NBQTJFO0FBQzNFLDJEQUFpRTtBQUNqRSxrSEFBb0c7QUFRN0YsSUFBTSxpQkFBaUIsR0FBdkIsTUFBTSxpQkFBaUI7SUFDNUIsWUFDcUMsTUFBc0I7UUFBdEIsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7SUFDeEQsQ0FBQztJQUVKLElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLElBQUksZ0JBQWdCLENBQUM7SUFDdEQsQ0FBQzs7QUFQVSw4Q0FBaUI7OzZFQUV6QixhQUFNLFNBQUMsOEJBQWtCOzs0QkFGakIsaUJBQWlCO0lBTjdCLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSxhQUFhO1FBQ3ZCLDhDQUF3QztRQUV4QyxlQUFlLEVBQUUsOEJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO0dBQ1csaUJBQWlCLENBUTdCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9tb2R1bGVzL3NuYWNrYmFyL2NvbXBvbmVudHMvc25hY2tiYXIvc25hY2tiYXIuY29tcG9uZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTUFUX1NOQUNLX0JBUl9EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc25hY2stYmFyJztcbmltcG9ydCB7IFNuYWNrYmFyQ29uZmlnIH0gZnJvbSAnYXBwL21vZHVsZXMvc25hY2tiYXIvY29tcG9uZW50cy9zbmFja2Jhci9zbmFja2Jhci1jb25maWcuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaXgtc25hY2tiYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vc25hY2tiYXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9zbmFja2Jhci5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgU25hY2tiYXJDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE1BVF9TTkFDS19CQVJfREFUQSkgcHVibGljIGNvbmZpZzogU25hY2tiYXJDb25maWcsXG4gICkge31cblxuICBnZXQgaWNvbkNvbG9yKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLmljb25Dc3NDb2xvciB8fCAndmFyKC0tcHJpbWFyeSknO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=