bfdbf37224bea458078b206ad73791ec
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enclosureElementTypeLabels = exports.EnclosureElementType = exports.enclosureDiskStatusLabels = exports.EnclosureDiskStatus = exports.EnclosureStatus = exports.DriveBayLightStatus = exports.EnclosureSlotStatus = void 0;
const ngx_translate_extract_marker_1 = require("@biesbjerg/ngx-translate-extract-marker");
/**
 * @deprecated
 */
var EnclosureSlotStatus;
(function (EnclosureSlotStatus) {
    EnclosureSlotStatus["Clear"] = "CLEAR";
    EnclosureSlotStatus["Fault"] = "FAULT";
    EnclosureSlotStatus["Identify"] = "IDENTIFY";
})(EnclosureSlotStatus || (exports.EnclosureSlotStatus = EnclosureSlotStatus = {}));
var DriveBayLightStatus;
(function (DriveBayLightStatus) {
    DriveBayLightStatus["On"] = "ON";
    DriveBayLightStatus["Off"] = "OFF";
    DriveBayLightStatus["Clear"] = "CLEAR";
})(DriveBayLightStatus || (exports.DriveBayLightStatus = DriveBayLightStatus = {}));
var EnclosureStatus;
(function (EnclosureStatus) {
    EnclosureStatus["Ok"] = "OK";
    EnclosureStatus["Invop"] = "INVOP";
    EnclosureStatus["Info"] = "INFO";
    EnclosureStatus["NonCrit"] = "NON-CRIT";
    EnclosureStatus["Crit"] = "CRIT";
    EnclosureStatus["Unrecov"] = "UNRECOV";
})(EnclosureStatus || (exports.EnclosureStatus = EnclosureStatus = {}));
var EnclosureDiskStatus;
(function (EnclosureDiskStatus) {
    EnclosureDiskStatus["Offline"] = "OFFLINE";
    EnclosureDiskStatus["Removed"] = "REMOVED";
    EnclosureDiskStatus["Faulted"] = "FAULTED";
    EnclosureDiskStatus["Split"] = "SPLIT";
    EnclosureDiskStatus["Unavail"] = "UNAVAIL";
    EnclosureDiskStatus["Degraded"] = "DEGRADED";
    EnclosureDiskStatus["Online"] = "ONLINE";
    EnclosureDiskStatus["Unknown"] = "UNKNOWN";
})(EnclosureDiskStatus || (exports.EnclosureDiskStatus = EnclosureDiskStatus = {}));
exports.enclosureDiskStatusLabels = new Map([
    [EnclosureDiskStatus.Offline, (0, ngx_translate_extract_marker_1.marker)('Offline')],
    [EnclosureDiskStatus.Removed, (0, ngx_translate_extract_marker_1.marker)('Removed')],
    [EnclosureDiskStatus.Faulted, (0, ngx_translate_extract_marker_1.marker)('Faulted')],
    [EnclosureDiskStatus.Split, (0, ngx_translate_extract_marker_1.marker)('Split')],
    [EnclosureDiskStatus.Unavail, (0, ngx_translate_extract_marker_1.marker)('Unavailable')],
    [EnclosureDiskStatus.Degraded, (0, ngx_translate_extract_marker_1.marker)('Degraded')],
    [EnclosureDiskStatus.Online, (0, ngx_translate_extract_marker_1.marker)('Online')],
    [EnclosureDiskStatus.Unknown, (0, ngx_translate_extract_marker_1.marker)('Unknown')],
]);
// TODO: Find out what all element name possibilities are to complete the enum
var EnclosureElementType;
(function (EnclosureElementType) {
    EnclosureElementType["ArrayDeviceSlot"] = "Array Device Slot";
    EnclosureElementType["Enclosure"] = "Enclosure";
    EnclosureElementType["PowerSupply"] = "Power Supply";
    EnclosureElementType["Cooling"] = "Cooling";
    EnclosureElementType["TemperatureSensors"] = "Temperature Sensors";
    EnclosureElementType["EnclosureServicesControllerElectronics"] = "Enclosure Services Controller Electronics";
    EnclosureElementType["SasExpander"] = "SAS Expander";
    EnclosureElementType["SasConnector"] = "SAS Connector";
    EnclosureElementType["VoltageSensor"] = "Voltage Sensor";
    EnclosureElementType["CurrentSensor"] = "Current Sensor";
    EnclosureElementType["DoorLock"] = "Door Lock";
})(EnclosureElementType || (exports.EnclosureElementType = EnclosureElementType = {}));
exports.enclosureElementTypeLabels = new Map([
    [EnclosureElementType.ArrayDeviceSlot, (0, ngx_translate_extract_marker_1.marker)('Disks')],
    [EnclosureElementType.Enclosure, (0, ngx_translate_extract_marker_1.marker)('Enclosure')],
    [EnclosureElementType.PowerSupply, (0, ngx_translate_extract_marker_1.marker)('Power Supply')],
    [EnclosureElementType.Cooling, (0, ngx_translate_extract_marker_1.marker)('Cooling')],
    [EnclosureElementType.TemperatureSensors, (0, ngx_translate_extract_marker_1.marker)('Temperature Sensors')],
    [EnclosureElementType.EnclosureServicesControllerElectronics, (0, ngx_translate_extract_marker_1.marker)('Enclosure Services Controller Electronics')],
    [EnclosureElementType.SasExpander, (0, ngx_translate_extract_marker_1.marker)('SAS Expander')],
    [EnclosureElementType.SasConnector, (0, ngx_translate_extract_marker_1.marker)('SAS Connector')],
    [EnclosureElementType.VoltageSensor, (0, ngx_translate_extract_marker_1.marker)('Voltage')],
    [EnclosureElementType.CurrentSensor, (0, ngx_translate_extract_marker_1.marker)('Current Sensor')],
    [EnclosureElementType.DoorLock, (0, ngx_translate_extract_marker_1.marker)('Door Lock')],
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL2VudW1zL2VuY2xvc3VyZS1zbG90LXN0YXR1cy5lbnVtLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLDBGQUFzRTtBQUV0RTs7R0FFRztBQUNILElBQVksbUJBSVg7QUFKRCxXQUFZLG1CQUFtQjtJQUM3QixzQ0FBZSxDQUFBO0lBQ2Ysc0NBQWUsQ0FBQTtJQUNmLDRDQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFKVyxtQkFBbUIsbUNBQW5CLG1CQUFtQixRQUk5QjtBQUVELElBQVksbUJBSVg7QUFKRCxXQUFZLG1CQUFtQjtJQUM3QixnQ0FBUyxDQUFBO0lBQ1Qsa0NBQVcsQ0FBQTtJQUNYLHNDQUFlLENBQUE7QUFDakIsQ0FBQyxFQUpXLG1CQUFtQixtQ0FBbkIsbUJBQW1CLFFBSTlCO0FBRUQsSUFBWSxlQU9YO0FBUEQsV0FBWSxlQUFlO0lBQ3pCLDRCQUFTLENBQUE7SUFDVCxrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtJQUNiLHVDQUFvQixDQUFBO0lBQ3BCLGdDQUFhLENBQUE7SUFDYixzQ0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBUFcsZUFBZSwrQkFBZixlQUFlLFFBTzFCO0FBRUQsSUFBWSxtQkFTWDtBQVRELFdBQVksbUJBQW1CO0lBQzdCLDBDQUFtQixDQUFBO0lBQ25CLDBDQUFtQixDQUFBO0lBQ25CLDBDQUFtQixDQUFBO0lBQ25CLHNDQUFlLENBQUE7SUFDZiwwQ0FBbUIsQ0FBQTtJQUNuQiw0Q0FBcUIsQ0FBQTtJQUNyQix3Q0FBaUIsQ0FBQTtJQUNqQiwwQ0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBVFcsbUJBQW1CLG1DQUFuQixtQkFBbUIsUUFTOUI7QUFFWSxRQUFBLHlCQUF5QixHQUFHLElBQUksR0FBRyxDQUE4QjtJQUM1RSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxJQUFBLHFDQUFDLEVBQUMsU0FBUyxDQUFDLENBQUM7SUFDM0MsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzNDLENBQUMsbUJBQW1CLENBQUMsT0FBTyxFQUFFLElBQUEscUNBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQztJQUMzQyxDQUFDLG1CQUFtQixDQUFDLEtBQUssRUFBRSxJQUFBLHFDQUFDLEVBQUMsT0FBTyxDQUFDLENBQUM7SUFDdkMsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLElBQUEscUNBQUMsRUFBQyxVQUFVLENBQUMsQ0FBQztJQUM3QyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxJQUFBLHFDQUFDLEVBQUMsUUFBUSxDQUFDLENBQUM7SUFDekMsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDO0NBQzVDLENBQUMsQ0FBQztBQUVILDhFQUE4RTtBQUM5RSxJQUFZLG9CQVlYO0FBWkQsV0FBWSxvQkFBb0I7SUFDOUIsNkRBQXFDLENBQUE7SUFDckMsK0NBQXVCLENBQUE7SUFDdkIsb0RBQTRCLENBQUE7SUFDNUIsMkNBQW1CLENBQUE7SUFDbkIsa0VBQTBDLENBQUE7SUFDMUMsNEdBQW9GLENBQUE7SUFDcEYsb0RBQTRCLENBQUE7SUFDNUIsc0RBQThCLENBQUE7SUFDOUIsd0RBQWdDLENBQUE7SUFDaEMsd0RBQWdDLENBQUE7SUFDaEMsOENBQXNCLENBQUE7QUFDeEIsQ0FBQyxFQVpXLG9CQUFvQixvQ0FBcEIsb0JBQW9CLFFBWS9CO0FBRVksUUFBQSwwQkFBMEIsR0FBRyxJQUFJLEdBQUcsQ0FBK0I7SUFDOUUsQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xELENBQUMsb0JBQW9CLENBQUMsU0FBUyxFQUFFLElBQUEscUNBQUMsRUFBQyxXQUFXLENBQUMsQ0FBQztJQUNoRCxDQUFDLG9CQUFvQixDQUFDLFdBQVcsRUFBRSxJQUFBLHFDQUFDLEVBQUMsY0FBYyxDQUFDLENBQUM7SUFDckQsQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLENBQUMsb0JBQW9CLENBQUMsa0JBQWtCLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDbkUsQ0FBQyxvQkFBb0IsQ0FBQyxzQ0FBc0MsRUFBRSxJQUFBLHFDQUFDLEVBQUMsMkNBQTJDLENBQUMsQ0FBQztJQUM3RyxDQUFDLG9CQUFvQixDQUFDLFdBQVcsRUFBRSxJQUFBLHFDQUFDLEVBQUMsY0FBYyxDQUFDLENBQUM7SUFDckQsQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLEVBQUUsSUFBQSxxQ0FBQyxFQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3ZELENBQUMsb0JBQW9CLENBQUMsYUFBYSxFQUFFLElBQUEscUNBQUMsRUFBQyxTQUFTLENBQUMsQ0FBQztJQUNsRCxDQUFDLG9CQUFvQixDQUFDLGFBQWEsRUFBRSxJQUFBLHFDQUFDLEVBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN6RCxDQUFDLG9CQUFvQixDQUFDLFFBQVEsRUFBRSxJQUFBLHFDQUFDLEVBQUMsV0FBVyxDQUFDLENBQUM7Q0FDaEQsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9lbnVtcy9lbmNsb3N1cmUtc2xvdC1zdGF0dXMuZW51bS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXJrZXIgYXMgVCB9IGZyb20gJ0BiaWVzYmplcmcvbmd4LXRyYW5zbGF0ZS1leHRyYWN0LW1hcmtlcic7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGVudW0gRW5jbG9zdXJlU2xvdFN0YXR1cyB7XG4gIENsZWFyID0gJ0NMRUFSJyxcbiAgRmF1bHQgPSAnRkFVTFQnLFxuICBJZGVudGlmeSA9ICdJREVOVElGWScsXG59XG5cbmV4cG9ydCBlbnVtIERyaXZlQmF5TGlnaHRTdGF0dXMge1xuICBPbiA9ICdPTicsXG4gIE9mZiA9ICdPRkYnLFxuICBDbGVhciA9ICdDTEVBUicsXG59XG5cbmV4cG9ydCBlbnVtIEVuY2xvc3VyZVN0YXR1cyB7XG4gIE9rID0gJ09LJyxcbiAgSW52b3AgPSAnSU5WT1AnLFxuICBJbmZvID0gJ0lORk8nLFxuICBOb25Dcml0ID0gJ05PTi1DUklUJyxcbiAgQ3JpdCA9ICdDUklUJyxcbiAgVW5yZWNvdiA9ICdVTlJFQ09WJyxcbn1cblxuZXhwb3J0IGVudW0gRW5jbG9zdXJlRGlza1N0YXR1cyB7XG4gIE9mZmxpbmUgPSAnT0ZGTElORScsXG4gIFJlbW92ZWQgPSAnUkVNT1ZFRCcsXG4gIEZhdWx0ZWQgPSAnRkFVTFRFRCcsXG4gIFNwbGl0ID0gJ1NQTElUJyxcbiAgVW5hdmFpbCA9ICdVTkFWQUlMJyxcbiAgRGVncmFkZWQgPSAnREVHUkFERUQnLFxuICBPbmxpbmUgPSAnT05MSU5FJyxcbiAgVW5rbm93biA9ICdVTktOT1dOJyxcbn1cblxuZXhwb3J0IGNvbnN0IGVuY2xvc3VyZURpc2tTdGF0dXNMYWJlbHMgPSBuZXcgTWFwPEVuY2xvc3VyZURpc2tTdGF0dXMsIHN0cmluZz4oW1xuICBbRW5jbG9zdXJlRGlza1N0YXR1cy5PZmZsaW5lLCBUKCdPZmZsaW5lJyldLFxuICBbRW5jbG9zdXJlRGlza1N0YXR1cy5SZW1vdmVkLCBUKCdSZW1vdmVkJyldLFxuICBbRW5jbG9zdXJlRGlza1N0YXR1cy5GYXVsdGVkLCBUKCdGYXVsdGVkJyldLFxuICBbRW5jbG9zdXJlRGlza1N0YXR1cy5TcGxpdCwgVCgnU3BsaXQnKV0sXG4gIFtFbmNsb3N1cmVEaXNrU3RhdHVzLlVuYXZhaWwsIFQoJ1VuYXZhaWxhYmxlJyldLFxuICBbRW5jbG9zdXJlRGlza1N0YXR1cy5EZWdyYWRlZCwgVCgnRGVncmFkZWQnKV0sXG4gIFtFbmNsb3N1cmVEaXNrU3RhdHVzLk9ubGluZSwgVCgnT25saW5lJyldLFxuICBbRW5jbG9zdXJlRGlza1N0YXR1cy5Vbmtub3duLCBUKCdVbmtub3duJyldLFxuXSk7XG5cbi8vIFRPRE86IEZpbmQgb3V0IHdoYXQgYWxsIGVsZW1lbnQgbmFtZSBwb3NzaWJpbGl0aWVzIGFyZSB0byBjb21wbGV0ZSB0aGUgZW51bVxuZXhwb3J0IGVudW0gRW5jbG9zdXJlRWxlbWVudFR5cGUge1xuICBBcnJheURldmljZVNsb3QgPSAnQXJyYXkgRGV2aWNlIFNsb3QnLFxuICBFbmNsb3N1cmUgPSAnRW5jbG9zdXJlJyxcbiAgUG93ZXJTdXBwbHkgPSAnUG93ZXIgU3VwcGx5JyxcbiAgQ29vbGluZyA9ICdDb29saW5nJyxcbiAgVGVtcGVyYXR1cmVTZW5zb3JzID0gJ1RlbXBlcmF0dXJlIFNlbnNvcnMnLFxuICBFbmNsb3N1cmVTZXJ2aWNlc0NvbnRyb2xsZXJFbGVjdHJvbmljcyA9ICdFbmNsb3N1cmUgU2VydmljZXMgQ29udHJvbGxlciBFbGVjdHJvbmljcycsXG4gIFNhc0V4cGFuZGVyID0gJ1NBUyBFeHBhbmRlcicsXG4gIFNhc0Nvbm5lY3RvciA9ICdTQVMgQ29ubmVjdG9yJyxcbiAgVm9sdGFnZVNlbnNvciA9ICdWb2x0YWdlIFNlbnNvcicsXG4gIEN1cnJlbnRTZW5zb3IgPSAnQ3VycmVudCBTZW5zb3InLFxuICBEb29yTG9jayA9ICdEb29yIExvY2snLFxufVxuXG5leHBvcnQgY29uc3QgZW5jbG9zdXJlRWxlbWVudFR5cGVMYWJlbHMgPSBuZXcgTWFwPEVuY2xvc3VyZUVsZW1lbnRUeXBlLCBzdHJpbmc+KFtcbiAgW0VuY2xvc3VyZUVsZW1lbnRUeXBlLkFycmF5RGV2aWNlU2xvdCwgVCgnRGlza3MnKV0sXG4gIFtFbmNsb3N1cmVFbGVtZW50VHlwZS5FbmNsb3N1cmUsIFQoJ0VuY2xvc3VyZScpXSxcbiAgW0VuY2xvc3VyZUVsZW1lbnRUeXBlLlBvd2VyU3VwcGx5LCBUKCdQb3dlciBTdXBwbHknKV0sXG4gIFtFbmNsb3N1cmVFbGVtZW50VHlwZS5Db29saW5nLCBUKCdDb29saW5nJyldLFxuICBbRW5jbG9zdXJlRWxlbWVudFR5cGUuVGVtcGVyYXR1cmVTZW5zb3JzLCBUKCdUZW1wZXJhdHVyZSBTZW5zb3JzJyldLFxuICBbRW5jbG9zdXJlRWxlbWVudFR5cGUuRW5jbG9zdXJlU2VydmljZXNDb250cm9sbGVyRWxlY3Ryb25pY3MsIFQoJ0VuY2xvc3VyZSBTZXJ2aWNlcyBDb250cm9sbGVyIEVsZWN0cm9uaWNzJyldLFxuICBbRW5jbG9zdXJlRWxlbWVudFR5cGUuU2FzRXhwYW5kZXIsIFQoJ1NBUyBFeHBhbmRlcicpXSxcbiAgW0VuY2xvc3VyZUVsZW1lbnRUeXBlLlNhc0Nvbm5lY3RvciwgVCgnU0FTIENvbm5lY3RvcicpXSxcbiAgW0VuY2xvc3VyZUVsZW1lbnRUeXBlLlZvbHRhZ2VTZW5zb3IsIFQoJ1ZvbHRhZ2UnKV0sXG4gIFtFbmNsb3N1cmVFbGVtZW50VHlwZS5DdXJyZW50U2Vuc29yLCBUKCdDdXJyZW50IFNlbnNvcicpXSxcbiAgW0VuY2xvc3VyZUVsZW1lbnRUeXBlLkRvb3JMb2NrLCBUKCdEb29yIExvY2snKV0sXG5dKTtcbiJdLCJ2ZXJzaW9uIjozfQ==