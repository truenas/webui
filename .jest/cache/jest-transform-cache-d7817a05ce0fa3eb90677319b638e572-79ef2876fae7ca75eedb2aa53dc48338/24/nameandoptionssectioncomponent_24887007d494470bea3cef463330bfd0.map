{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-form/sections/name-and-options-section/name-and-options-section.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-form/sections/name-and-options-section/name-and-options-section.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit, output,\n} from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  delay, merge, of,\n} from 'rxjs';\nimport { nameValidatorRegex } from 'app/constants/name-validator.constant';\nimport {\n  DatasetCaseSensitivity, DatasetPreset, datasetPresetLabels,\n} from 'app/enums/dataset.enum';\nimport { mapToOptions } from 'app/helpers/options.helper';\nimport { helptextDatasetForm } from 'app/helptext/storage/volumes/datasets/dataset-form';\nimport { Dataset, DatasetCreate, DatasetUpdate } from 'app/interfaces/dataset.interface';\nimport {\n  forbiddenValues,\n} from 'app/modules/forms/ix-forms/validators/forbidden-values-validation/forbidden-values-validation';\nimport { datasetNameTooLong } from 'app/pages/datasets/components/dataset-form/utils/name-length-validation';\nimport { SmbValidationService } from 'app/pages/sharing/smb/smb-form/smb-validator.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-name-and-options',\n  templateUrl: './name-and-options-section.component.html',\n  styleUrls: ['./name-and-options-section.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NameAndOptionsSectionComponent implements OnInit, OnChanges {\n  @Input() existing: Dataset;\n  @Input() parent: Dataset;\n\n  readonly formValidityChange = output<boolean>();\n\n  datasetPresetOptions$ = of(mapToOptions(datasetPresetLabels, this.translate));\n\n  readonly form = this.formBuilder.group({\n    parent: [''],\n    name: ['', [\n      Validators.required,\n      Validators.pattern(nameValidatorRegex),\n    ]],\n    share_type: [DatasetPreset.Generic],\n  });\n\n  readonly datasetPresetForm = this.formBuilder.group({\n    create_smb: [true],\n    create_nfs: [true],\n    smb_name: [''],\n  });\n\n  readonly helptext = helptextDatasetForm;\n  readonly DatasetPreset = DatasetPreset;\n\n  get canCreateSmb(): boolean {\n    return this.form.value.share_type === DatasetPreset.Smb\n      || this.form.value.share_type === DatasetPreset.Multiprotocol;\n  }\n\n  get canCreateNfs(): boolean {\n    return this.form.value.share_type === DatasetPreset.Multiprotocol;\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private translate: TranslateService,\n    private smbValidationService: SmbValidationService,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnChanges(): void {\n    if (this.parent) {\n      this.form.controls.parent.setValue(this.parent.name);\n      this.addNameValidators();\n    }\n\n    this.setFormValues();\n    this.setNameDisabledStatus();\n  }\n\n  ngOnInit(): void {\n    this.form.controls.parent.disable();\n\n    this.listenForSmbNameValidation();\n\n    merge(this.form.statusChanges, this.datasetPresetForm.statusChanges)\n      .pipe(untilDestroyed(this))\n      .subscribe((status) => this.formValidityChange.emit(status === 'VALID'));\n  }\n\n  getPayload(): Partial<DatasetCreate> | Partial<DatasetUpdate> {\n    const payload = this.form.value;\n\n    if (this.existing) {\n      delete payload.share_type;\n      return payload;\n    }\n\n    return {\n      ...payload,\n      name: payload.name && this.form.controls.name.valid ? `${this.parent.name}/${payload.name}` : null,\n    };\n  }\n\n  private setFormValues(): void {\n    if (!this.existing) {\n      return;\n    }\n\n    this.form.patchValue({\n      name: this.existing.name,\n    });\n  }\n\n  private setNameDisabledStatus(): void {\n    if (this.existing) {\n      this.form.controls.name.disable();\n    } else {\n      this.form.controls.name.enable();\n    }\n  }\n\n  private addNameValidators(): void {\n    const isNameCaseSensitive = this.parent.casesensitivity.value === DatasetCaseSensitivity.Sensitive;\n    const namesInUse = this.parent.children.map((child) => {\n      const childName = /[^/]*$/.exec(child.name)[0];\n      if (isNameCaseSensitive) {\n        return childName.toLowerCase();\n      }\n\n      return childName;\n    });\n\n    this.form.controls.name.addValidators([\n      datasetNameTooLong(this.parent.name),\n      forbiddenValues(namesInUse, isNameCaseSensitive),\n    ]);\n  }\n\n  private listenForSmbNameValidation(): void {\n    merge(\n      this.form.controls.share_type.valueChanges,\n      this.datasetPresetForm.controls.create_smb.valueChanges,\n    )\n      .pipe(delay(0), untilDestroyed(this))\n      .subscribe(() => {\n        const smbNameControl = this.datasetPresetForm.controls.smb_name;\n\n        if (this.canCreateSmb && !!this.datasetPresetForm.controls.create_smb.value) {\n          smbNameControl.addValidators(Validators.required);\n          smbNameControl.addAsyncValidators(this.smbValidationService.validate());\n          smbNameControl.patchValue(this.form.controls.name.value);\n          smbNameControl.markAsTouched();\n        } else {\n          smbNameControl.clearAsyncValidators();\n          smbNameControl.clearValidators();\n          smbNameControl.patchValue(null);\n        }\n\n        this.cdr.markForCheck();\n      });\n  }\n}\n"],"version":3}