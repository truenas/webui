{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/utils/dataset.utils.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/utils/dataset.utils.ts"],"sourcesContent":["import { EncryptionKeyFormat } from 'app/enums/encryption-key-format.enum';\nimport { ZfsPropertySource } from 'app/enums/zfs-property-source.enum';\nimport { Dataset, DatasetDetails } from 'app/interfaces/dataset.interface';\nimport { ZfsProperty } from 'app/interfaces/zfs-property.interface';\n\nexport const ixAppsDataset = 'ix-apps';\n\nexport function getDatasetLabel(dataset: Pick<Dataset, 'name'>): string {\n  if (!dataset?.name) {\n    return '';\n  }\n  const segments = dataset.name.split('/');\n  if (segments.length === 1) {\n    return dataset.name;\n  }\n  return segments[segments.length - 1];\n}\n\nexport function isRootDataset(dataset: Pick<Dataset, 'name'>): boolean {\n  return dataset.name.split('/').length === 1;\n}\n\nexport function isEncryptionRoot(dataset: Pick<Dataset, 'encryption_root' | 'id'>): boolean {\n  return dataset.encryption_root === dataset.id;\n}\n\nexport function isPasswordEncrypted(dataset: Pick<Dataset, 'key_format'>): boolean {\n  return dataset.key_format?.value === EncryptionKeyFormat.Passphrase;\n}\n\nexport function isIocageMounted(dataset: Pick<Dataset, 'mountpoint'>): boolean {\n  return dataset.mountpoint?.split('/')?.[1] === 'iocage';\n}\n\nexport function isPropertyInherited(property: ZfsProperty<unknown>): boolean {\n  return !property?.source\n    || property.source === ZfsPropertySource.Inherited\n    || property.source === ZfsPropertySource.Default;\n}\n\nexport function doesDatasetOrChildrenHaveShares(dataset: DatasetDetails): boolean {\n  if (dataset.nfs_shares?.length || dataset.smb_shares?.length || dataset.iscsi_shares?.length) {\n    return true;\n  }\n  for (const child of dataset.children) {\n    if (doesDatasetOrChildrenHaveShares(child)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function doesDatasetHaveShares(dataset: DatasetDetails): boolean {\n  if (!dataset.children?.length) {\n    return false;\n  }\n  for (const child of dataset.children) {\n    if (doesDatasetOrChildrenHaveShares(child)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function datasetNameSortComparer(a: DatasetDetails, b: DatasetDetails): number {\n  const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'variant' });\n\n  const partsA = a.name.split('/');\n  const partsB = b.name.split('/');\n  const minLength = Math.min(partsA.length, partsB.length);\n\n  for (let i = 0; i < minLength; i++) {\n    const compareResult = collator.compare(partsA[i], partsB[i]);\n    if (compareResult !== 0) {\n      return compareResult;\n    }\n  }\n\n  return partsA.length - partsB.length;\n}\n"],"version":3}