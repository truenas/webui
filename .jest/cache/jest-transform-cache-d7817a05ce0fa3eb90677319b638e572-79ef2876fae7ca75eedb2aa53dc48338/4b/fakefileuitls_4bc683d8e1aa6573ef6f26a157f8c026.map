{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/core/testing/utils/fake-file.uitls.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA,4BAMC;AARD,sDAAwC;AAExC,SAAgB,QAAQ,CAAC,IAAI,GAAG,UAAU,EAAE,IAAI,GAAG,IAAI;IACrD,MAAM,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC;IACxD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IACtD,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACjD,OAAO,IAAI,CAAC;AACd,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/core/testing/utils/fake-file.uitls.ts"],"sourcesContent":["import * as mimeTypes from 'mime-types';\n\nexport function fakeFile(name = 'test.txt', size = 1024): File {\n  const bits = [new Array(size).fill(0).join('')];\n  const mimeType = mimeTypes.lookup(name) || 'text/plain';\n  const file = new File(bits, name, { type: mimeType });\n  file.text = (() => Promise.resolve('test_text'));\n  return file;\n}\n"],"version":3}