51ae92bffa21f884d67bcf99e12801e9
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const word = '[a-fA-F\\d:]';
const boundry = options => options && options.includeBoundaries
    ? `(?:(?<=\\s|^)(?=${word})|(?<=${word})(?=\\s|$))`
    : '';
const v4 = '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}';
const v6segment = '[a-fA-F\\d]{1,4}';
const v6 = `
(?:
(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm, '').replace(/\n/g, '').trim();
// Pre-compile only the exact regexes because adding a global flag make regexes stateful
const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);
const v4exact = new RegExp(`^${v4}$`);
const v6exact = new RegExp(`^${v6}$`);
const ipRegex = options => options && options.exact
    ? v46Exact
    : new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');
ipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');
ipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');
exports.default = ipRegex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9ub2RlX21vZHVsZXMvaXAtcmVnZXgvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLElBQUksR0FBRyxjQUFjLENBQUM7QUFFNUIsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLGlCQUFpQjtJQUM5RCxDQUFDLENBQUMsbUJBQW1CLElBQUksU0FBUyxJQUFJLGFBQWE7SUFDbkQsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUVOLE1BQU0sRUFBRSxHQUFHLGdHQUFnRyxDQUFDO0FBRTVHLE1BQU0sU0FBUyxHQUFHLGtCQUFrQixDQUFDO0FBRXJDLE1BQU0sRUFBRSxHQUFHOztLQUVOLFNBQVMsV0FBVyxTQUFTO0tBQzdCLFNBQVMsV0FBVyxFQUFFLEtBQUssU0FBUztLQUNwQyxTQUFTLFlBQVksRUFBRSxRQUFRLFNBQVM7S0FDeEMsU0FBUyxlQUFlLFNBQVMsVUFBVSxFQUFFLFFBQVEsU0FBUztLQUM5RCxTQUFTLGVBQWUsU0FBUyxVQUFVLEVBQUUsUUFBUSxTQUFTO0tBQzlELFNBQVMsZUFBZSxTQUFTLFVBQVUsRUFBRSxRQUFRLFNBQVM7S0FDOUQsU0FBUyxlQUFlLFNBQVMsVUFBVSxFQUFFLFFBQVEsU0FBUzthQUN0RCxTQUFTLFVBQVUsRUFBRSxRQUFRLFNBQVM7O0NBRWxELENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0FBRXhELHdGQUF3RjtBQUN4RixNQUFNLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZELE1BQU0sT0FBTyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztBQUN0QyxNQUFNLE9BQU8sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFFdEMsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUs7SUFDbEQsQ0FBQyxDQUFDLFFBQVE7SUFDVixDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsTUFBTSxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBRXRILE9BQU8sQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDNUgsT0FBTyxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUU1SCxrQkFBZSxPQUFPLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9ub2RlX21vZHVsZXMvaXAtcmVnZXgvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgd29yZCA9ICdbYS1mQS1GXFxcXGQ6XSc7XG5cbmNvbnN0IGJvdW5kcnkgPSBvcHRpb25zID0+IG9wdGlvbnMgJiYgb3B0aW9ucy5pbmNsdWRlQm91bmRhcmllc1xuXHQ/IGAoPzooPzw9XFxcXHN8XikoPz0ke3dvcmR9KXwoPzw9JHt3b3JkfSkoPz1cXFxcc3wkKSlgXG5cdDogJyc7XG5cbmNvbnN0IHY0ID0gJyg/OjI1WzAtNV18MlswLTRdXFxcXGR8MVxcXFxkXFxcXGR8WzEtOV1cXFxcZHxcXFxcZCkoPzpcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXGR8MVxcXFxkXFxcXGR8WzEtOV1cXFxcZHxcXFxcZCkpezN9JztcblxuY29uc3QgdjZzZWdtZW50ID0gJ1thLWZBLUZcXFxcZF17MSw0fSc7XG5cbmNvbnN0IHY2ID0gYFxuKD86XG4oPzoke3Y2c2VnbWVudH06KXs3fSg/OiR7djZzZWdtZW50fXw6KXwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAxOjI6Mzo0OjU6Njo3OjogIDE6MjozOjQ6NTo2Ojc6OFxuKD86JHt2NnNlZ21lbnR9Oil7Nn0oPzoke3Y0fXw6JHt2NnNlZ21lbnR9fDopfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gMToyOjM6NDo1OjY6OiAgICAxOjI6Mzo0OjU6Njo6OCAgIDE6MjozOjQ6NTo2Ojo4ICAxOjI6Mzo0OjU6Njo6MS4yLjMuNFxuKD86JHt2NnNlZ21lbnR9Oil7NX0oPzo6JHt2NH18KD86OiR7djZzZWdtZW50fSl7MSwyfXw6KXwgICAgICAgICAgICAgICAgICAgLy8gMToyOjM6NDo1OjogICAgICAxOjI6Mzo0OjU6Ojc6OCAgIDE6MjozOjQ6NTo6OCAgICAxOjI6Mzo0OjU6Ojc6MS4yLjMuNFxuKD86JHt2NnNlZ21lbnR9Oil7NH0oPzooPzo6JHt2NnNlZ21lbnR9KXswLDF9OiR7djR9fCg/Ojoke3Y2c2VnbWVudH0pezEsM318Oil8IC8vIDE6MjozOjQ6OiAgICAgICAgMToyOjM6NDo6Njo3OjggICAxOjI6Mzo0Ojo4ICAgICAgMToyOjM6NDo6Njo3OjEuMi4zLjRcbig/OiR7djZzZWdtZW50fTopezN9KD86KD86OiR7djZzZWdtZW50fSl7MCwyfToke3Y0fXwoPzo6JHt2NnNlZ21lbnR9KXsxLDR9fDopfCAvLyAxOjI6Mzo6ICAgICAgICAgIDE6MjozOjo1OjY6Nzo4ICAgMToyOjM6OjggICAgICAgIDE6MjozOjo1OjY6NzoxLjIuMy40XG4oPzoke3Y2c2VnbWVudH06KXsyfSg/Oig/Ojoke3Y2c2VnbWVudH0pezAsM306JHt2NH18KD86OiR7djZzZWdtZW50fSl7MSw1fXw6KXwgLy8gMToyOjogICAgICAgICAgICAxOjI6OjQ6NTo2Ojc6OCAgIDE6Mjo6OCAgICAgICAgICAxOjI6OjQ6NTo2Ojc6MS4yLjMuNFxuKD86JHt2NnNlZ21lbnR9Oil7MX0oPzooPzo6JHt2NnNlZ21lbnR9KXswLDR9OiR7djR9fCg/Ojoke3Y2c2VnbWVudH0pezEsNn18Oil8IC8vIDE6OiAgICAgICAgICAgICAgMTo6Mzo0OjU6Njo3OjggICAxOjo4ICAgICAgICAgICAgMTo6Mzo0OjU6Njo3OjEuMi4zLjRcbig/OjooPzooPzo6JHt2NnNlZ21lbnR9KXswLDV9OiR7djR9fCg/Ojoke3Y2c2VnbWVudH0pezEsN318OikpICAgICAgICAgICAgIC8vIDo6MjozOjQ6NTo2Ojc6OCAgOjoyOjM6NDo1OjY6Nzo4ICA6OjggICAgICAgICAgICAgOjoxLjIuMy40XG4pKD86JVswLTlhLXpBLVpdezEsfSk/ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gJWV0aDAgICAgICAgICAgICAlMVxuYC5yZXBsYWNlKC9cXHMqXFwvXFwvLiokL2dtLCAnJykucmVwbGFjZSgvXFxuL2csICcnKS50cmltKCk7XG5cbi8vIFByZS1jb21waWxlIG9ubHkgdGhlIGV4YWN0IHJlZ2V4ZXMgYmVjYXVzZSBhZGRpbmcgYSBnbG9iYWwgZmxhZyBtYWtlIHJlZ2V4ZXMgc3RhdGVmdWxcbmNvbnN0IHY0NkV4YWN0ID0gbmV3IFJlZ0V4cChgKD86XiR7djR9JCl8KD86XiR7djZ9JClgKTtcbmNvbnN0IHY0ZXhhY3QgPSBuZXcgUmVnRXhwKGBeJHt2NH0kYCk7XG5jb25zdCB2NmV4YWN0ID0gbmV3IFJlZ0V4cChgXiR7djZ9JGApO1xuXG5jb25zdCBpcFJlZ2V4ID0gb3B0aW9ucyA9PiBvcHRpb25zICYmIG9wdGlvbnMuZXhhY3Rcblx0PyB2NDZFeGFjdFxuXHQ6IG5ldyBSZWdFeHAoYCg/OiR7Ym91bmRyeShvcHRpb25zKX0ke3Y0fSR7Ym91bmRyeShvcHRpb25zKX0pfCg/OiR7Ym91bmRyeShvcHRpb25zKX0ke3Y2fSR7Ym91bmRyeShvcHRpb25zKX0pYCwgJ2cnKTtcblxuaXBSZWdleC52NCA9IG9wdGlvbnMgPT4gb3B0aW9ucyAmJiBvcHRpb25zLmV4YWN0ID8gdjRleGFjdCA6IG5ldyBSZWdFeHAoYCR7Ym91bmRyeShvcHRpb25zKX0ke3Y0fSR7Ym91bmRyeShvcHRpb25zKX1gLCAnZycpO1xuaXBSZWdleC52NiA9IG9wdGlvbnMgPT4gb3B0aW9ucyAmJiBvcHRpb25zLmV4YWN0ID8gdjZleGFjdCA6IG5ldyBSZWdFeHAoYCR7Ym91bmRyeShvcHRpb25zKX0ke3Y2fSR7Ym91bmRyeShvcHRpb25zKX1gLCAnZycpO1xuXG5leHBvcnQgZGVmYXVsdCBpcFJlZ2V4O1xuIl0sInZlcnNpb24iOjN9