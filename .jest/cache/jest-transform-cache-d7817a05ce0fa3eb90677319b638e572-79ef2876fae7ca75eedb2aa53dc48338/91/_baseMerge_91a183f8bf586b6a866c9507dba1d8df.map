{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_baseMerge.js","mappings":";;;;;AAAA,4DAAgC;AAChC,kFAAsD;AACtD,gEAAoC;AACpC,4EAAgD;AAChD,gEAAqC;AACrC,4DAAiC;AACjC,gEAAoC;AAEpC;;;;;;;;;;GAUG;AACH,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK;IAC5D,IAAI,MAAM,KAAK,MAAM,EAAE,CAAC;QACtB,OAAO;IACT,CAAC;IACD,IAAA,qBAAO,EAAC,MAAM,EAAE,UAAS,QAAQ,EAAE,GAAG;QACpC,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,mBAAK,CAAC,CAAC;QAC7B,IAAI,IAAA,qBAAQ,EAAC,QAAQ,CAAC,EAAE,CAAC;YACvB,IAAA,2BAAa,EAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QAC7E,CAAC;aACI,CAAC;YACJ,IAAI,QAAQ,GAAG,UAAU;gBACvB,CAAC,CAAC,UAAU,CAAC,IAAA,qBAAO,EAAC,MAAM,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;gBAC/E,CAAC,CAAC,SAAS,CAAC;YAEd,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;gBAC3B,QAAQ,GAAG,QAAQ,CAAC;YACtB,CAAC;YACD,IAAA,8BAAgB,EAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC,EAAE,mBAAM,CAAC,CAAC;AACb,CAAC;AAED,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/_baseMerge.js"],"sourcesContent":["import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n"],"version":3}