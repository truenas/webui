{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/components/ix-empty-row/ix-empty-row.component.ts","mappings":";;;;;;;;;AAAA,gDAAsE;AACtE,wCAEuB;AACvB,qDAAqD;AACrD,yEAAwE;AACxE,8CAAwE;AACxE,+DAAsD;AAEtD,2EAA8E;AAC9E,6EAAwE;AACxE,uEAAmE;AAiB5D,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IAWnC,YACU,gBAAkC,EAClC,SAA2B,EAC3B,GAAsB;QAFtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,cAAS,GAAT,SAAS,CAAkB;QAC3B,QAAG,GAAH,GAAG,CAAmB;QAbvB,SAAI,GAAgB;YAC3B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC;YAC3C,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;YAChE,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,2BAAS,CAAC,UAAU;SAC3B;IASE,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,cAAc,GAAG,IAAI,uBAAc,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC5F,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,2BAAS,CAAC,OAAO,CAAC;IAC9C,CAAC;IAED,OAAO;QACL,IAAI,IAAI,GAAG,IAAA,6BAAU,EAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC;aAAM,CAAC;YACN,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACvB,KAAK,2BAAS,CAAC,OAAO;oBACpB,IAAI,GAAG,IAAA,6BAAU,EAAC,iBAAiB,CAAC,CAAC;oBACrC,MAAM;gBACR,KAAK,2BAAS,CAAC,QAAQ;oBACrB,IAAI,GAAG,IAAA,6BAAU,EAAC,YAAY,CAAC,CAAC;oBAChC,MAAM;gBACR,KAAK,2BAAS,CAAC,UAAU;oBACvB,IAAI,GAAG,IAAA,6BAAU,EAAC,sBAAsB,CAAC,CAAC;oBAC1C,MAAM;gBACR,KAAK,2BAAS,CAAC,MAAM;oBACnB,IAAI,GAAG,IAAA,6BAAU,EAAC,mBAAmB,CAAC,CAAC;oBACvC,MAAM;gBACR,KAAK,2BAAS,CAAC,eAAe;oBAC5B,IAAI,GAAG,IAAA,6BAAU,EAAC,kBAAkB,CAAC,CAAC;oBACtC,MAAM;YACV,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;AAxDU,4DAAwB;;;;;;;mBAClC,YAAK;oCAOL,gBAAS,SAAC,uBAAuB;;mCARvB,wBAAwB;IAfpC,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kDAA4C;QAE5C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,wBAAe;YACf,qCAAkB;YAClB,mCAAe;YACf,kBAAS;YACT,sBAAe;YACf,8BAAa;SACd;KACF,CAAC;GACW,wBAAwB,CAyDpC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/ix-table/components/ix-empty-row/ix-empty-row.component.ts"],"sourcesContent":["import { TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, TemplateRef, ViewChild, ViewContainerRef,\n} from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { EmptyType } from 'app/enums/empty-type.enum';\nimport { EmptyConfig } from 'app/interfaces/empty-config.interface';\nimport { iconMarker, MarkedIcon } from 'app/modules/ix-icon/icon-marker.util';\nimport { IxIconComponent } from 'app/modules/ix-icon/ix-icon.component';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@Component({\n  selector: 'ix-empty-row',\n  templateUrl: './ix-empty-row.component.html',\n  styleUrls: ['./ix-empty-row.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    CdkPortalOutlet,\n    MatProgressSpinner,\n    IxIconComponent,\n    MatButton,\n    TranslateModule,\n    TestDirective,\n  ],\n})\nexport class IxTableEmptyRowComponent implements AfterViewInit {\n  @Input() conf: EmptyConfig = {\n    title: this.translate.instant('No records'),\n    message: this.translate.instant('There are no records to show.'),\n    large: true,\n    type: EmptyType.NoPageData,\n  };\n\n  @ViewChild('templatePortalContent') templatePortalContent: TemplateRef<unknown>;\n  templatePortal: TemplatePortal;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private translate: TranslateService,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.templatePortal = new TemplatePortal(this.templatePortalContent, this.viewContainerRef);\n    this.cdr.detectChanges();\n  }\n\n  doAction(): void {\n    if (this.conf.button.action) {\n      this.conf.button.action();\n    }\n  }\n\n  isLoading(): boolean {\n    return this.conf.type === EmptyType.Loading;\n  }\n\n  getIcon(): MarkedIcon {\n    let icon = iconMarker('ix-truenas-logo');\n    if (this.conf.icon) {\n      icon = this.conf.icon;\n    } else {\n      switch (this.conf.type) {\n        case EmptyType.Loading:\n          icon = iconMarker('ix-truenas-logo');\n          break;\n        case EmptyType.FirstUse:\n          icon = iconMarker('mdi-rocket');\n          break;\n        case EmptyType.NoPageData:\n          icon = iconMarker('mdi-format-list-text');\n          break;\n        case EmptyType.Errors:\n          icon = iconMarker('mdi-alert-octagon');\n          break;\n        case EmptyType.NoSearchResults:\n          icon = iconMarker('mdi-magnify-scan');\n          break;\n      }\n    }\n    return icon;\n  }\n}\n"],"version":3}