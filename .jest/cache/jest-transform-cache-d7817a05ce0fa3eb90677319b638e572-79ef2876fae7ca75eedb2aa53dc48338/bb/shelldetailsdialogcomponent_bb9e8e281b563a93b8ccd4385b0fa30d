dfd4907e2e8d838f772c0270ccb2cc58
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShellDetailsDialogComponent = void 0;
const core_1 = require("@angular/core");
const forms_1 = require("@angular/forms");
const dialog_1 = require("@angular/material/dialog");
const until_destroy_1 = require("@ngneat/until-destroy");
const shell_details_dialog_interface_1 = require("app/interfaces/shell-details-dialog.interface");
const shell_details_type_enum_1 = require("app/pages/apps/enum/shell-details-type.enum");
const applications_service_1 = require("app/pages/apps/services/applications.service");
let ShellDetailsDialogComponent = class ShellDetailsDialogComponent {
    constructor(data, dialogRef, appService, formBuilder) {
        this.data = data;
        this.dialogRef = dialogRef;
        this.appService = appService;
        this.formBuilder = formBuilder;
        this.tailLines = 500;
        this.podSelectDialogType = shell_details_type_enum_1.ShellDetailsType;
        this.podList = [];
        this.podDetails = {};
        this.hasPool = true;
        this.selectedAppName = data.appName;
        this.dialogType = data.type;
        this.title = data.title;
        switch (this.dialogType) {
            case shell_details_type_enum_1.ShellDetailsType.Shell:
                this.form = this.formBuilder.group({
                    command: ['/bin/sh', forms_1.Validators.required],
                });
                break;
            case shell_details_type_enum_1.ShellDetailsType.Logs:
                this.form = this.formBuilder.group({
                    tail_lines: [this.tailLines, forms_1.Validators.required],
                });
                break;
        }
    }
    onPodSelect() {
        this.data.customSubmit(this.form.value, this.selectedAppName);
        this.dialogRef.close();
    }
};
exports.ShellDetailsDialogComponent = ShellDetailsDialogComponent;
ShellDetailsDialogComponent.ctorParameters = () => [
    { type: shell_details_dialog_interface_1.ShellDetailsDialogData, decorators: [{ type: core_1.Inject, args: [dialog_1.MAT_DIALOG_DATA,] }] },
    { type: dialog_1.MatDialogRef },
    { type: applications_service_1.ApplicationsService },
    { type: forms_1.FormBuilder }
];
exports.ShellDetailsDialogComponent = ShellDetailsDialogComponent = __decorate([
    (0, until_destroy_1.UntilDestroy)(),
    (0, core_1.Component)({
        selector: 'ix-shell-details-dialog',
        template: require("./shell-details-dialog.component.html"),
        changeDetection: core_1.ChangeDetectionStrategy.OnPush,
    })
], ShellDetailsDialogComponent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hY2Jvb2sva2FycG92LXdvcmsvVHJ1ZU5BUy93ZWJ1aS9zcmMvYXBwL3BhZ2VzL2FwcHMvY29tcG9uZW50cy9zaGVsbC1kZXRhaWxzLWRpYWxvZy9zaGVsbC1kZXRhaWxzLWRpYWxvZy5jb21wb25lbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsd0NBRXVCO0FBQ3ZCLDBDQUV3QjtBQUN4QixxREFBeUU7QUFDekUseURBQXFEO0FBQ3JELGtHQUF1RjtBQUN2Rix5RkFBK0U7QUFDL0UsdUZBQW1GO0FBUTVFLElBQU0sMkJBQTJCLEdBQWpDLE1BQU0sMkJBQTJCO0lBZXRDLFlBQ2tDLElBQTRCLEVBQ3JELFNBQW9ELEVBQ3BELFVBQStCLEVBQzlCLFdBQXdCO1FBSEEsU0FBSSxHQUFKLElBQUksQ0FBd0I7UUFDckQsY0FBUyxHQUFULFNBQVMsQ0FBMkM7UUFDcEQsZUFBVSxHQUFWLFVBQVUsQ0FBcUI7UUFDOUIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFsQjFCLGNBQVMsR0FBRyxHQUFHLENBQUM7UUFHeEIsd0JBQW1CLEdBQUcsMENBQWdCLENBQUM7UUFDdkMsWUFBTyxHQUFhLEVBQUUsQ0FBQztRQUN2QixlQUFVLEdBQTZCLEVBQUUsQ0FBQztRQU8xQyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBUWIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDeEIsUUFBUSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDeEIsS0FBSywwQ0FBZ0IsQ0FBQyxLQUFLO2dCQUN6QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDO29CQUNqQyxPQUFPLEVBQUUsQ0FBQyxTQUFTLEVBQUUsa0JBQVUsQ0FBQyxRQUFRLENBQUM7aUJBQzFDLENBQXdDLENBQUM7Z0JBQzFDLE1BQU07WUFDUixLQUFLLDBDQUFnQixDQUFDLElBQUk7Z0JBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7b0JBQ2pDLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsa0JBQVUsQ0FBQyxRQUFRLENBQUM7aUJBQ2xELENBQXdDLENBQUM7Z0JBQzFDLE1BQU07UUFDVixDQUFDO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDOztBQXpDVSxrRUFBMkI7OzBGQWdCbkMsYUFBTSxTQUFDLHdCQUFlOzs7OztzQ0FoQmQsMkJBQTJCO0lBTnZDLElBQUEsNEJBQVksR0FBRTtJQUNkLElBQUEsZ0JBQVMsRUFBQztRQUNULFFBQVEsRUFBRSx5QkFBeUI7UUFDbkMsMERBQW9EO1FBQ3BELGVBQWUsRUFBRSw4QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7R0FDVywyQkFBMkIsQ0EwQ3ZDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL2thcnBvdi13b3JrL1RydWVOQVMvd2VidWkvc3JjL2FwcC9wYWdlcy9hcHBzL2NvbXBvbmVudHMvc2hlbGwtZGV0YWlscy1kaWFsb2cvc2hlbGwtZGV0YWlscy1kaWFsb2cuY29tcG9uZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEluamVjdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBGb3JtQnVpbGRlciwgRm9ybUNvbnRyb2wsIEZvcm1Hcm91cCwgVmFsaWRhdG9ycyxcbn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBLCBNYXREaWFsb2dSZWYgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgVW50aWxEZXN0cm95IH0gZnJvbSAnQG5nbmVhdC91bnRpbC1kZXN0cm95JztcbmltcG9ydCB7IFNoZWxsRGV0YWlsc0RpYWxvZ0RhdGEgfSBmcm9tICdhcHAvaW50ZXJmYWNlcy9zaGVsbC1kZXRhaWxzLWRpYWxvZy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgU2hlbGxEZXRhaWxzVHlwZSB9IGZyb20gJ2FwcC9wYWdlcy9hcHBzL2VudW0vc2hlbGwtZGV0YWlscy10eXBlLmVudW0nO1xuaW1wb3J0IHsgQXBwbGljYXRpb25zU2VydmljZSB9IGZyb20gJ2FwcC9wYWdlcy9hcHBzL3NlcnZpY2VzL2FwcGxpY2F0aW9ucy5zZXJ2aWNlJztcblxuQFVudGlsRGVzdHJveSgpXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpeC1zaGVsbC1kZXRhaWxzLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9zaGVsbC1kZXRhaWxzLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBTaGVsbERldGFpbHNEaWFsb2dDb21wb25lbnQge1xuICBwcml2YXRlIHRhaWxMaW5lcyA9IDUwMDtcbiAgc2VsZWN0ZWRBcHBOYW1lOiBzdHJpbmc7XG4gIGRpYWxvZ1R5cGU6IFNoZWxsRGV0YWlsc1R5cGU7XG4gIHBvZFNlbGVjdERpYWxvZ1R5cGUgPSBTaGVsbERldGFpbHNUeXBlO1xuICBwb2RMaXN0OiBzdHJpbmdbXSA9IFtdO1xuICBwb2REZXRhaWxzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmdbXT4gPSB7fTtcblxuICBmb3JtOiBGb3JtR3JvdXA8e1xuICAgIGNvbW1hbmQ/OiBGb3JtQ29udHJvbDxzdHJpbmc+O1xuICAgIHRhaWxfbGluZXM/OiBGb3JtQ29udHJvbDxudW1iZXI+O1xuICB9PjtcbiAgdGl0bGU6IHN0cmluZztcbiAgaGFzUG9vbCA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBTaGVsbERldGFpbHNEaWFsb2dEYXRhLFxuICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxTaGVsbERldGFpbHNEaWFsb2dDb21wb25lbnQ+LFxuICAgIHB1YmxpYyBhcHBTZXJ2aWNlOiBBcHBsaWNhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgZm9ybUJ1aWxkZXI6IEZvcm1CdWlsZGVyLFxuICApIHtcbiAgICB0aGlzLnNlbGVjdGVkQXBwTmFtZSA9IGRhdGEuYXBwTmFtZTtcbiAgICB0aGlzLmRpYWxvZ1R5cGUgPSBkYXRhLnR5cGU7XG4gICAgdGhpcy50aXRsZSA9IGRhdGEudGl0bGU7XG4gICAgc3dpdGNoICh0aGlzLmRpYWxvZ1R5cGUpIHtcbiAgICAgIGNhc2UgU2hlbGxEZXRhaWxzVHlwZS5TaGVsbDpcbiAgICAgICAgdGhpcy5mb3JtID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgICAgICAgY29tbWFuZDogWycvYmluL3NoJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG4gICAgICAgIH0pIGFzIFNoZWxsRGV0YWlsc0RpYWxvZ0NvbXBvbmVudFsnZm9ybSddO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgU2hlbGxEZXRhaWxzVHlwZS5Mb2dzOlxuICAgICAgICB0aGlzLmZvcm0gPSB0aGlzLmZvcm1CdWlsZGVyLmdyb3VwKHtcbiAgICAgICAgICB0YWlsX2xpbmVzOiBbdGhpcy50YWlsTGluZXMsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuICAgICAgICB9KSBhcyBTaGVsbERldGFpbHNEaWFsb2dDb21wb25lbnRbJ2Zvcm0nXTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgb25Qb2RTZWxlY3QoKTogdm9pZCB7XG4gICAgdGhpcy5kYXRhLmN1c3RvbVN1Ym1pdCh0aGlzLmZvcm0udmFsdWUsIHRoaXMuc2VsZWN0ZWRBcHBOYW1lKTtcbiAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSgpO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=