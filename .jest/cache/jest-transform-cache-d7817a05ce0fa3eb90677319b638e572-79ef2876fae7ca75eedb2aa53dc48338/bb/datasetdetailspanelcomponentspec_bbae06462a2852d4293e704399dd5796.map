{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-details-panel/dataset-details-panel.component.spec.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/datasets/components/dataset-details-panel/dataset-details-panel.component.spec.ts"],"sourcesContent":["import { HarnessLoader } from '@angular/cdk/testing';\nimport { TestbedHarnessEnvironment } from '@angular/cdk/testing/testbed';\nimport { MatButtonHarness } from '@angular/material/button/testing';\nimport { createComponentFactory, mockProvider, Spectator } from '@ngneat/spectator/jest';\nimport { provideMockStore } from '@ngrx/store/testing';\nimport { MockComponents } from 'ng-mocks';\nimport { of } from 'rxjs';\nimport { mockAuth } from 'app/core/testing/utils/mock-auth.utils';\nimport { DatasetType } from 'app/enums/dataset.enum';\nimport { DatasetDetails } from 'app/interfaces/dataset.interface';\nimport { SystemInfo } from 'app/interfaces/system-info.interface';\nimport { MobileBackButtonComponent } from 'app/modules/buttons/mobile-back-button/mobile-back-button.component';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { DataProtectionCardComponent } from 'app/pages/datasets/components/data-protection-card/data-protection-card.component';\nimport {\n  DatasetCapacityManagementCardComponent,\n} from 'app/pages/datasets/components/dataset-capacity-management-card/dataset-capacity-management-card.component';\nimport { DatasetDetailsCardComponent } from 'app/pages/datasets/components/dataset-details-card/dataset-details-card.component';\nimport { DatasetDetailsPanelComponent } from 'app/pages/datasets/components/dataset-details-panel/dataset-details-panel.component';\nimport { DatasetFormComponent } from 'app/pages/datasets/components/dataset-form/dataset-form.component';\nimport { DatasetIconComponent } from 'app/pages/datasets/components/dataset-icon/dataset-icon.component';\nimport { RolesCardComponent } from 'app/pages/datasets/components/roles-card/roles-card.component';\nimport { ZvolFormComponent } from 'app/pages/datasets/components/zvol-form/zvol-form.component';\nimport { ZfsEncryptionCardComponent } from 'app/pages/datasets/modules/encryption/components/zfs-encryption-card/zfs-encryption-card.component';\nimport { PermissionsCardComponent } from 'app/pages/datasets/modules/permissions/containers/permissions-card/permissions-card.component';\nimport { DatasetTreeStore } from 'app/pages/datasets/store/dataset-store.service';\nimport { IxSlideInService } from 'app/services/ix-slide-in.service';\nimport { selectSystemInfo } from 'app/store/system-info/system-info.selectors';\n\ndescribe('DatasetDetailsPanelComponent', () => {\n  let spectator: Spectator<DatasetDetailsPanelComponent>;\n  let loader: HarnessLoader;\n  const dataset = {\n    id: 'root/parent/child',\n    pool: 'my-pool',\n    name: 'root/parent/child',\n    mountpoint: '/mnt/root/parent/child',\n    type: DatasetType.Filesystem,\n    encrypted: true,\n  } as DatasetDetails;\n  const datasetDetails = {\n    ...dataset,\n  } as DatasetDetails;\n  const parentDatasetDetails = {\n    name: 'root/parent',\n  } as DatasetDetails;\n  const createComponent = createComponentFactory({\n    component: DatasetDetailsPanelComponent,\n    declarations: [\n      MockComponents(\n        DatasetIconComponent,\n        DatasetDetailsCardComponent,\n        PermissionsCardComponent,\n        ZfsEncryptionCardComponent,\n        DatasetCapacityManagementCardComponent,\n        DataProtectionCardComponent,\n        RolesCardComponent,\n        MobileBackButtonComponent,\n      ),\n    ],\n    providers: [\n      mockAuth(),\n      mockProvider(IxSlideInService, {\n        open: jest.fn(() => ({\n          slideInClosed$: of(),\n        })),\n        onClose$: of(),\n      }),\n      mockProvider(DatasetTreeStore, {\n        selectedDataset$: of(datasetDetails),\n        selectedParentDataset$: of(parentDatasetDetails),\n      }),\n      provideMockStore({\n        selectors: [\n          {\n            selector: selectSystemInfo,\n            value: {\n              version: 'TrueNAS-SCALE-22.12',\n            } as SystemInfo,\n          },\n        ],\n      }),\n      mockProvider(SnackbarService),\n      mockProvider(IxSlideInRef),\n      { provide: SLIDE_IN_DATA, useValue: undefined },\n    ],\n  });\n\n  beforeEach(() => {\n    spectator = createComponent({\n      props: {\n        dataset,\n      },\n    });\n    loader = TestbedHarnessEnvironment.loader(spectator.fixture);\n  });\n\n  it('shows a title of current dataset', () => {\n    expect(spectator.query('.title .prefix')).toHaveText('Details for');\n    expect(spectator.query('.title .mobile-prefix')).toHaveText('Details for');\n    expect(spectator.query('.title .full-path')).toHaveText('child');\n  });\n\n  it('opens a dataset form when Add Dataset is pressed', async () => {\n    const addDatasetButton = await loader.getHarness(MatButtonHarness.with({ text: 'Add Dataset' }));\n    await addDatasetButton.click();\n    expect(spectator.inject(IxSlideInService).open).toHaveBeenCalledWith(\n      DatasetFormComponent,\n      { data: { datasetId: 'root/parent/child', isNew: true }, wide: true },\n    );\n  });\n\n  it('opens a zvol form when Add Zvol is pressed', async () => {\n    const addZvolButton = await loader.getHarness(MatButtonHarness.with({ text: 'Add Zvol' }));\n    await addZvolButton.click();\n    expect(spectator.inject(IxSlideInService).open).toHaveBeenCalledWith(\n      ZvolFormComponent,\n      { data: { parentId: 'root/parent/child', isNew: true } },\n    );\n  });\n\n  it('shows all the cards', () => {\n    const datasetDetailsCard = spectator.query(DatasetDetailsCardComponent);\n    expect(datasetDetailsCard).toBeTruthy();\n    expect(datasetDetailsCard.dataset).toBe(dataset);\n\n    const dataProtectionCard = spectator.query(DataProtectionCardComponent);\n    expect(dataProtectionCard).toBeTruthy();\n    expect(dataProtectionCard.dataset).toStrictEqual(datasetDetails);\n\n    const permissionsCard = spectator.query(PermissionsCardComponent);\n    expect(permissionsCard).toBeTruthy();\n    expect(permissionsCard.dataset).toStrictEqual(datasetDetails);\n\n    const zfsEncryptionCard = spectator.query(ZfsEncryptionCardComponent);\n    expect(zfsEncryptionCard).toBeTruthy();\n    expect(zfsEncryptionCard.dataset).toStrictEqual(datasetDetails);\n\n    const datasetCapacityManagementCard = spectator.query(DatasetCapacityManagementCardComponent);\n    expect(datasetCapacityManagementCard).toBeTruthy();\n    expect(datasetCapacityManagementCard.dataset).toStrictEqual(datasetDetails);\n  });\n\n  it('hides \"Permissions Card\" if dataset type is Volume', () => {\n    spectator.setInput('dataset', {\n      ...dataset,\n      type: DatasetType.Volume,\n    });\n    expect(spectator.query('ix-permissions-card')).not.toBeVisible();\n  });\n});\n"],"version":3}