{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/sharing/smb/smb-form/smb-form.component.ts","mappings":"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","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/pages/sharing/smb/smb-form/smb-form.component.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  OnInit,\n} from '@angular/core';\nimport { Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Store } from '@ngrx/store';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { isEqual } from 'lodash-es';\nimport { noop, Observable, of } from 'rxjs';\nimport {\n  debounceTime,\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { RequiresRolesDirective } from 'app/directives/requires-roles/requires-roles.directive';\nimport { DatasetPreset } from 'app/enums/dataset.enum';\nimport { Role } from 'app/enums/role.enum';\nimport { ServiceName } from 'app/enums/service-name.enum';\nimport { ServiceStatus } from 'app/enums/service-status.enum';\nimport { helptextSharingSmb } from 'app/helptext/sharing';\nimport { DatasetCreate } from 'app/interfaces/dataset.interface';\nimport { Option } from 'app/interfaces/option.interface';\nimport {\n  SmbPresets,\n  SmbPresetType,\n  SmbShare,\n} from 'app/interfaces/smb-share.interface';\nimport { WebSocketError } from 'app/interfaces/websocket-error.interface';\nimport { DialogService } from 'app/modules/dialog/dialog.service';\nimport { FormActionsComponent } from 'app/modules/forms/ix-forms/components/form-actions/form-actions.component';\nimport { IxCheckboxComponent } from 'app/modules/forms/ix-forms/components/ix-checkbox/ix-checkbox.component';\nimport { ChipsProvider } from 'app/modules/forms/ix-forms/components/ix-chips/chips-provider';\nimport { IxChipsComponent } from 'app/modules/forms/ix-forms/components/ix-chips/ix-chips.component';\nimport { IxExplorerComponent } from 'app/modules/forms/ix-forms/components/ix-explorer/ix-explorer.component';\nimport { IxFieldsetComponent } from 'app/modules/forms/ix-forms/components/ix-fieldset/ix-fieldset.component';\nimport { IxInputComponent } from 'app/modules/forms/ix-forms/components/ix-input/ix-input.component';\nimport { IxSelectComponent } from 'app/modules/forms/ix-forms/components/ix-select/ix-select.component';\nimport { IxModalHeaderComponent } from 'app/modules/forms/ix-forms/components/ix-slide-in/components/ix-modal-header/ix-modal-header.component';\nimport { IxSlideInRef } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in-ref';\nimport { SLIDE_IN_DATA } from 'app/modules/forms/ix-forms/components/ix-slide-in/ix-slide-in.token';\nimport { FormErrorHandlerService } from 'app/modules/forms/ix-forms/services/form-error-handler.service';\nimport { IxFormatterService } from 'app/modules/forms/ix-forms/services/ix-formatter.service';\nimport { AppLoaderService } from 'app/modules/loader/app-loader.service';\nimport { SnackbarService } from 'app/modules/snackbar/services/snackbar.service';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\nimport { RestartSmbDialogComponent } from 'app/pages/sharing/smb/smb-form/restart-smb-dialog/restart-smb-dialog.component';\nimport { SmbValidationService } from 'app/pages/sharing/smb/smb-form/smb-validator.service';\nimport { DatasetService } from 'app/services/dataset-service/dataset.service';\nimport { FilesystemService } from 'app/services/filesystem.service';\nimport { UserService } from 'app/services/user.service';\nimport { WebSocketService } from 'app/services/ws.service';\nimport { checkIfServiceIsEnabled } from 'app/store/services/services.actions';\nimport { ServicesState } from 'app/store/services/services.reducer';\nimport { selectService } from 'app/store/services/services.selectors';\n\n@UntilDestroy()\n@Component({\n  selector: 'ix-smb-form',\n  templateUrl: './smb-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxModalHeaderComponent,\n    MatCard,\n    MatCardContent,\n    ReactiveFormsModule,\n    IxFieldsetComponent,\n    IxExplorerComponent,\n    IxInputComponent,\n    IxSelectComponent,\n    IxCheckboxComponent,\n    IxChipsComponent,\n    FormActionsComponent,\n    RequiresRolesDirective,\n    MatButton,\n    TestDirective,\n    TranslateModule,\n  ],\n})\nexport class SmbFormComponent implements OnInit, AfterViewInit {\n  existingSmbShare: SmbShare;\n  defaultSmbShare: SmbShare;\n\n  isLoading = false;\n  isAdvancedMode = false;\n  namesInUse: string[] = [];\n  readonly helptextSharingSmb = helptextSharingSmb;\n  readonly requiredRoles = [Role.SharingSmbWrite, Role.SharingWrite];\n  private wasStripAclWarningShown = false;\n\n  groupProvider: ChipsProvider = (query) => {\n    return this.userService.groupQueryDsCache(query).pipe(\n      map((groups) => groups.map((group) => group.group)),\n    );\n  };\n\n  title: string = helptextSharingSmb.formTitleAdd;\n\n  createDatasetProps: Omit<DatasetCreate, 'name'> = {\n    share_type: DatasetPreset.Smb,\n  };\n\n  get isNew(): boolean {\n    return !this.existingSmbShare;\n  }\n\n  get isAsyncValidatorPending(): boolean {\n    return this.form.controls.name.status === 'PENDING' && this.form.controls.name.touched;\n  }\n\n  readonly treeNodeProvider = this.filesystemService.getFilesystemNodeProvider({\n    directoriesOnly: true,\n    includeSnapshots: false,\n  });\n\n  presets: SmbPresets;\n  protected presetFields: (keyof SmbShare)[] = [];\n\n  purposeOptions$: Observable<Option[]>;\n\n  get hasAddedAllowDenyHosts(): boolean {\n    const hostsallow = this.form.controls.hostsallow.value;\n    const hostsdeny = this.form.controls.hostsdeny.value;\n    return (\n      (this.isNew && hostsallow && hostsallow.length > 0)\n      || (this.isNew && hostsdeny && hostsdeny.length > 0)\n      || this.hasHostAllowDenyChanged(hostsallow, hostsdeny)\n    );\n  }\n\n  hasHostAllowDenyChanged(hostsallow: string[], hostsdeny: string[]): boolean {\n    return (\n      !isEqual(this.existingSmbShare?.hostsallow, hostsallow)\n      || !isEqual(this.existingSmbShare?.hostsdeny, hostsdeny)\n    );\n  }\n\n  get isRestartRequired(): boolean {\n    return (\n      this.isNewTimemachineShare\n      || this.isNewHomeShare\n      || this.wasPathChanged\n      || this.hasAddedAllowDenyHosts\n    );\n  }\n\n  get isNewTimemachineShare(): boolean {\n    const timemachine = this.form.controls.timemachine.value;\n    return (\n      (this.isNew && timemachine)\n      || timemachine !== this.existingSmbShare?.timemachine\n    );\n  }\n\n  get isNewHomeShare(): boolean {\n    const homeShare = this.form.controls.home.value;\n    return (\n      (this.isNew && homeShare) || homeShare !== this.existingSmbShare?.home\n    );\n  }\n\n  get wasPathChanged(): boolean {\n    return (\n      !this.isNew && this.form.controls.path.value !== this.existingSmbShare?.path\n    );\n  }\n  hostsAllowTooltip = this.translate.instant('Enter a list of allowed hostnames or IP addresses.\\\n    Separate entries by pressing <code>Enter</code>. A more detailed description \\\n    with examples can be found \\\n    <a href=\"{url}\" target=\"_blank\">here</a>. <br><br> \\\n    If neither *Hosts Allow* or *Hosts Deny* contains \\\n    an entry, then SMB share access is allowed for any host. <br><br> \\\n    If there is a *Hosts Allow* list but no *Hosts Deny* list, then only allow \\\n    hosts on the *Hosts Allow* list. <br><br> \\\n    If there is a *Hosts Deny* list but no *Hosts Allow* list, then allow all \\\n    hosts that are not on the *Hosts Deny* list. <br><br> \\\n    If there is both a *Hosts Allow* and *Hosts Deny* list, then allow all hosts \\\n    that are on the *Hosts Allow* list. <br><br> \\\n    If there is a host not on the *Hosts Allow* and not on the *Hosts Deny* list, \\\n    then allow it.', { url: 'https://wiki.samba.org/index.php/1.4_Samba_Security' });\n\n  form = this.formBuilder.group({\n    path: ['', Validators.required],\n    name: ['', Validators.required],\n    purpose: [null as SmbPresetType],\n    comment: [''],\n    enabled: [true],\n    acl: [false],\n    ro: [false],\n    browsable: [true],\n    guestok: [false],\n    abe: [false],\n    hostsallow: [[] as string[]],\n    hostsdeny: [[] as string[]],\n    home: [false],\n    timemachine: [false],\n    timemachine_quota: [null as number],\n    afp: [false],\n    shadowcopy: [false],\n    recyclebin: [false],\n    aapl_name_mangling: [false],\n    streams: [false],\n    durablehandle: [false],\n    fsrvp: [false],\n    path_suffix: [''],\n    auxsmbconf: [''],\n    audit: this.formBuilder.group({\n      enable: [false],\n      watch_list: [[] as string[]],\n      ignore_list: [[] as string[]],\n    }),\n  });\n\n  constructor(\n    public formatter: IxFormatterService,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private ws: WebSocketService,\n    private matDialog: MatDialog,\n    private dialogService: DialogService,\n    private datasetService: DatasetService,\n    private translate: TranslateService,\n    private router: Router,\n    private userService: UserService,\n    protected loader: AppLoaderService,\n    private formErrorHandler: FormErrorHandlerService,\n    private filesystemService: FilesystemService,\n    private snackbar: SnackbarService,\n    private slideInRef: IxSlideInRef<SmbFormComponent>,\n    private store$: Store<ServicesState>,\n    private smbValidationService: SmbValidationService,\n    @Inject(SLIDE_IN_DATA) private data: { existingSmbShare?: SmbShare; defaultSmbShare?: SmbShare },\n  ) {\n    this.existingSmbShare = this.data?.existingSmbShare;\n    this.defaultSmbShare = this.data?.defaultSmbShare;\n  }\n\n  ngOnInit(): void {\n    this.setupPurposeControl();\n\n    this.setupAndApplyPurposePresets()\n      .pipe(\n        tap(() => {\n          this.setupAfpWarning();\n          this.setupMangleWarning();\n          this.setupPathControl();\n          this.setupAclControl();\n        }),\n        untilDestroyed(this),\n      )\n      .subscribe(noop);\n\n    if (this.defaultSmbShare) {\n      this.form.patchValue(this.defaultSmbShare);\n      this.setNameFromPath();\n    }\n\n    if (this.existingSmbShare) {\n      this.setSmbShareForEdit();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.form.controls.name.addAsyncValidators([\n      this.smbValidationService.validate(this.existingSmbShare?.name),\n    ]);\n  }\n\n  setupAclControl(): void {\n    this.form.controls.acl\n      .valueChanges.pipe(debounceTime(100), untilDestroyed(this))\n      .subscribe((acl) => {\n        this.checkAndShowStripAclWarning(this.form.controls.path.value, acl);\n      });\n  }\n\n  setupMangleWarning(): void {\n    this.form.controls.aapl_name_mangling.valueChanges.pipe(\n      filter(\n        (value) => value !== this.existingSmbShare?.aapl_name_mangling && !this.isNew,\n      ),\n      take(1),\n      switchMap(() => this.dialogService.confirm({\n        title: helptextSharingSmb.manglingDialog.title,\n        message: helptextSharingSmb.manglingDialog.message,\n        hideCheckbox: true,\n        buttonText: helptextSharingSmb.manglingDialog.action,\n        hideCancel: true,\n      })),\n      untilDestroyed(this),\n    )\n      .subscribe();\n  }\n\n  setupPathControl(): void {\n    this.form.controls.path.valueChanges.pipe(\n      debounceTime(50),\n      tap(() => this.setNameFromPath()),\n      untilDestroyed(this),\n    )\n      .subscribe((path) => {\n        this.checkAndShowStripAclWarning(path, this.form.controls.acl.value);\n      });\n  }\n\n  setupAfpWarning(): void {\n    this.form.controls.afp.valueChanges.pipe(untilDestroyed(this))\n      .subscribe((value: boolean) => {\n        this.afpConfirmEnable(value);\n      });\n  }\n\n  setupPurposeControl(): void {\n    this.form.controls.purpose.valueChanges.pipe(untilDestroyed(this))\n      .subscribe((value: string) => {\n        this.clearPresets();\n        this.setValuesFromPreset(value);\n      });\n  }\n\n  setNameFromPath(): void {\n    const pathControl = this.form.controls.path;\n    if (!pathControl.value) {\n      return;\n    }\n    const nameControl = this.form.controls.name;\n    if (pathControl.value && (!nameControl.value || !nameControl.dirty)) {\n      const name = pathControl.value.split('/').pop();\n      nameControl.setValue(name);\n      nameControl.markAsTouched();\n    }\n    this.cdr.markForCheck();\n  }\n\n  checkAndShowStripAclWarning(path: string, aclValue: boolean): void {\n    if (this.wasStripAclWarningShown || !path || aclValue) {\n      return;\n    }\n    this.ws\n      .call('filesystem.acl_is_trivial', [path])\n      .pipe(untilDestroyed(this))\n      .subscribe((aclIsTrivial) => {\n        if (!aclIsTrivial) {\n          this.wasStripAclWarningShown = true;\n          this.showStripAclWarning();\n        }\n      });\n  }\n\n  setValuesFromPreset(preset: string): void {\n    if (!this.presets?.[preset]) {\n      return;\n    }\n    Object.keys(this.presets[preset].params).forEach((param) => {\n      this.presetFields.push(param as keyof SmbShare);\n      // eslint-disable-next-line no-restricted-syntax\n      const ctrl = this.form.get(param);\n      if (ctrl) {\n        ctrl.setValue(this.presets[preset].params[param as keyof SmbShare]);\n        ctrl.disable();\n      }\n    });\n  }\n\n  /**\n   * @returns Observable<void> to allow setting warnings for values changes once default or previous preset is applied\n   */\n  setupAndApplyPurposePresets(): Observable<void> {\n    return this.ws.call('sharing.smb.presets').pipe(\n      switchMap((presets) => {\n        const nonClusterPresets = Object.entries(presets).reduce(\n          (acc, [presetName, preset]) => {\n            if (!preset.cluster) {\n              acc[presetName] = preset;\n            }\n            return acc;\n          },\n          {} as SmbPresets,\n        );\n        this.presets = nonClusterPresets;\n        const options = Object.entries(nonClusterPresets).map(([presetName, preset]) => ({\n          label: preset.verbose_name,\n          value: presetName,\n        }));\n        this.purposeOptions$ = of(options);\n        this.form.controls.purpose.setValue(\n          this.isNew\n            ? SmbPresetType.DefaultShareParameters\n            : this.existingSmbShare?.purpose,\n        );\n        this.cdr.markForCheck();\n        return of(null);\n      }),\n    );\n  }\n\n  showStripAclWarning(): void {\n    this.dialogService\n      .confirm({\n        title: helptextSharingSmb.stripACLDialog.title,\n        message: helptextSharingSmb.stripACLDialog.message,\n        hideCheckbox: true,\n        buttonText: helptextSharingSmb.stripACLDialog.button,\n        hideCancel: true,\n      })\n      .pipe(untilDestroyed(this))\n      .subscribe();\n  }\n\n  clearPresets(): void {\n    for (const item of this.presetFields) {\n      // eslint-disable-next-line no-restricted-syntax\n      this.form.get(item).enable();\n    }\n    this.presetFields = [];\n  }\n\n  setSmbShareForEdit(): void {\n    this.title = helptextSharingSmb.formTitleEdit;\n    const index = this.namesInUse.findIndex((name) => name === this.existingSmbShare.name);\n    if (index >= 0) {\n      this.namesInUse.splice(index, 1);\n    }\n    this.form.patchValue(this.existingSmbShare);\n  }\n\n  afpConfirmEnable(value: boolean): void {\n    if (!value) {\n      return;\n    }\n    const afpControl = this.form.controls.afp;\n    this.dialogService\n      .confirm({\n        title: helptextSharingSmb.afpDialog_title,\n        message: helptextSharingSmb.afpDialog_message,\n        hideCheckbox: false,\n        buttonText: helptextSharingSmb.afpDialog_button,\n        hideCancel: false,\n      })\n      .pipe(untilDestroyed(this))\n      .subscribe((dialogResult: boolean) => {\n        if (!dialogResult) {\n          afpControl.setValue(!value);\n        }\n      });\n  }\n\n  submit(): void {\n    const smbShare = this.form.value;\n\n    if (!smbShare.timemachine_quota || !smbShare.timemachine) {\n      smbShare.timemachine_quota = 0;\n    }\n\n    let request$: Observable<SmbShare>;\n\n    if (this.isNew) {\n      request$ = this.ws.call('sharing.smb.create', [smbShare]);\n    } else {\n      request$ = this.ws.call('sharing.smb.update', [this.existingSmbShare.id, smbShare]);\n    }\n\n    this.datasetService.rootLevelDatasetWarning(\n      smbShare.path,\n      this.translate.instant(helptextSharingSmb.root_level_warning),\n      !this.form.controls.path.dirty,\n    ).pipe(\n      filter(Boolean),\n      tap(() => {\n        this.isLoading = true;\n        this.cdr.markForCheck();\n      }),\n      switchMap(() => request$),\n      switchMap((smbShareResponse) => this.restartCifsServiceIfNecessary().pipe(\n        map(() => smbShareResponse),\n      )),\n      switchMap((smbShareResponse) => this.shouldRedirectToAclEdit().pipe(\n        map((shouldRedirect) => ({ smbShareResponse, shouldRedirect })),\n      )),\n      untilDestroyed(this),\n    ).subscribe({\n      next: ({ smbShareResponse, shouldRedirect }) => {\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        if (shouldRedirect) {\n          this.dialogService.confirm({\n            title: this.translate.instant('Configure ACL'),\n            message: this.translate.instant('Do you want to configure the ACL?'),\n            buttonText: this.translate.instant('Configure'),\n            cancelText: this.translate.instant('No'),\n            hideCheckbox: true,\n          }).pipe(untilDestroyed(this)).subscribe((isConfigure) => {\n            if (isConfigure) {\n              const homeShare = this.form.controls.home.value;\n              this.router.navigate(\n                ['/', 'datasets', 'acl', 'edit'],\n                { queryParams: { homeShare, path: smbShareResponse.path_local } },\n              );\n            }\n            this.store$.dispatch(checkIfServiceIsEnabled({ serviceName: ServiceName.Cifs }));\n            this.slideInRef.close(true);\n          });\n        } else {\n          this.store$.dispatch(checkIfServiceIsEnabled({ serviceName: ServiceName.Cifs }));\n          this.slideInRef.close(true);\n        }\n      },\n      error: (error: WebSocketError) => {\n        if (error?.reason?.includes('[ENOENT]') || error?.reason?.includes('[EXDEV]')) {\n          this.dialogService.closeAllDialogs();\n        }\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.formErrorHandler.handleWsFormError(error, this.form, {}, 'smb-form-toggle-advanced-options');\n      },\n    });\n  }\n\n  restartCifsServiceIfNecessary(): Observable<boolean> {\n    return this.promptIfRestartRequired().pipe(\n      switchMap((shouldRestart) => {\n        if (shouldRestart) {\n          return this.restartCifsService();\n        }\n        return of(false);\n      }),\n    );\n  }\n\n  promptIfRestartRequired(): Observable<boolean> {\n    return this.store$.select(selectService(ServiceName.Cifs)).pipe(\n      map((service) => service.state === ServiceStatus.Running),\n      switchMap((isRunning) => {\n        if (isRunning && this.isRestartRequired) {\n          return this.matDialog.open(RestartSmbDialogComponent, {\n            data: {\n              timemachine: this.isNewTimemachineShare,\n              homeshare: this.isNewHomeShare,\n              path: this.wasPathChanged,\n              hosts: this.hasAddedAllowDenyHosts,\n              isNew: this.isNew,\n            },\n          }).afterClosed();\n        }\n        return of(false);\n      }),\n      take(1),\n    );\n  }\n\n  restartCifsService = (): Observable<boolean> => {\n    this.loader.open();\n    return this.ws.call('service.restart', [ServiceName.Cifs]).pipe(\n      tap(() => {\n        this.loader.close();\n        this.snackbar.success(\n          this.translate.instant(\n            helptextSharingSmb.restarted_smb_dialog.message,\n          ),\n        );\n      }),\n    );\n  };\n\n  shouldRedirectToAclEdit(): Observable<boolean> {\n    const sharePath: string = this.form.controls.path.value;\n    const datasetId = sharePath.replace('/mnt/', '');\n    return this.ws.call('filesystem.stat', [sharePath]).pipe(\n      switchMap((stat) => {\n        return of(\n          stat.acl !== this.form.controls.acl.value && datasetId.includes('/'),\n        );\n      }),\n    );\n  }\n}\n"],"version":3}