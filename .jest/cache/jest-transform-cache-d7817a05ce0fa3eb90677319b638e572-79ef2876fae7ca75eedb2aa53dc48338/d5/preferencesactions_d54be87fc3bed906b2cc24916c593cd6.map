{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/preferences/preferences.actions.ts","mappings":";;;AAAA,uCAAkD;AAIrC,QAAA,iBAAiB,GAAG,IAAA,oBAAY,EAAC,0BAA0B,EAAE,IAAA,aAAK,GAAgC,CAAC,CAAC;AACpG,QAAA,kBAAkB,GAAG,IAAA,oBAAY,EAAC,wCAAwC,CAAC,CAAC;AAEzF,4DAA4D;AAC/C,QAAA,aAAa,GAAG,IAAA,oBAAY,EAAC,+BAA+B,CAAC,CAAC;AAC9D,QAAA,uBAAuB,GAAG,IAAA,oBAAY,EACjD,yCAAyC,EACzC,IAAA,aAAK,GAAwC,CAC9C,CAAC;AACW,QAAA,4BAA4B,GAAG,IAAA,oBAAY,EACtD,gDAAgD,EAChD,IAAA,aAAK,GAAsB,CAC5B,CAAC;AACW,QAAA,yBAAyB,GAAG,IAAA,oBAAY,EAAC,2CAA2C,EAAE,IAAA,aAAK,GAGpG,CAAC,CAAC;AACO,QAAA,oBAAoB,GAAG,IAAA,oBAAY,EAAC,sCAAsC,EAAE,IAAA,aAAK,GAAwB,CAAC,CAAC;AAE3G,QAAA,yBAAyB,GAAG,IAAA,oBAAY,EAAC,4CAA4C,CAAC,CAAC;AACvF,QAAA,mBAAmB,GAAG,IAAA,oBAAY,EAAC,qCAAqC,CAAC,CAAC;AAC1E,QAAA,oBAAoB,GAAG,IAAA,oBAAY,EAAC,sCAAsC,CAAC,CAAC;AAC5E,QAAA,2BAA2B,GAAG,IAAA,oBAAY,EAAC,8CAA8C,CAAC,CAAC;AAE3F,QAAA,qBAAqB,GAAG,IAAA,oBAAY,EAAC,yCAAyC,EAAE,IAAA,aAAK,GAAqB,CAAC,CAAC;AAC5G,QAAA,gBAAgB,GAAG,IAAA,oBAAY,EAAC,kCAAkC,EAAE,IAAA,aAAK,GAAqB,CAAC,CAAC;AAChG,QAAA,0BAA0B,GAAG,IAAA,oBAAY,EAAC,8CAA8C,CAAC,CAAC;AAE1F,QAAA,oBAAoB,GAAG,IAAA,oBAAY,EAAC,0CAA0C,EAAE,IAAA,aAAK,GAAwC,CAAC,CAAC;AAC/H,QAAA,qBAAqB,GAAG,IAAA,oBAAY,EAAC,2CAA2C,EAAE,IAAA,aAAK,GAAwC,CAAC,CAAC;AACjI,QAAA,qBAAqB,GAAG,IAAA,oBAAY,EAAC,4CAA4C,CAAC,CAAC;AAEnF,QAAA,6BAA6B,GAAG,IAAA,oBAAY,EACvD,yDAAyD,EACzD,IAAA,aAAK,GAAwC,CAC9C,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/store/preferences/preferences.actions.ts"],"sourcesContent":["import { createAction, props } from '@ngrx/store';\nimport { DashConfigItem } from 'app/interfaces/dash-config-item.interface';\nimport { Preferences, TableDisplayedColumns } from 'app/interfaces/preferences.interface';\n\nexport const preferencesLoaded = createAction('[Preferences API] Loaded', props<{ preferences: Preferences }>());\nexport const noPreferencesFound = createAction('[Preferences API] No Preferences Found');\n\n// TODO: These actions will be moved elsewhere in the future\nexport const themeNotFound = createAction('[Preferences] Theme Not Found');\nexport const preferredColumnsUpdated = createAction(\n  '[Preferences] Preferred Columns Updated',\n  props<{ columns: TableDisplayedColumns[] }>(),\n);\nexport const shownNewIndicatorKeysUpdated = createAction(\n  '[Preferences] Shown New Indicator Keys Updated',\n  props<{ keys: string[] }>(),\n);\nexport const localizationFormSubmitted = createAction('[Preferences] Localization Form Submitted', props<{\n  dateFormat: string;\n  timeFormat: string;\n}>());\nexport const lifetimeTokenUpdated = createAction('[Preferences] Lifetime Token Updated', props<{ lifetime: number }>());\n\nexport const autoRefreshReportsToggled = createAction('[Preferences] Auto Refresh Reports Toggled');\nexport const builtinUsersToggled = createAction('[Preferences] Builtin Users Toggled');\nexport const builtinGroupsToggled = createAction('[Preferences] Builtin Groups Toggled');\nexport const snapshotExtraColumnsToggled = createAction('[Preferences] Snapshot Extra Columns Toggled');\n\nexport const themeChangedInGuiForm = createAction('[Preferences] Theme Changed In GUI Form', props<{ theme: string }>());\nexport const guiFormSubmitted = createAction('[Preferences] GUI Form Submitted', props<{ theme: string }>());\nexport const guiFormClosedWithoutSaving = createAction('[Preferences] GUI Form Closed Without Saving');\n\nexport const dashboardStateLoaded = createAction('[Preferences API] Dashboard State Loaded', props<{ dashboardState: DashConfigItem[] }>());\nexport const dashboardStateUpdated = createAction('[Preferences API] Dashboard State Updated', props<{ dashboardState: DashConfigItem[] }>());\nexport const noDashboardStateFound = createAction('[Preferences API] No Dashboard State Found');\n\nexport const updateRebootAfterManualUpdate = createAction(\n  '[Preferences] Reboot After Manual Update Option Updated',\n  props<{ rebootAfterManualUpdate: boolean }>(),\n);\n"],"version":3}