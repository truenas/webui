{"file":"/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/isMatchWith.js","mappings":";;;;;AAAA,wEAA4C;AAC5C,0EAA8C;AAE9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AACH,SAAS,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU;IAC7C,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;IACtE,OAAO,IAAA,yBAAW,EAAC,MAAM,EAAE,MAAM,EAAE,IAAA,0BAAY,EAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;AACvE,CAAC;AAED,kBAAe,WAAW,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/lodash-es/isMatchWith.js"],"sourcesContent":["import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\n\n/**\n * This method is like `_.isMatch` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with five\n * arguments: (objValue, srcValue, index|key, object, source).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, srcValue) {\n *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n *     return true;\n *   }\n * }\n *\n * var object = { 'greeting': 'hello' };\n * var source = { 'greeting': 'hi' };\n *\n * _.isMatchWith(object, source, customizer);\n * // => true\n */\nfunction isMatchWith(object, source, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseIsMatch(object, source, getMatchData(source), customizer);\n}\n\nexport default isMatchWith;\n"],"version":3}