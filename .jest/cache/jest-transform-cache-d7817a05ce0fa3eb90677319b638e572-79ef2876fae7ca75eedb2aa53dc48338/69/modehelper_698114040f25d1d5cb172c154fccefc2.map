{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/helpers/mode.helper.ts","mappings":";;AAMA,oCAIC;AAKD,8BA0BC;AAED,kCAQC;AAnDD,6DAA2D;AAG3D;;GAEG;AACH,SAAgB,YAAY,CAAC,OAAe;IAC1C,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEjD,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;AACzB,CAAC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,IAAY;IACpC,MAAM,OAAO,GAAG,KAAK,CAAC;IACtB,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,MAAM,UAAU,GAAG,KAAK,CAAC;IAEzB,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhC,OAAO;QACL,KAAK,EAAE;YACL,CAAC,gCAAe,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;YAChD,CAAC,gCAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;YAClD,CAAC,gCAAe,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC;SACvD;QACD,KAAK,EAAE;YACL,CAAC,gCAAe,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;YAChD,CAAC,gCAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;YAClD,CAAC,gCAAe,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC;SACvD;QACD,KAAK,EAAE;YACL,CAAC,gCAAe,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;YAChD,CAAC,gCAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;YAClD,CAAC,gCAAe,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC;SACvD;KACF,CAAC;AACJ,CAAC;AAED,SAAgB,WAAW,CAAC,KAAa;IACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChC,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACvB,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/helpers/mode.helper.ts"],"sourcesContent":["import { PosixPermission } from 'app/enums/posix-acl.enum';\nimport { UnixFilePermissions } from 'app/interfaces/posix-permissions.interface';\n\n/**\n * Converts unix octal permission (usually coming from API) to an object.\n */\nexport function parseApiMode(apiMode: number): UnixFilePermissions {\n  const mode = apiMode.toString(8).substring(2, 5);\n\n  return parseMode(mode);\n}\n\n/**\n * Converts unix permissions of 764 to an object.\n */\nexport function parseMode(mode: string): UnixFilePermissions {\n  const canRead = 0b100;\n  const canWrite = 0b010;\n  const canExecute = 0b001;\n\n  const owner = parseInt(mode[0]);\n  const group = parseInt(mode[1]);\n  const other = parseInt(mode[2]);\n\n  return {\n    owner: {\n      [PosixPermission.Read]: Boolean(owner & canRead),\n      [PosixPermission.Write]: Boolean(owner & canWrite),\n      [PosixPermission.Execute]: Boolean(owner & canExecute),\n    },\n    group: {\n      [PosixPermission.Read]: Boolean(group & canRead),\n      [PosixPermission.Write]: Boolean(group & canWrite),\n      [PosixPermission.Execute]: Boolean(group & canExecute),\n    },\n    other: {\n      [PosixPermission.Read]: Boolean(other & canRead),\n      [PosixPermission.Write]: Boolean(other & canWrite),\n      [PosixPermission.Execute]: Boolean(other & canExecute),\n    },\n  };\n}\n\nexport function invertUmask(umask: string): string {\n  const perm = parseInt(umask, 8);\n  let mask = (~perm & 0o777).toString(8);\n  while (mask.length < 3) {\n    mask = '0' + mask;\n  }\n\n  return mask;\n}\n"],"version":3}