ad15b88c3337e1856539849dde2d1f02
module.exports="<div class=\"full-width container has-tooltip\">\n  @if (label || tooltip) {\n    <ix-label\n      [label]=\"label\"\n      [tooltip]=\"tooltip\"\n      [required]=\"required\"\n      [ixTestOverride]=\"controlDirective.name\"\n    ></ix-label>\n  }\n\n  <div class=\"input-container\" [class.disabled]=\"disabledState\">\n    <mat-select\n      [required]=\"required\"\n      [compareWith]=\"compareWith\"\n      [disabled]=\"disabledState\"\n      [multiple]=\"multiple\"\n      [ixTest]=\"controlDirective.name\"\n      [aria-label]=\"label\"\n      [(ngModel)]=\"value\"\n      (blur)=\"onTouch()\"\n      (ngModelChange)=\"onChange($event)\"\n    >\n      <mat-select-trigger>\n        {{ selectedLabel }}\n      </mat-select-trigger>\n\n      @if (multiple && showSelectAll) {\n        <div\n          class=\"select-all-checkbox\"\n          [ixTest]=\"[controlDirective.name, 'select-all']\"\n          (click)=\"toggleSelectAll(!selectAllState.checked)\"\n        >\n          <ix-icon\n            [name]=\"selectAllState.checked ? 'check_circle' : 'remove'\"\n          ></ix-icon>\n          {{ 'Select All' | translate }}\n        </div>\n      }\n\n      @if (opts$ | async; as opts) {\n        @if (opts.length === 0) {\n          <mat-option\n            [value]=\"null\"\n            [disabled]=\"true\"\n            [ixTest]=\"[controlDirective.name, 'no-options']\"\n          >\n            {{ 'No options' | translate }}\n          </mat-option>\n        }\n        @if (opts.length > 0 && !multiple && !required && !hideEmpty) {\n          <mat-option\n            [value]=\"emptyValue\"\n            [ixTest]=\"[controlDirective.name, 'select']\"\n          >\n            --\n          </mat-option>\n        }\n        @for (option of opts; track option.label) {\n          <mat-option\n            #ixOption\n            matTooltipPosition=\"right\"\n            [value]=\"option.value\"\n            [disabled]=\"option.disabled\"\n            [ixTest]=\"[controlDirective.name, option.label]\"\n            [matTooltip]=\"option.hoverTooltip | translate\"\n            [attr.aria-label]=\"option.label | translate\"\n          >\n            @if (multiple) {\n              <ix-icon\n                [name]=\"ixOption.selected ? 'check_circle' : 'remove'\"\n              ></ix-icon>\n            }\n            {{ option.label | translate }}\n\n            @if (option.tooltip) {\n              <ix-tooltip\n                class=\"option-tooltip\"\n                [header]=\"option.label | translate\"\n                [message]=\"option.tooltip | translate\"\n                (click)=\"onOptionTooltipClicked($event)\"\n              ></ix-tooltip>\n            }\n          </mat-option>\n        }\n      } @else {\n        @if (hasErrorInOptions) {\n          <mat-option [disabled]=\"true\" [ixTest]=\"[controlDirective.name, 'options-not-loaded']\">\n            {{ 'Options cannot be loaded' | translate }}\n          </mat-option>\n        }\n      }\n    </mat-select>\n\n    @if (isLoadingState) {\n      <mat-progress-spinner\n        class=\"loader\"\n        mode=\"indeterminate\"\n        [diameter]=\"15\"\n      ></mat-progress-spinner>\n    }\n  </div>\n\n  <ix-errors [control]=\"controlDirective.control\" [label]=\"label | translate\"></ix-errors>\n\n  @if (hint) {\n    <mat-hint>{{ hint }}</mat-hint>\n  }\n</div>\n"