{"file":"/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-button-group/ix-button-group.component.ts","mappings":";;;;;;;;;AAAA,4CAA4C;AAC5C,wCAEuB;AACvB,0CAAiE;AACjE,mEAA+G;AAC/G,6DAAuD;AACvD,8CAAsD;AAGtD,6GAAwG;AACxG,0GAAqG;AACrG,uGAAkG;AAClG,uEAAmE;AAoB5D,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IAajC,YACS,gBAA2B,EAC1B,GAAsB;QADvB,qBAAgB,GAAhB,gBAAgB,CAAW;QAC1B,QAAG,GAAH,GAAG,CAAmB;QATvB,aAAQ,GAAG,KAAK;QAEhB,iBAAY,GAAG,KAAK;QAE7B,eAAU,GAAG,KAAK,CAAC;QAUnB,aAAQ,GAA4B,GAAS,EAAE,GAAE,CAAC,CAAC;QACnD,YAAO,GAAe,GAAS,EAAE,GAAE,CAAC,CAAC;QAJnC,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;IAC7C,CAAC;IAKD,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,QAAiC;QAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,iBAAiB,CAAC,SAAqB;QACrC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc,CAAC,KAA4B;QACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAe,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;;AA5CU,wDAAsB;;;;;;oBAChC,YAAK;mBACL,YAAK;sBACL,YAAK;uBACL,YAAK;sBACL,YAAK;uBACL,YAAK;2BACL,kBAAW,SAAC,oBAAoB,cAChC,YAAK;;iCARK,sBAAsB;IAlBlC,IAAA,gBAAS,EAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,qDAA+C;QAE/C,eAAe,EAAE,8BAAuB,CAAC,MAAM;QAC/C,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE;YACP,qCAAgB;YAChB,oCAAoB;YACpB,+BAAe;YACf,uCAAiB;YACjB,oBAAO;YACP,kBAAS;YACT,sBAAe;YACf,+CAAqB;YACrB,8BAAa;SACd;KACF,CAAC;GACW,sBAAsB,CA6ClC","names":[],"sources":["/Users/macbook/karpov-work/TrueNAS/webui/src/app/modules/forms/ix-forms/components/ix-button-group/ix-button-group.component.ts"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Input,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggle } from '@angular/material/button-toggle';\nimport { MatHint } from '@angular/material/form-field';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Option } from 'app/interfaces/option.interface';\nimport { IxErrorsComponent } from 'app/modules/forms/ix-forms/components/ix-errors/ix-errors.component';\nimport { IxLabelComponent } from 'app/modules/forms/ix-forms/components/ix-label/ix-label.component';\nimport { TestOverrideDirective } from 'app/modules/test-id/test-override/test-override.directive';\nimport { TestDirective } from 'app/modules/test-id/test.directive';\n\n@Component({\n  selector: 'ix-button-group',\n  templateUrl: './ix-button-group.component.html',\n  styleUrls: ['./ix-button-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IxLabelComponent,\n    MatButtonToggleGroup,\n    MatButtonToggle,\n    IxErrorsComponent,\n    MatHint,\n    AsyncPipe,\n    TranslateModule,\n    TestOverrideDirective,\n    TestDirective,\n  ],\n})\nexport class IxButtonGroupComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() hint: string;\n  @Input() tooltip: string;\n  @Input() required: boolean;\n  @Input() options: Observable<Option[]>;\n  @Input() vertical = false;\n  @HostBinding('class.inlineFields')\n  @Input() inlineFields = false;\n\n  isDisabled = false;\n  value: string;\n\n  constructor(\n    public controlDirective: NgControl,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.controlDirective.valueAccessor = this;\n  }\n\n  onChange: (value: string) => void = (): void => {};\n  onTouch: () => void = (): void => {};\n\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(onChange: (value: string) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouch = onTouched;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  onValueChanged(event: MatButtonToggleChange): void {\n    this.value = event.value as string;\n    this.onChange(this.value);\n  }\n}\n"],"version":3}