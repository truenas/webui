{
  "version": 3,
  "sources": ["/Users/macbook/karpov-work/TrueNAS/webui/node_modules/@ngneat/spectator/fesm2022/ngneat-spectator-jest.mjs"],
  "sourcesContent": ["import { installProtoMethods, createComponentFactory as createComponentFactory$1, isType, Spectator as Spectator$1, createHttpFactory as createHttpFactory$1, SpectatorDirective as SpectatorDirective$1, createDirectiveFactory as createDirectiveFactory$1, createServiceFactory as createServiceFactory$1, SpectatorHost as SpectatorHost$1, createHostFactory as createHostFactory$1, SpectatorRouting as SpectatorRouting$1, createRoutingFactory as createRoutingFactory$1, SpectatorPipe as SpectatorPipe$1, createPipeFactory as createPipeFactory$1 } from '@ngneat/spectator';\nexport { HttpMethod, byAltText, byLabel, byPlaceholder, byRole, byTestId, byText, byTextContent, byTitle, byValue } from '@ngneat/spectator';\nimport { jest } from '@jest/globals';\n\n/// <reference types=\"jest\" />\n/**\n * @publicApi\n */\nfunction createSpyObject(type, template) {\n    const mock = { ...template } || {};\n    installProtoMethods(mock, type.prototype, () => {\n        const jestFn = jest.fn();\n        const newSpy = jestFn;\n        newSpy.andCallFake = (fn) => {\n            jestFn.mockImplementation(fn);\n            return newSpy;\n        };\n        newSpy.andReturn = (val) => {\n            jestFn.mockReturnValue(val);\n        };\n        newSpy.reset = () => {\n            jestFn.mockReset();\n        };\n        return newSpy;\n    });\n    return mock;\n}\n/**\n * @publicApi\n */\nfunction mockProvider(type, properties) {\n    return {\n        provide: type,\n        useFactory: () => createSpyObject(type, properties),\n    };\n}\n\nfunction createComponentFactory(typeOrOptions) {\n    return createComponentFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { component: typeOrOptions } : typeOrOptions),\n    });\n}\nclass Spectator extends Spectator$1 {\n    inject(token, fromComponentInjector = false) {\n        return super.inject(token, fromComponentInjector);\n    }\n}\n\n/**\n * @publicApi\n */\nfunction createHttpFactory(typeOrOptions) {\n    return createHttpFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { service: typeOrOptions } : typeOrOptions),\n    });\n}\n\n/**\n * @publicApi\n */\nclass SpectatorDirective extends SpectatorDirective$1 {\n    inject(token, fromComponentInjector = false) {\n        return super.inject(token, fromComponentInjector);\n    }\n}\nfunction createDirectiveFactory(typeOrOptions) {\n    return createDirectiveFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { directive: typeOrOptions } : typeOrOptions),\n    });\n}\n\n/**\n * @publicApi\n */\nfunction createServiceFactory(typeOrOptions) {\n    return createServiceFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { service: typeOrOptions } : typeOrOptions),\n    });\n}\n\n/**\n * @publicApi\n */\nclass SpectatorHost extends SpectatorHost$1 {\n    inject(token, fromComponentInjector = false) {\n        return super.inject(token, fromComponentInjector);\n    }\n}\nfunction createHostFactory(typeOrOptions) {\n    return createHostFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { component: typeOrOptions } : typeOrOptions),\n    });\n}\n\n/**\n * @publicApi\n */\nclass SpectatorRouting extends SpectatorRouting$1 {\n    inject(token, fromComponentInjector = false) {\n        return super.inject(token, fromComponentInjector);\n    }\n}\n/**\n * @publicApi\n */\nfunction createRoutingFactory(typeOrOptions) {\n    return createRoutingFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { component: typeOrOptions } : typeOrOptions),\n    });\n}\n\n/**\n * @publicApi\n */\nclass SpectatorPipe extends SpectatorPipe$1 {\n    inject(token) {\n        return super.inject(token);\n    }\n}\n/**\n * @publicApi\n */\nfunction createPipeFactory(typeOrOptions) {\n    return createPipeFactory$1({\n        mockProvider,\n        ...(isType(typeOrOptions) ? { pipe: typeOrOptions } : typeOrOptions),\n    });\n}\n\n/// <reference types=\"jest\" />\n/// <reference path=\"./lib/matchers-types.ts\" />\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Spectator, SpectatorDirective, SpectatorHost, SpectatorPipe, SpectatorRouting, createComponentFactory, createDirectiveFactory, createHostFactory, createHttpFactory, createPipeFactory, createRoutingFactory, createServiceFactory, createSpyObject, mockProvider };\n//# sourceMappingURL=ngneat-spectator-jest.mjs.map\n"],
  "mappings": "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",
  "names": ["import_spectator", "createComponentFactory$1", "Spectator$1", "createHttpFactory$1", "SpectatorDirective$1", "createDirectiveFactory$1", "createServiceFactory$1", "SpectatorHost$1", "createHostFactory$1", "SpectatorRouting$1", "createRoutingFactory$1", "SpectatorPipe$1", "createPipeFactory$1"]
}
